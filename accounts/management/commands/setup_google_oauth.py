from django.core.management.base import BaseCommand
from django.contrib.sites.models import Site
from allauth.socialaccount.models import SocialApp
from django.conf import settings
from decouple import config


class Command(BaseCommand):
    help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google OAuth –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--client-id',
            type=str,
            help='Google OAuth Client ID',
        )
        parser.add_argument(
            '--secret',
            type=str,
            help='Google OAuth Secret',
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google OAuth...\n')
        )

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∞–π—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        self.setup_local_site()

        # –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        client_id = options.get('client_id') or config('GOOGLE_OAUTH2_CLIENT_ID', default='')
        secret = options.get('secret') or config('GOOGLE_OAUTH2_SECRET', default='')

        if not client_id or not secret:
            self.stdout.write(
                self.style.ERROR(
                    '‚ùå Google OAuth —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!\n'
                    '–î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ .env —Ñ–∞–π–ª:\n'
                    'GOOGLE_OAUTH2_CLIENT_ID=–≤–∞—à_client_id\n'
                    'GOOGLE_OAUTH2_SECRET=–≤–∞—à_secret\n\n'
                    '–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n'
                    'python manage.py setup_google_oauth --client-id=xxx --secret=yyy'
                )
            )
            return

        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.create_google_app(client_id, secret)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.check_setup()

        self.stdout.write(
            self.style.SUCCESS(
                '\n‚úÖ Google OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω!\n'
                '–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Google –Ω–∞:\n'
                'http://127.0.0.1:8000/accounts/login/\n'
            )
        )

    def setup_local_site(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
        site, created = Site.objects.get_or_create(
            pk=settings.SITE_ID,
            defaults={
                'domain': '127.0.0.1:8000',
                'name': '–ü—Ä–∞–≤–æ—Å–ª–∞–≤–∏–µ –ü–æ—Ä—Ç–∞–ª (–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞)'
            }
        )

        if not created and site.domain != '127.0.0.1:8000':
            site.domain = '127.0.0.1:8000'
            site.name = '–ü—Ä–∞–≤–æ—Å–ª–∞–≤–∏–µ –ü–æ—Ä—Ç–∞–ª (–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞)'
            site.save()
            self.stdout.write('üîÑ –°–∞–π—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')
        else:
            self.stdout.write(f'‚úÖ –°–∞–π—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {site.domain}')

        return site

    def create_google_app(self, client_id, secret):
        """–°–æ–∑–¥–∞–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç Google OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
        google_app, created = SocialApp.objects.get_or_create(
            provider='google',
            defaults={
                'name': 'Google OAuth2',
                'client_id': client_id,
                'secret': secret,
            }
        )

        if not created:
            google_app.client_id = client_id
            google_app.secret = secret
            google_app.save()
            self.stdout.write('üîÑ Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ')
        else:
            self.stdout.write('‚úÖ Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ')

        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ —Å–∞–π—Ç—É
        site = Site.objects.get(pk=settings.SITE_ID)
        google_app.sites.add(site)
        self.stdout.write(f'‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Å–∞–π—Ç—É {site.domain}')

        return google_app

    def check_setup(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        self.stdout.write('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        has_google_provider = 'google' in settings.SOCIALACCOUNT_PROVIDERS
        self.stdout.write(f'   Google –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {"‚úÖ" if has_google_provider else "‚ùå"}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç
        try:
            site = Site.objects.get(pk=settings.SITE_ID)
            self.stdout.write(f'   –°–∞–π—Ç: ‚úÖ {site.domain}')
        except Site.DoesNotExist:
            self.stdout.write('   –°–∞–π—Ç: ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω')
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        try:
            google_app = SocialApp.objects.get(provider='google')
            self.stdout.write(f'   Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ‚úÖ {google_app.name}')
            
            has_client_id = bool(google_app.client_id)
            has_secret = bool(google_app.secret)
            is_linked_to_site = site in google_app.sites.all()
            
            self.stdout.write(f'   Client ID: {"‚úÖ" if has_client_id else "‚ùå"}')
            self.stdout.write(f'   Secret: {"‚úÖ" if has_secret else "‚ùå"}')
            self.stdout.write(f'   –ü—Ä–∏–≤—è–∑–∞–Ω –∫ —Å–∞–π—Ç—É: {"‚úÖ" if is_linked_to_site else "‚ùå"}')
            
        except SocialApp.DoesNotExist:
            self.stdout.write('   Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        self.stdout.write('\nüîó URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:')
        self.stdout.write(f'   –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞: http://127.0.0.1:8000/accounts/login/')
        self.stdout.write(f'   Google OAuth: http://127.0.0.1:8000/accounts/google/login/')
        self.stdout.write(f'   Callback URL: http://127.0.0.1:8000/accounts/google/login/callback/')
