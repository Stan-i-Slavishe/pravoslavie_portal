# accounts/views.py - Кастомные view для аутентификации\n\nfrom django.shortcuts import redirect\nfrom django.urls import reverse\nfrom django.contrib.auth.views import LoginView\nfrom allauth.socialaccount.models import SocialApp\nfrom allauth.socialaccount.helpers import complete_social_login\nfrom allauth.socialaccount import providers\nfrom django.http import HttpResponseRedirect\n\ndef google_login_redirect(request):\n    \"\"\"\n    Прямое перенаправление на Google OAuth без промежуточной страницы\n    \"\"\"\n    try:\n        # Получаем Google провайдер\n        from allauth.socialaccount.providers.google.views import GoogleOAuth2Adapter\n        from allauth.socialaccount.providers.oauth2.views import OAuth2LoginView\n        \n        # Получаем URL для авторизации Google\n        google_provider = providers.registry.by_id('google')\n        login_url = google_provider.get_login_url(request)\n        \n        # Прямое перенаправление на Google\n        return HttpResponseRedirect(login_url)\n        \n    except Exception as e:\n        # В случае ошибки перенаправляем на обычный вход\n        return redirect('accounts:login')\n\nclass CustomLoginView(LoginView):\n    \"\"\"\n    Кастомная страница входа с улучшенным дизайном\n    \"\"\"\n    template_name = 'accounts/login.html'\n    \n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context.update({\n            'title': 'Вход в аккаунт',\n            'show_google_login': True,  # Показывать кнопку входа через Google\n        })\n        return context\n