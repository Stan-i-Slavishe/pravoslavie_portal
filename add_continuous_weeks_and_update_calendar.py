#!/usr/bin/env python
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–ª–æ—à–Ω—ã—Ö —Å–µ–¥–º–∏—Ü –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º 80/20
"""

import os
import sys
import django
from datetime import date, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from pwa.models import OrthodoxEvent, DailyOrthodoxInfo

def add_continuous_weeks_2025():
    """–î–æ–±–∞–≤–∏—Ç—å —Å–ø–ª–æ—à–Ω—ã–µ —Å–µ–¥–º–∏—Ü—ã (–Ω–µ–¥–µ–ª–∏ –±–µ–∑ –ø–æ—Å—Ç–∞ –≤ —Å—Ä–µ–¥—É/–ø—è—Ç–Ω–∏—Ü—É) –Ω–∞ 2025 –≥–æ–¥"""
    
    print("üóìÔ∏è –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–ª–æ—à–Ω—ã–µ —Å–µ–¥–º–∏—Ü—ã –Ω–∞ 2025 –≥–æ–¥...")
    
    continuous_weeks_2025 = [
        {
            'name': '–°–≤—è—Ç–∫–∏ (–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–µ)',
            'start_date': date(2025, 1, 8),
            'end_date': date(2025, 1, 17),
            'description': '–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–µ –°–≤—è—Ç–∫–∏ - –≤—Ä–µ–º—è —Ä–∞–¥–æ—Å—Ç–∏ –∏ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –û—Ç–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å—Ç –≤ —Å—Ä–µ–¥—É –∏ –ø—è—Ç–Ω–∏—Ü—É.'
        },
        {
            'name': '–ù–µ–¥–µ–ª—è –º—ã—Ç–∞—Ä—è –∏ —Ñ–∞—Ä–∏—Å–µ—è',
            'start_date': date(2025, 2, 10),
            'end_date': date(2025, 2, 16),
            'description': '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω–∞—è –Ω–µ–¥–µ–ª—è –∫ –í–µ–ª–∏–∫–æ–º—É –ø–æ—Å—Ç—É. –û—Ç–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å—Ç –≤ —Å—Ä–µ–¥—É –∏ –ø—è—Ç–Ω–∏—Ü—É.'
        },
        {
            'name': '–ú–∞—Å–ª–µ–Ω–∏—Ü–∞ (–°—ã—Ä–Ω–∞—è —Å–µ–¥–º–∏—Ü–∞)',
            'start_date': date(2025, 2, 24),
            'end_date': date(2025, 3, 2),
            'description': '–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–µ–¥–µ–ª—è –ø–µ—Ä–µ–¥ –í–µ–ª–∏–∫–∏–º –ø–æ—Å—Ç–æ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã. –û—Ç–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å—Ç –≤ —Å—Ä–µ–¥—É –∏ –ø—è—Ç–Ω–∏—Ü—É.'
        },
        {
            'name': '–°–≤–µ—Ç–ª–∞—è –ü–∞—Å—Ö–∞–ª—å–Ω–∞—è —Å–µ–¥–º–∏—Ü–∞',
            'start_date': date(2025, 4, 21),
            'end_date': date(2025, 4, 27),
            'description': '–ü–∞—Å—Ö–∞–ª—å–Ω–∞—è –Ω–µ–¥–µ–ª—è - –≤—Ä–µ–º—è –≤–µ–ª–∏—á–∞–π—à–µ–π —Ä–∞–¥–æ—Å—Ç–∏ –í–æ—Å–∫—Ä–µ—Å–µ–Ω–∏—è –•—Ä–∏—Å—Ç–æ–≤–∞. –û—Ç–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å—Ç –≤ —Å—Ä–µ–¥—É –∏ –ø—è—Ç–Ω–∏—Ü—É.'
        },
        {
            'name': '–¢—Ä–æ–∏—Ü–∫–∞—è —Å–µ–¥–º–∏—Ü–∞',
            'start_date': date(2025, 6, 9),
            'end_date': date(2025, 6, 15),
            'description': '–ù–µ–¥–µ–ª—è –ø–æ—Å–ª–µ –¢—Ä–æ–∏—Ü—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ü–µ—Ç—Ä–æ–≤–∞ –ø–æ—Å—Ç–∞. –û—Ç–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å—Ç –≤ —Å—Ä–µ–¥—É –∏ –ø—è—Ç–Ω–∏—Ü—É.'
        }
    ]
    
    created_count = 0
    
    for week_info in continuous_weeks_2025:
        print(f"\\nüìÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {week_info['name']}")
        
        current_date = week_info['start_date']
        day_count = 0
        
        while current_date <= week_info['end_date']:
            existing_event = OrthodoxEvent.objects.filter(
                month=current_date.month,
                day=current_date.day,
                title__icontains='—Å–ø–ª–æ—à–Ω–∞—è'
            ).first()
            
            if not existing_event:
                event = OrthodoxEvent.objects.create(
                    title=f"–°–ø–ª–æ—à–Ω–∞—è —Å–µ–¥–º–∏—Ü–∞: {week_info['name']}",
                    description=week_info['description'],
                    event_type='special_day',
                    month=current_date.month,
                    day=current_date.day,
                    year=None
                )
                created_count += 1
                day_count += 1
                print(f"   ‚úÖ {current_date.strftime('%d.%m')} - —Å–æ–∑–¥–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ")
            else:
                print(f"   ‚è≠Ô∏è {current_date.strftime('%d.%m')} - —Å–æ–±—ã—Ç–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            current_date += timedelta(days=1)
        
        print(f"   üìä –î–Ω–µ–π –≤ —Å–µ–¥–º–∏—Ü–µ: {day_count}")
    
    print(f"\\nüéâ –î–æ–±–∞–≤–ª–µ–Ω–æ {created_count} —Å–æ–±—ã—Ç–∏–π —Å–ø–ª–æ—à–Ω—ã—Ö —Å–µ–¥–º–∏—Ü!")
    return created_count

def create_test_events():
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è"""
    
    print("üé≠ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è...")
    
    test_events = [
        {
            'date': (1, 7),
            'title': '–†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ',
            'description': '–í–µ–ª–∏–∫–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –†–æ–∂–¥–µ—Å—Ç–≤–∞ –ì–æ—Å–ø–æ–¥–∞ –Ω–∞—à–µ–≥–æ –ò–∏—Å—É—Å–∞ –•—Ä–∏—Å—Ç–∞',
            'event_type': 'great_feast'
        },
        {
            'date': (8, 19),
            'title': '–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ì–æ—Å–ø–æ–¥–Ω–µ',
            'description': '–í–µ–ª–∏–∫–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—è –ì–æ—Å–ø–æ–¥–∞',
            'event_type': 'great_feast'
        },
        {
            'date': (8, 29),
            'title': '–û—Ä–µ—Ö–æ–≤—ã–π –°–ø–∞—Å (–ù–µ—Ä—É–∫–æ—Ç–≤–æ—Ä–Ω—ã–π –û–±—Ä–∞–∑)',
            'description': '–¢—Ä–µ—Ç–∏–π –°–ø–∞—Å. –û—Å–≤—è—â–µ–Ω–∏–µ –æ—Ä–µ—Ö–æ–≤ –∏ —Ö–ª–µ–±–∞ –Ω–æ–≤–æ–≥–æ —É—Ä–æ–∂–∞—è.',
            'event_type': 'major_feast'
        }
    ]
    
    created_count = 0
    
    for event_info in test_events:
        month, day = event_info['date']
        
        existing = OrthodoxEvent.objects.filter(
            month=month,
            day=day,
            title=event_info['title']
        ).first()
        
        if not existing:
            event = OrthodoxEvent.objects.create(
                title=event_info['title'],
                description=event_info['description'],
                event_type=event_info['event_type'],
                month=month,
                day=day
            )
            created_count += 1
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ: {day:02d}.{month:02d} - {event_info['title']}")
        else:
            print(f"‚è≠Ô∏è –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {day:02d}.{month:02d} - {event_info['title']}")
    
    print(f"üéâ –°–æ–∑–¥–∞–Ω–æ {created_count} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π!")
    return created_count

def test_combined_display():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
    
    print("\\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
    
    from pwa.views import get_day_type_for_calendar
    
    test_dates = [
        (date(2025, 8, 29), "–û—Ä–µ—Ö–æ–≤—ã–π –°–ø–∞—Å + –£—Å–µ–∫–Ω–æ–≤–µ–Ω–∏–µ –≥–ª–∞–≤—ã –ò–æ–∞–Ω–Ω–∞ –ü—Ä–µ–¥—Ç–µ—á–∏"),
        (date(2025, 1, 7), "–†–æ–∂–¥–µ—Å—Ç–≤–æ + –°–≤—è—Ç–∫–∏"),
        (date(2025, 6, 15), "–¢—Ä–æ–∏—Ü–∫–∞—è —Å–µ–¥–º–∏—Ü–∞"),
        (date(2025, 8, 19), "–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ì–æ—Å–ø–æ–¥–Ω–µ"),
        (date(2025, 3, 3), "–í–µ–ª–∏–∫–∏–π –ø–æ—Å—Ç"),
        (date(2025, 5, 15), "–û–±—ã—á–Ω—ã–π –¥–µ–Ω—å"),
    ]
    
    for test_date, description in test_dates:
        try:
            daily_info = DailyOrthodoxInfo.get_info_for_date(test_date)
            events = OrthodoxEvent.get_events_for_date(test_date)
            day_type = get_day_type_for_calendar(test_date, daily_info, events)
            
            color_description = {
                'holiday': 'üî¥ –ö—Ä–∞—Å–Ω—ã–π (–ø—Ä–∞–∑–¥–Ω–∏–∫)',
                'fast-day': 'üü£ –§–∏–æ–ª–µ—Ç–æ–≤—ã–π (–ø–æ—Å—Ç)',
                'continuous-week': 'üü¢ –ó–µ–ª–µ–Ω—ã–π (—Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è)',
                'holiday-fast': 'üî¥üü£ –ö—Ä–∞—Å–Ω—ã–π + —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π (80/20)',
                'holiday-continuous': 'üî¥üü¢ –ö—Ä–∞—Å–Ω—ã–π + –∑–µ–ª–µ–Ω—ã–π (80/20)',
                'fast-continuous': 'üü£üü¢ –§–∏–æ–ª–µ—Ç–æ–≤—ã–π + –∑–µ–ª–µ–Ω—ã–π (80/20)',
                'feast': '‚ö™ –û–±—ã—á–Ω—ã–π (–±–µ–∑ –≤—ã–¥–µ–ª–µ–Ω–∏—è)'
            }.get(day_type, '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø')
            
            print(f"üìÖ {test_date.strftime('%d.%m.%Y')} - {description}")
            print(f"   –¢–∏–ø –¥–Ω—è: {day_type}")
            print(f"   –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {color_description}")
            print(f"   –°–æ–±—ã—Ç–∏—è: {[event.title for event in events]}")
            print()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {test_date}: {e}")
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º")
    print("=" * 70)
    
    try:
        # 1. –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–ª–æ—à–Ω—ã–µ —Å–µ–¥–º–∏—Ü—ã
        continuous_count = add_continuous_weeks_2025()
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
        events_count = create_test_events()
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        test_combined_display()
        
        print("=" * 70)
        print("üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–ø–ª–æ—à–Ω—ã—Ö —Å–µ–¥–º–∏—Ü: {continuous_count}")
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π: {events_count}")
        print()
        print("üé® –¢–µ–ø–µ—Ä—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –¥–æ—Å—Ç—É–ø–Ω–æ:")
        print("   üî¥ –ö—Ä–∞—Å–Ω—ã–π - –ø—Ä–∞–∑–¥–Ω–∏–∫–∏")
        print("   üü£ –§–∏–æ–ª–µ—Ç–æ–≤—ã–π - –ø–æ—Å—Ç—ã")
        print("   üü¢ –ó–µ–ª–µ–Ω—ã–π - —Å–ø–ª–æ—à–Ω—ã–µ –Ω–µ–¥–µ–ª–∏")
        print("   üé≠ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ (80/20) - –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏–π –≤ –æ–¥–∏–Ω –¥–µ–Ω—å")
        print()
        print("üîß –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
