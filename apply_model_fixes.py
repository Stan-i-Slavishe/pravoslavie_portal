#!/usr/bin/env python
"""
–ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ –º–æ–¥–µ–ª–∏ Playlist
"""

import os
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

print("üîß –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ú–û–î–ï–õ–ò")
print("=" * 50)

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
print("\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
from django.core.management import call_command

try:
    call_command('makemigrations', 'stories', '--name=fix_playlist_duplicates')
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
except Exception as e:
    print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏: {e}")

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
print("\n‚öôÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
try:
    call_command('migrate', 'stories')
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
except Exception as e:
    print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏: {e}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏...")
try:
    from stories.models import Playlist, PlaylistItem, Story
    print("‚úÖ –í—Å–µ –º–æ–¥–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    
    playlist_count = Playlist.objects.count()
    items_count = PlaylistItem.objects.count()
    stories_count = Story.objects.count()
    
    print(f"üìä –ü–ª–µ–π–ª–∏—Å—Ç–æ–≤: {playlist_count}")
    print(f"üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤: {items_count}")
    print(f"üìä –†–∞—Å—Å–∫–∞–∑–æ–≤: {stories_count}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

print("\n" + "=" * 50)
print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´!")
print("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:")
print("python manage.py runserver")
