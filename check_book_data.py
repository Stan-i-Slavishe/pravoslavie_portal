#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

django.setup()

from books.models import Book

def check_book_data():
    print("üîç –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –ö–ù–ò–ì–ò –í –ë–î")
    print("=" * 50)
    
    try:
        # –ò—â–µ–º –∫–Ω–∏–≥—É "–Ø–Ω–¥–µ–∫—Å –¥–∏—Ä–µ–∫—Ç"
        books = Book.objects.filter(title__icontains="—è–Ω–¥–µ–∫—Å")
        
        if not books.exists():
            print("‚ùå –ö–Ω–∏–≥–∞ '–Ø–Ω–¥–µ–∫—Å –¥–∏—Ä–µ–∫—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            print("\n–í—Å–µ –∫–Ω–∏–≥–∏ –≤ –ë–î:")
            for book in Book.objects.all():
                print(f"  - ID: {book.id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {book.title}")
            return
        
        book = books.first()
        print(f"‚úÖ –ö–Ω–∏–≥–∞ –Ω–∞–π–¥–µ–Ω–∞!")
        print(f"   ID: {book.id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: '{book.title}'")
        print(f"   –ê–≤—Ç–æ—Ä: '{book.author}'")
        print(f"   Slug: '{book.slug}'")
        print(f"   –§–æ—Ä–º–∞—Ç: '{book.format}'")
        print(f"   –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è: {book.is_free}")
        print(f"   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞: {book.is_published}")
        
        if book.file:
            print(f"   –§–∞–π–ª: '{book.file.name}'")
            print(f"   –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: '{book.file.path}'")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            import os
            if os.path.exists(book.file.path):
                print(f"   ‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ –¥–∏—Å–∫–µ")
                print(f"   –†–∞–∑–º–µ—Ä: {os.path.getsize(book.file.path)} –±–∞–π—Ç")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
                file_extension = os.path.splitext(book.file.name)[1]
                print(f"   –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞: '{file_extension}'")
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –∏–º—è
                import re
                safe_title = re.sub(r'[<>:"/\\|?*]', '', book.title)
                safe_title = safe_title.strip()
                
                final_extension = file_extension if file_extension else f'.{book.format}'
                filename = f"{safe_title}{final_extension}"
                
                print(f"   –û—á–∏—â–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: '{safe_title}'")
                print(f"   –ò—Ç–æ–≥–æ–≤–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: '{final_extension}'")
                print(f"   üéØ –ò–¢–û–ì–û–í–û–ï –ò–ú–Ø –§–ê–ô–õ–ê: '{filename}'")
                
            else:
                print(f"   ‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ –¥–∏—Å–∫–µ!")
        else:
            print(f"   ‚ùå –ü–æ–ª–µ file –ø—É—Å—Ç–æ–µ!")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        from django.urls import reverse
        download_url = reverse('books:download', kwargs={'book_id': book.id})
        print(f"   URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_url}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_book_data()
