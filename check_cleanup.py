#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
‚úÖ –°–ö–†–ò–ü–¢ –ü–†–û–í–ï–†–ö–ò –ß–ò–°–¢–û–¢–´ –ü–†–û–ï–ö–¢–ê
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —É–¥–∞–ª–µ–Ω—ã
"""

import os
import glob

def check_cleanup():
    print("‚úÖ –ü–†–û–í–ï–†–ö–ê –ß–ò–°–¢–û–¢–´ –ü–†–û–ï–ö–¢–ê –û–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í")
    print("=" * 50)
    
    issues = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
    root_patterns = [
        '*comment*.py',
        '*comment*.bat',
        'diagnose_*.py', 
        'diagnose_*.bat',
        'fix_*.py',
        'fix_*.bat',
        'test_*.py',
        'test_*.bat',
        'emergency_*.py',
        'emergency_*.bat'
    ]
    
    for pattern in root_patterns:
        files = glob.glob(pattern)
        if files:
            for file in files:
                if file not in ['cleanup_db.py', 'cleanup_all_comments.bat', 'check_cleanup.py']:
                    issues.append(f"‚ùå –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {file}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print("üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    dirs_to_check = [
        'comments',
        'templates/stories/comments',
        'static/comments',
        'staticfiles/comments'
    ]
    
    for dir_path in dirs_to_check:
        if os.path.exists(dir_path):
            issues.append(f"‚ùå –ù–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ stories/
    print("üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ stories/...")
    stories_patterns = [
        'stories/comment_*.py',
        'stories/views_comments.py',
        'stories/*comment*.py'
    ]
    
    for pattern in stories_patterns:
        files = glob.glob(pattern)
        if files:
            for file in files:
                issues.append(f"‚ùå –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {file}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    print("üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...")
    static_patterns = [
        'static/stories/js/*comment*.js',
        'static/stories/css/*comment*.css',
        'static/stories/js/youtube_*.js',
        'staticfiles/stories/js/*comment*.js',
        'staticfiles/stories/css/*comment*.css'
    ]
    
    for pattern in static_patterns:
        files = glob.glob(pattern)
        if files:
            for file in files:
                issues.append(f"‚ùå –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {file}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
    print("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π...")
    migration_patterns = [
        'stories/migrations/*comment*.py',
        'stories/migrations/*youtube*.py'
    ]
    
    for pattern in migration_patterns:
        files = glob.glob(pattern)
        if files:
            for file in files:
                issues.append(f"‚ùå –ù–∞–π–¥–µ–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è: {file}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
    print("üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...")
    template_patterns = [
        'templates/stories/*comment*.html',
        'templates/stories/partials/*comment*.html',
        'templates/stories/partials/youtube_*.html'
    ]
    
    for pattern in template_patterns:
        files = glob.glob(pattern)
        if files:
            for file in files:
                issues.append(f"‚ùå –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω: {file}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ stories/urls.py
    print("üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ URLs...")
    if os.path.exists('stories/urls.py'):
        with open('stories/urls.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        problematic_terms = [
            'comment_views',
            'ajax/comment/',
            'ajax/reply/',
            'ajax/comments/',
            'simple/comment/'
        ]
        
        for term in problematic_terms:
            if term in content:
                issues.append(f"‚ùå –í stories/urls.py –Ω–∞–π–¥–µ–Ω: {term}")
    
    # 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ stories/models.py
    print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π...")
    if os.path.exists('stories/models.py'):
        with open('stories/models.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        comment_models = [
            'class StoryComment',
            'class StoryCommentLike',
            'class CommentReport'
        ]
        
        for model in comment_models:
            if model in content:
                issues.append(f"‚ùå –í stories/models.py –Ω–∞–π–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å: {model}")
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
    print("\n" + "=" * 50)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 50)
    
    if not issues:
        print("üéâ –û–¢–õ–ò–ß–ù–û! –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω –æ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤!")
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —É–¥–∞–ª–µ–Ω—ã")
        print("‚úÖ URLs –æ—á–∏—â–µ–Ω—ã")
        print("‚úÖ –ú–æ–¥–µ–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤!")
        return True
    else:
        print("‚ö†Ô∏è –ù–ê–ô–î–ï–ù–´ –û–°–¢–ê–¢–ö–ò –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í:")
        for issue in issues:
            print(f"   {issue}")
        
        print(f"\nüìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {len(issues)}")
        print("\nüîß –ù–ï–û–ë–•–û–î–ò–ú–û:")
        print("   ‚Ä¢ –£–¥–∞–ª–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é")
        print("   ‚Ä¢ –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å cleanup_all_comments.bat –µ—â–µ —Ä–∞–∑")
        return False

if __name__ == "__main__":
    check_cleanup()
