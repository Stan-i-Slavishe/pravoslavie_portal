#!/usr/bin/env python3
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –æ–∫—Ä—É–∂–µ–Ω–∏—è
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django
django.setup()

from django.db import connection
from django.core.management import execute_from_command_line

print("üîç –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• –ò –ú–ò–ì–†–ê–¶–ò–ô")
print("=" * 50)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å—Ç—å –≤ –±–∞–∑–µ
print("üìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
with connection.cursor() as cursor:
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
    tables = cursor.fetchall()
    for table in tables:
        print(f"   ‚Ä¢ {table[0]}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
print(f"\nüìã –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è 'core':")
try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    from django.db.migrations.executor import MigrationExecutor
    from django.db import connections
    
    connection = connections['default']
    executor = MigrationExecutor(connection)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–π
    plan = executor.migration_plan([('core', None)])
    
    if plan:
        print("   ‚ùå –ï—Å—Ç—å –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:")
        for migration, backwards in plan:
            print(f"      ‚Ä¢ {migration}")
        
        print(f"\nüîß –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...")
        execute_from_command_line(['manage.py', 'migrate', 'core'])
        
    else:
        print("   ‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
        
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
    print(f"\nüîß –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏...")
    try:
        execute_from_command_line(['manage.py', 'migrate'])
        print("   ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    except Exception as e2:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: {e2}")

# –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç–µ–≥
print(f"\nüè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–µ–≥–∞...")
try:
    from core.models import Tag
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ–≥–∏
    existing_tags = Tag.objects.all()
    print(f"   üìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ–≥–æ–≤: {existing_tags.count()}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ "–¥–æ—á—å"
    tag, created = Tag.objects.get_or_create(
        slug='doch',
        defaults={
            'name': '–¥–æ—á—å',
            'description': '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–∏ –¥–æ—á–µ—Ä–µ–π',
            'color': '#FF6B9D',
            'is_active': True
        }
    )
    
    if created:
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ–≥: {tag.name} (slug: {tag.slug})")
    else:
        print(f"   ‚ö†Ô∏è –¢–µ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {tag.name} (slug: {tag.slug})")
    
    # –°–æ–∑–¥–∞–µ–º –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–≥–æ–≤
    other_tags = [
        {'name': '–≤–µ—Ä–∞', 'slug': 'vera', 'color': '#9C27B0'},
        {'name': '—Å–µ–º—å—è', 'slug': 'semya', 'color': '#4CAF50'},
        {'name': '–ª—é–±–æ–≤—å', 'slug': 'lyubov', 'color': '#E91E63'},
    ]
    
    for tag_data in other_tags:
        tag, created = Tag.objects.get_or_create(
            slug=tag_data['slug'],
            defaults={
                'name': tag_data['name'],
                'description': f'–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –æ {tag_data["name"]}',
                'color': tag_data['color'],
                'is_active': True
            }
        )
        if created:
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ–≥: {tag.name} (slug: {tag.slug})")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìã –í—Å–µ —Ç–µ–≥–∏ –≤ –±–∞–∑–µ:")
    all_tags = Tag.objects.all()
    for tag in all_tags:
        print(f"   ‚Ä¢ {tag.name} (slug: {tag.slug})")
    
    print(f"\nüéâ –í—Å–µ–≥–æ —Ç–µ–≥–æ–≤: {all_tags.count()}")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–≥–∞–º–∏: {e}")
    import traceback
    traceback.print_exc()

print(f"\n" + "=" * 50)
print("üß™ –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
print("   http://127.0.0.1:8000/tag/doch/")
