#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—è content
"""
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.db import connection
from books.models import Book

def check_database_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã books_book"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
        with connection.cursor() as cursor:
            # –î–ª—è SQLite
            cursor.execute("PRAGMA table_info(books_book);")
            columns = cursor.fetchall()
            
            print("üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã books_book:")
            print("-" * 40)
            
            has_content_field = False
            
            for column in columns:
                column_id, name, type_name, not_null, default, pk = column
                print(f"   {column_id}: {name} ({type_name})")
                
                if name == 'content':
                    has_content_field = True
                    print(f"      ‚úÖ –ü–û–õ–ï 'content' –ù–ê–ô–î–ï–ù–û!")
            
            print("-" * 40)
            
            if not has_content_field:
                print("‚ùå –ü–û–õ–ï 'content' –ù–ï –ù–ê–ô–î–ï–ù–û –í –ë–ê–ó–ï –î–ê–ù–ù–´–•!")
                print("üéØ –≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å
                print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ Book...")
                fields = [field.name for field in Book._meta.fields]
                print(f"   –ü–æ–ª—è –≤ –º–æ–¥–µ–ª–∏: {fields}")
                
                if 'content' in fields:
                    print("‚úÖ –ü–æ–ª–µ 'content' –µ—Å—Ç—å –≤ –º–æ–¥–µ–ª–∏")
                    print("‚ùå –ù–æ –ù–ï–¢ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö - –Ω—É–∂–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è!")
                else:
                    print("‚ùå –ü–æ–ª–µ 'content' –ù–ï–¢ –≤ –º–æ–¥–µ–ª–∏!")
                    
            else:
                print("‚úÖ –ü–æ–ª–µ 'content' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
                print(f"\nüìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–ª–µ 'content':")
                books_with_content = Book.objects.exclude(content__isnull=True).exclude(content='')
                print(f"   –ö–Ω–∏–≥ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º content: {books_with_content.count()}")
                
                for book in books_with_content:
                    print(f"   - {book.title}: {len(book.content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î: {e}")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ Django ORM
        try:
            print(f"\nüîÑ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Django ORM...")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ content
            book = Book.objects.first()
            if book:
                content_value = getattr(book, 'content', '–ü–û–õ–ï –ù–ï –ù–ê–ô–î–ï–ù–û')
                print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ content: {content_value}")
                
        except Exception as e2:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ: {e2}")

def check_migrations():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"""
    
    print(f"\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π...")
    print("=" * 30)
    
    try:
        from django.core.management import execute_from_command_line
        import io
        import sys
        from contextlib import redirect_stdout
        
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥
        f = io.StringIO()
        
        with redirect_stdout(f):
            try:
                execute_from_command_line(['manage.py', 'showmigrations', 'books'])
            except SystemExit:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º SystemExit
        
        migration_output = f.getvalue()
        print("üìã –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π books:")
        print(migration_output)
        
        if '[X]' in migration_output:
            print("‚úÖ –ï—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
        else:
            print("‚ùå –ù–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π")
            
        if '[ ]' in migration_output:
            print("‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")

def create_migration_if_needed():
    """–°–æ–∑–¥–∞–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    
    print(f"\nüõ†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—è content...")
    print("=" * 40)
    
    try:
        import subprocess
        
        # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        result = subprocess.run([
            'python', 'manage.py', 'makemigrations', 'books', 
            '--name', 'add_content_field'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ:")
            print(result.stdout)
        else:
            print("‚ö†Ô∏è  –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏:")
            print(result.stdout)
            if result.stderr:
                print("–û—à–∏–±–∫–∏:")
                print(result.stderr)
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    try:
        check_database_structure()
        check_migrations()
        create_migration_if_needed()
        
        print(f"\n" + "=" * 60)
        print(f"üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
        print(f"1. üîç –ï—Å–ª–∏ –ø–æ–ª–µ content –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ:")
        print(f"   python manage.py makemigrations books")
        print(f"   python manage.py migrate")
        print(f"2. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä")
        print(f"3. üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ content –≤ –∞–¥–º–∏–Ω–∫–µ –∑–∞–Ω–æ–≤–æ")
        print(f"4. üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
