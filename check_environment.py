#!/usr/bin/env python3
"""
üîç –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
"""

import os
import sys

def check_env_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö .env —Ñ–∞–π–ª–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤...")
    
    required_files = ['.env.local', '.env.staging', '.env.production']
    unwanted_files = ['.env', '.env.lightweight', '.env.postgres_local', '.env.push_test', '.env.temp']
    
    all_good = True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    for file_name in required_files:
        if os.path.exists(file_name):
            print(f"‚úÖ {file_name} - –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {file_name} - –ù–ï –ù–ê–ô–î–ï–ù!")
            all_good = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    for file_name in unwanted_files:
        if os.path.exists(file_name):
            print(f"‚ö†Ô∏è {file_name} - –≤—Å—ë –µ—â—ë —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–¥–∞–ª–µ–Ω)")
            all_good = False
        else:
            print(f"‚úÖ {file_name} - —É–¥–∞–ª–µ–Ω")
    
    return all_good

def check_django_settings():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Django –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Django –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    settings_files = [
        'config/settings.py',
        'config/settings_local.py',
        'config/settings_staging.py', 
        'config/settings_production.py'
    ]
    
    all_good = True
    
    for file_name in settings_files:
        if os.path.exists(file_name):
            print(f"‚úÖ {file_name} - –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {file_name} - –ù–ï –ù–ê–ô–î–ï–ù!")
            all_good = False
    
    return all_good

def test_environment_loading():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–∑–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–π...")
    
    test_environments = ['local', 'staging', 'production']
    
    for env in test_environments:
        print(f"\n--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {env.upper()} ---")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        os.environ['DJANGO_ENV'] = env
        
        try:
            # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
            os.chdir(os.path.dirname(os.path.abspath(__file__)))
            sys.path.insert(0, '.')
            
            # –û—á–∏—â–∞–µ–º –∫–µ—à –º–æ–¥—É–ª–µ–π Django
            django_modules = [key for key in sys.modules.keys() if key.startswith('django') or key.startswith('config')]
            for module in django_modules:
                if module in sys.modules:
                    del sys.modules[module]
            
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
            import django
            from django.conf import settings
            
            print(f"‚úÖ {env}: Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            print(f"   DEBUG: {getattr(settings, 'DEBUG', '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù')}")
            print(f"   ALLOWED_HOSTS: {getattr(settings, 'ALLOWED_HOSTS', '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            db_engine = settings.DATABASES.get('default', {}).get('ENGINE', '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù')
            print(f"   DATABASE: {db_engine}")
            
        except Exception as e:
            print(f"‚ùå {env}: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ - {e}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ local –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    os.environ['DJANGO_ENV'] = 'local'

def check_backup_exists():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è backup'–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ backup'–æ–≤...")
    
    if os.path.exists('backups/'):
        backups = [d for d in os.listdir('backups/') if d.startswith('WORKING_PRODUCTION_BACKUP')]
        if backups:
            latest_backup = sorted(backups)[-1]
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ä–∞–±–æ—á–∏–π backup: backups/{latest_backup}")
            return True
        else:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã backup'—ã —Ä–∞–±–æ—á–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")
            return False
    else:
        print("‚ùå –ü–∞–ø–∫–∞ backups/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False

def create_quick_start_guide():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞"""
    guide_content = """# üöÄ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò

## ‚úÖ –ß—Ç–æ —Å–¥–µ–ª–∞–Ω–æ:
- –£–±—Ä–∞–Ω —Ö–∞–æ—Å —Å .env —Ñ–∞–π–ª–∞–º–∏ (–±—ã–ª–æ 7, —Å—Ç–∞–ª–æ 3)
- –°–æ–∑–¥–∞–Ω—ã —á–µ—Ç–∫–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: local/staging/production
- –£–ª—É—á—à–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è settings_local.py
- –°–æ–∑–¥–∞–Ω staging –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- –û–±–Ω–æ–≤–ª–µ–Ω .gitignore

## üîÑ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–∫—Ä—É–∂–µ–Ω–∏—è–º–∏:

### –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (SQLite):
```bash
export DJANGO_ENV=local  # Linux/Mac
$env:DJANGO_ENV = "local"  # Windows
python manage.py runserver
```

### –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (PostgreSQL):
```bash
# –ò–∑–º–µ–Ω–∏—Ç–µ –≤ .env.local:
USE_SQLITE=False
# –£–∫–∞–∂–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL
```

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ staging:
```bash
export DJANGO_ENV=staging
python manage.py check --deploy
python manage.py migrate
```

### –ü—Ä–æ–¥–∞–∫—à–Ω:
```bash
export DJANGO_ENV=production
python manage.py check --deploy
```

## üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

### –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ (—Å–µ–π—á–∞—Å)
```bash
python check_environment.py  # –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
python manage.py check
```

### –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ staging —Å–µ—Ä–≤–µ—Ä–∞ (1-2 —á–∞—Å–∞)
- –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–¥–æ–º–µ–Ω staging.dobrist.com
- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
- –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç

### –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–µ–ø–ª–æ—è (30 –º–∏–Ω—É—Ç)
- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ staging
- –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
- –¢–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –¥–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω

### –®–∞–≥ 4: OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è (2-3 —á–∞—Å–∞)
–ü–æ—Å–ª–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã!

## üö® –ê–≤–∞—Ä–∏–π–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ:
–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ backup:
```bash
cp backups/WORKING_PRODUCTION_BACKUP_*/\\.env.production .env.production
export DJANGO_ENV=production
python manage.py check
```

## üìû –ü—Ä–æ–±–ª–µ–º—ã?
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DJANGO_ENV
2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –Ω—É–∂–Ω—ã–π .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Django
4. –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ - –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –∏–∑ backup
"""
    
    with open('QUICK_START_AFTER_CLEANUP.md', 'w', encoding='utf-8') as f:
        f.write(guide_content)
    
    print("üìö –°–æ–∑–¥–∞–Ω –≥–∞–π–¥: QUICK_START_AFTER_CLEANUP.md")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    env_files_ok = check_env_files()
    django_settings_ok = check_django_settings()
    backup_exists = check_backup_exists()
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏–π...")
    test_environment_loading()
    
    print("\n" + "=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
    create_quick_start_guide()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
    print(f"   .env —Ñ–∞–π–ª—ã: {'‚úÖ OK' if env_files_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–´'}")
    print(f"   Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {'‚úÖ OK' if django_settings_ok else '‚ùå –ü–†–û–ë–õ–ï–ú–´'}")
    print(f"   Backup —Ä–∞–±–æ—á–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {'‚úÖ OK' if backup_exists else '‚ùå –ü–†–û–ë–õ–ï–ú–´'}")
    
    if env_files_ok and django_settings_ok and backup_exists:
        print("\nüéâ –í–°–Å –ì–û–¢–û–í–û! –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        print("\nüéØ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ staging —Å–µ—Ä–≤–µ—Ä–∞")
        print("üìñ –°–º. QUICK_START_AFTER_CLEANUP.md")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º")

if __name__ == "__main__":
    main()
