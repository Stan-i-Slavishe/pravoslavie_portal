#!/usr/bin/env python
"""
üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∞–º—è—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
"""
import psutil
import time

def check_memory_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞–º—è—Ç–∏"""
    print("üíæ –°—Ç–∞—Ç—É—Å –ø–∞–º—è—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–º—è—Ç–∏
    memory = psutil.virtual_memory()
    swap = psutil.swap_memory()
    
    # –§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–∞–º—è—Ç—å
    total_gb = memory.total / (1024**3)
    used_gb = memory.used / (1024**3)
    free_gb = memory.available / (1024**3)
    
    print(f"üìä –§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–∞–º—è—Ç—å:")
    print(f"  –í—Å–µ–≥–æ: {total_gb:.1f} –ì–ë")
    print(f"  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {used_gb:.1f} –ì–ë ({memory.percent:.1f}%)")
    print(f"  –î–æ—Å—Ç—É–ø–Ω–æ: {free_gb:.1f} –ì–ë")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    if memory.percent < 50:
        status = "‚úÖ –û–¢–õ–ò–ß–ù–û"
        advice = "–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ"
    elif memory.percent < 70:
        status = "‚ö†Ô∏è –ù–û–†–ú–ê–õ–¨–ù–û"
        advice = "–ú–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ"
    elif memory.percent < 85:
        status = "üîÑ –í–ù–ò–ú–ê–ù–ò–ï"
        advice = "–í–æ–∑–º–æ–∂–Ω—ã –Ω–µ–±–æ–ª—å—à–∏–µ —Ç–æ—Ä–º–æ–∑–∞"
    elif memory.percent < 95:
        status = "üêå –ü–õ–û–•–û"
        advice = "–°–∏–ª—å–Ω—ã–µ —Ç–æ—Ä–º–æ–∑–∞, –Ω—É–∂–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–∞–º—è—Ç—å"
    else:
        status = "üö´ –ö–†–ò–¢–ò–ß–ù–û"
        advice = "–°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –∑–∞–≤–∏—Å–Ω—É—Ç—å!"
    
    print(f"\nüéØ –°—Ç–∞—Ç—É—Å: {status}")
    print(f"üí° –°–æ–≤–µ—Ç: {advice}")
    
    # –§–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏
    if swap.total > 0:
        swap_gb = swap.total / (1024**3)
        swap_used_gb = swap.used / (1024**3)
        print(f"\nüíø –§–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏:")
        print(f"  –í—Å–µ–≥–æ: {swap_gb:.1f} –ì–ë")
        print(f"  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: {swap_used_gb:.1f} –ì–ë ({swap.percent:.1f}%)")
        
        if swap.percent > 10:
            print("  ‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∏—Å–∫ –≤–º–µ—Å—Ç–æ RAM - —ç—Ç–æ –∑–∞–º–µ–¥–ª—è–µ—Ç —Ä–∞–±–æ—Ç—É!")

def find_memory_hogs():
    """–ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∂—Ä—É—â–∏—Ö –ø–∞–º—è—Ç—å"""
    print("\nüêΩ –¢–æ–ø-5 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–∞–º—è—Ç–∏:")
    print("-" * 50)
    
    processes = []
    for proc in psutil.process_iter(['pid', 'name', 'memory_info']):
        try:
            memory_mb = proc.info['memory_info'].rss / (1024**2)
            processes.append({
                'name': proc.info['name'],
                'pid': proc.info['pid'],
                'memory_mb': memory_mb
            })
        except (psutil.NoSuchProcess, psutil.AccessDenied):
            continue
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–∞–º—è—Ç–∏
    top_processes = sorted(processes, key=lambda x: x['memory_mb'], reverse=True)[:5]
    
    for i, proc in enumerate(top_processes, 1):
        print(f"{i}. {proc['name']}: {proc['memory_mb']:.1f} –ú–ë (PID: {proc['pid']})")

def django_recommendations():
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è Django"""
    memory = psutil.virtual_memory()
    
    print(f"\nüêç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è Django:")
    print("-" * 30)
    
    if memory.percent < 70:
        print("‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è Django —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
        print("‚úÖ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å DEBUG=True")
        print("‚úÖ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å django-debug-toolbar")
    else:
        print("‚ö†Ô∏è –ú–∞–ª–æ –ø–∞–º—è—Ç–∏, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:")
        print("  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DEBUG=False")
        print("  ‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç—å django-debug-toolbar")
        print("  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å settings_performance.py")
        print("  ‚Ä¢ –ó–∞–∫—Ä—ã—Ç—å –ª–∏—à–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")

if __name__ == "__main__":
    check_memory_status()
    find_memory_hogs()
    django_recommendations()
    
    print(f"\nüîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...")
    try:
        while True:
            time.sleep(5)
            memory = psutil.virtual_memory()
            print(f"–ü–∞–º—è—Ç—å: {memory.percent:.1f}% | –î–æ—Å—Ç—É–ø–Ω–æ: {memory.available/(1024**3):.1f} –ì–ë", end='\r')
    except KeyboardInterrupt:
        print(f"\n\n‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")
