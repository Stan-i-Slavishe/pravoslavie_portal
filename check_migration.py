#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ PostgreSQL
–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
"""

import os
import sys
import django
from collections import defaultdict

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
django.setup()

from django.db import connection
from django.apps import apps

def count_records():
    """–ü–æ–¥—Å—á–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤–æ –≤—Å–µ—Ö –º–æ–¥–µ–ª—è—Ö"""
    print("=" * 60)
    print("üîç –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –î–ê–ù–ù–´–• –ü–û–°–õ–ï –ú–ò–ì–†–ê–¶–ò–ò")
    print("=" * 60)
    print()
    
    total_records = 0
    app_counts = defaultdict(dict)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞
    for model in apps.get_models():
        app_label = model._meta.app_label
        model_name = model._meta.model_name
        
        try:
            count = model.objects.count()
            app_counts[app_label][model_name] = count
            total_records += count
        except Exception as e:
            app_counts[app_label][model_name] = f"–û—à–∏–±–∫–∞: {e}"
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
    for app_name, models in app_counts.items():
        print(f"üì¶ {app_name.upper()}")
        print("-" * 30)
        
        app_total = 0
        for model_name, count in models.items():
            if isinstance(count, int):
                print(f"   {model_name:20} : {count:>6} –∑–∞–ø–∏—Å–µ–π")
                app_total += count
            else:
                print(f"   {model_name:20} : {count}")
        
        if app_total > 0:
            print(f"   {'–ò–¢–û–ì–û':20} : {app_total:>6} –∑–∞–ø–∏—Å–µ–π")
        print()
    
    print("=" * 60)
    print(f"üéØ –û–ë–©–ï–ï –ö–û–õ–ò–ß–ï–°–¢–í–û –ó–ê–ü–ò–°–ï–ô: {total_records}")
    print("=" * 60)
    print()
    
    return total_records, app_counts

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"""
    print("üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...")
    
    try:
        with connection.cursor() as cursor:
            cursor.execute("SELECT version();")
            version = cursor.fetchone()[0]
            print(f"‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω: {version}")
            
            cursor.execute("SELECT current_database();")
            db_name = cursor.fetchone()[0]
            print(f"üìÇ –¢–µ–∫—É—â–∞—è –ë–î: {db_name}")
            
            cursor.execute("SELECT current_user;")
            user = cursor.fetchone()[0]
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False
    
    print()
    return True

def check_key_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üîë –ü–†–û–í–ï–†–ö–ê –ö–õ–Æ–ß–ï–í–´–• –î–ê–ù–ù–´–•")
    print("-" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        from django.contrib.auth.models import User
        users_count = User.objects.count()
        superuser_count = User.objects.filter(is_superuser=True).count()
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {users_count} (–∏–∑ –Ω–∏—Ö –∞–¥–º–∏–Ω–æ–≤: {superuser_count})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Å–∫–∞–∑—ã
        from stories.models import Story
        stories_count = Story.objects.count()
        print(f"üé¨ –†–∞—Å—Å–∫–∞–∑—ã: {stories_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–∏–≥–∏
        from books.models import Book
        books_count = Book.objects.count()
        print(f"üìö –ö–Ω–∏–≥–∏: {books_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–∞–∑–∫–∏
        from fairy_tales.models import FairyTale
        fairy_tales_count = FairyTale.objects.count()
        print(f"üßö –¢–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —Å–∫–∞–∑–∫–∏: {fairy_tales_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞
        from shop.models import Product, Order
        products_count = Product.objects.count()
        orders_count = Order.objects.count()
        print(f"üõí –¢–æ–≤–∞—Ä—ã: {products_count}")
        print(f"üìã –ó–∞–∫–∞–∑—ã: {orders_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        from core.models import Category
        categories_count = Category.objects.count()
        print(f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    print()

def check_media_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤"""
    print("üñºÔ∏è –ü–†–û–í–ï–†–ö–ê –ú–ï–î–ò–ê-–§–ê–ô–õ–û–í")
    print("-" * 40)
    
    from django.conf import settings
    import os
    
    media_root = settings.MEDIA_ROOT
    if os.path.exists(media_root):
        print(f"üìÅ –ü–∞–ø–∫–∞ media: {media_root}")
        
        # –ü–æ–¥—Å—á–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
        for root, dirs, files in os.walk(media_root):
            if files:
                rel_path = os.path.relpath(root, media_root)
                if rel_path == '.':
                    rel_path = '–∫–æ—Ä–µ–Ω—å'
                print(f"   {rel_path}: {len(files)} —Ñ–∞–π–ª–æ–≤")
    else:
        print("‚ö†Ô∏è –ü–∞–ø–∫–∞ media –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if not check_database_connection():
        return
    
    # –ü–æ–¥—Å—á–µ—Ç –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π
    total_records, app_counts = count_records()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    check_key_data()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤
    check_media_files()
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –ú–ò–ì–†–ê–¶–ò–ò")
    print("-" * 40)
    
    if total_records > 0:
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"‚úÖ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {total_records} –∑–∞–ø–∏—Å–µ–π")
        print("‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print()
        print("üöÄ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("   1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω–∫—É Django")
        print("   3. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é PostgreSQL")
        print("   4. –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Å–æ–∑–¥–∞–Ω–∏—é Docker –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
    else:
        print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    print()

if __name__ == "__main__":
    main()