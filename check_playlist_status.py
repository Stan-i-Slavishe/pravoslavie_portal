#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –∏ —Ç–∞–±–ª–∏—Ü –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.db import connection
from django.core.management import call_command
from django.core.management.base import CommandError
import io
from contextlib import redirect_stdout, redirect_stderr

def check_migrations():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"""
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π...")
    
    try:
        # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã showmigrations
        output = io.StringIO()
        error = io.StringIO()
        
        with redirect_stdout(output), redirect_stderr(error):
            call_command('showmigrations', 'stories')
        
        stdout_content = output.getvalue()
        stderr_content = error.getvalue()
        
        if stderr_content:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∏: {stderr_content}")
        
        if stdout_content:
            print("üìù –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π stories:")
            print(stdout_content)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
        if '[ ]' in stdout_content:
            print("‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏!")
            unapplied = [line for line in stdout_content.split('\n') if '[ ]' in line]
            for migration in unapplied:
                print(f"   {migration}")
        else:
            print("‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
            
    except CommandError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

def check_database_tables():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        cursor = connection.cursor()
        
        # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        all_tables = [row[0] for row in cursor.fetchall()]
        
        print(f"üìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü –≤ –ë–î: {len(all_tables)}")
        
        # –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
        playlist_tables = [table for table in all_tables if 'playlist' in table.lower()]
        
        if playlist_tables:
            print("üéµ –¢–∞–±–ª–∏—Ü—ã –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤:")
            for table in playlist_tables:
                print(f"   ‚úÖ {table}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
                cursor.execute(f"PRAGMA table_info({table});")
                columns = cursor.fetchall()
                print(f"      –°—Ç–æ–ª–±—Ü–æ–≤: {len(columns)}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
                cursor.execute(f"SELECT COUNT(*) FROM {table};")
                count = cursor.fetchone()[0]
                print(f"      –ó–∞–ø–∏—Å–µ–π: {count}")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü—ã –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã stories
        story_tables = [table for table in all_tables if 'stories' in table.lower()]
        
        if story_tables:
            print("\nüìö –¢–∞–±–ª–∏—Ü—ã —Ä–∞—Å—Å–∫–∞–∑–æ–≤:")
            for table in story_tables:
                cursor.execute(f"SELECT COUNT(*) FROM {table};")
                count = cursor.fetchone()[0]
                print(f"   ‚úÖ {table} ({count} –∑–∞–ø–∏—Å–µ–π)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
        import traceback
        traceback.print_exc()

def check_models_import():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π"""
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π...")
    
    try:
        from stories.models import Story
        print("‚úÖ Story –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from stories.models import Playlist
        print("‚úÖ Playlist –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from stories.models import PlaylistItem
        print("‚úÖ PlaylistItem –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from stories.models import UserPlaylistPreference
        print("‚úÖ UserPlaylistPreference –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
        try:
            stories_count = Story.objects.count()
            print(f"üìä –†–∞—Å—Å–∫–∞–∑–æ–≤ –≤ –ë–î: {stories_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ Story: {e}")
        
        try:
            playlists_count = Playlist.objects.count()
            print(f"üìä –ü–ª–µ–π–ª–∏—Å—Ç–æ–≤ –≤ –ë–î: {playlists_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ Playlist: {e}")
        
        try:
            items_count = PlaylistItem.objects.count()
            print(f"üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –≤ –ë–î: {items_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ PlaylistItem: {e}")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤")
    print("=" * 50)
    
    check_migrations()
    check_database_tables()
    check_models_import()
    
    print("\n" + "=" * 50)
    print("‚ú® –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
