#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ reCAPTCHA –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä–µ
"""
import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
os.environ.setdefault('DJANGO_ENV', 'production')  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–¥–∞–∫—à–µ–Ω
django.setup()

def check_production_recaptcha():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ reCAPTCHA –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"""
    from django.conf import settings
    
    print("üõ°Ô∏è –ü–†–û–í–ï–†–ö–ê GOOGLE reCAPTCHA v3 - –ü–†–û–î–ê–ö–®–ï–ù –°–ï–†–í–ï–†")
    print("=" * 60)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    environment = getattr(settings, 'DEBUG', True)
    env_name = "‚ö†Ô∏è –†–ê–ó–†–ê–ë–û–¢–ö–ê (DEBUG=True)" if environment else "‚úÖ –ü–†–û–î–ê–ö–®–ï–ù (DEBUG=False)"
    print(f"üåç –û–∫—Ä—É–∂–µ–Ω–∏–µ: {env_name}")
    print(f"üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∏: {settings.SETTINGS_MODULE}")
    print()
    
    if environment:
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ DEBUG=True!")
        print("   –≠—Ç–æ –ù–ï –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞!")
        print("   reCAPTCHA –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ")
        print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ reCAPTCHA
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Google reCAPTCHA v3...")
    print("-" * 50)
    
    checks = {
        "DEBUG –æ—Ç–∫–ª—é—á–µ–Ω": not getattr(settings, 'DEBUG', True),
        "RECAPTCHA_PUBLIC_KEY": getattr(settings, 'RECAPTCHA_PUBLIC_KEY', None),
        "RECAPTCHA_PRIVATE_KEY": getattr(settings, 'RECAPTCHA_PRIVATE_KEY', None), 
        "RECAPTCHA_REQUIRED_SCORE": getattr(settings, 'RECAPTCHA_REQUIRED_SCORE', None),
        "django_recaptcha —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω": 'django_recaptcha' in settings.INSTALLED_APPS,
        "ACCOUNT_FORMS –Ω–∞—Å—Ç—Ä–æ–µ–Ω": hasattr(settings, 'ACCOUNT_FORMS'),
    }
    
    all_ok = True
    
    for check_name, value in checks.items():
        if value:
            if check_name.endswith('_KEY') and len(str(value)) > 10:
                # –°–∫—Ä—ã–≤–∞–µ–º –∫–ª—é—á–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                display_value = f"{str(value)[:10]}...{str(value)[-4:]}"
                print(f"‚úÖ {check_name}: {display_value}")
            else:
                print(f"‚úÖ {check_name}: {value}")
        else:
            print(f"‚ùå {check_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–û")
            all_ok = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª—é—á–∏ –Ω–µ —Ç–µ—Å—Ç–æ–≤—ã–µ
    public_key = getattr(settings, 'RECAPTCHA_PUBLIC_KEY', '')
    if public_key.startswith('6LeIxAcTAAAAAJ'):
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¢–ï–°–¢–û–í–´–ï –∫–ª—é—á–∏ Google!")
        print("   –ù–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è dobrist.com")
        all_ok = False
    
    print("-" * 50)
    
    if all_ok:
        print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ reCAPTCHA –≥–æ—Ç–æ–≤—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞!")
    else:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")
    
    print()
    return all_ok

def check_domain_configuration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞"""
    from django.conf import settings
    
    print("üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ–º–µ–Ω–∞...")
    print("-" * 50)
    
    allowed_hosts = getattr(settings, 'ALLOWED_HOSTS', [])
    required_domains = ['dobrist.com', 'www.dobrist.com']
    
    print(f"ALLOWED_HOSTS: {allowed_hosts}")
    
    domain_ok = True
    for domain in required_domains:
        if domain in allowed_hosts:
            print(f"‚úÖ –î–æ–º–µ–Ω {domain} —Ä–∞–∑—Ä–µ—à–µ–Ω")
        else:
            print(f"‚ùå –î–æ–º–µ–Ω {domain} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ ALLOWED_HOSTS")
            domain_ok = False
    
    print("-" * 50)
    return domain_ok

def check_form_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Ñ–æ—Ä–º—ã"""
    print("üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ñ–æ—Ä–º—ã...")
    print("-" * 50)
    
    try:
        from accounts.forms import CustomSignupForm
        from django.conf import settings
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É
        form = CustomSignupForm()
        
        # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–∞–ø—á–∞
        has_captcha = 'captcha' in form.fields
        is_production = not settings.DEBUG
        
        if is_production:
            if has_captcha:
                print("‚úÖ reCAPTCHA –ø–æ–ª–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ñ–æ—Ä–º–µ (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)")
            else:
                print("‚ùå reCAPTCHA –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ñ–æ—Ä–º–µ!")
                return False
        else:
            if not has_captcha:
                print("‚úÖ reCAPTCHA –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (—Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)")
            else:
                print("‚ö†Ô∏è reCAPTCHA –ø–æ–ª–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
        
        print("‚úÖ –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("-" * 50)
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–æ—Ä–º—ã: {e}")
        print("-" * 50)
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîí –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò reCAPTCHA –ö –ü–†–û–î–ê–ö–®–ï–ù –î–ï–ü–õ–û–Æ")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    tests = [
        check_production_recaptcha,
        check_domain_configuration, 
        check_form_integration,
    ]
    
    results = []
    for test in tests:
        try:
            result = test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ {test.__name__}: {e}")
            results.append(False)
        print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("=" * 60)
    if all(results):
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –ì–û–¢–û–í–û –ö –î–ï–ü–õ–û–Æ!")
        print("\nüöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–µ–ø–ª–æ—è:")
        print("   git add .")
        print("   git commit -m '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ Google reCAPTCHA v3 –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞'")
        print("   git push origin main")
        print("   ./deploy.sh")
        print()
        print("üìä –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:")
        print("   ‚Ä¢ Google reCAPTCHA Admin: https://www.google.com/recaptcha/admin")
        print("   ‚Ä¢ –¢–µ—Å—Ç —Ñ–æ—Ä–º—ã: https://dobrist.com/accounts/signup/")
        exit_code = 0
    else:
        failed_count = len([r for r in results if not r])
        print(f"‚ö†Ô∏è {failed_count} –∏–∑ {len(results)} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
        print("\nüîß –ß—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:")
        print("   1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ DEBUG=False –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ reCAPTCHA")
        print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–æ–º–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        exit_code = 1
    
    sys.exit(exit_code)

if __name__ == "__main__":
    main()
