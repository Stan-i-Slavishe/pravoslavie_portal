"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–≥–æ–≤ –≤ –∞–¥–º–∏–Ω–∫–µ
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from core.models import Tag as CoreTag
from stories.models import Story
from django.db import connection

def check_tags_display():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—á–µ–º—É —Ç–µ–≥–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∞–¥–º–∏–Ω–∫–µ"""
    
    print("\n" + "=" * 70)
    print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –¢–ï–ì–û–í –í –ê–î–ú–ò–ù–ö–ï")
    print("=" * 70)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–µ–≥–∏
    print("\n1. –°–¢–ê–¢–£–° –í–°–ï–• –¢–ï–ì–û–í:")
    print("-" * 40)
    
    all_tags = CoreTag.objects.all().order_by('name')
    
    for tag in all_tags:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å–∫–∞–∑–æ–≤
        story_count = Story.objects.filter(tags=tag).count()
        print(f"  {tag.name}: active={tag.is_active}, stories={story_count}, id={tag.id}")
    
    print(f"\n–í—Å–µ–≥–æ —Ç–µ–≥–æ–≤: {all_tags.count()}")
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö: {all_tags.filter(is_active=True).count()}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    print("\n2. –ü–†–û–í–ï–†–ö–ê –î–£–ë–õ–ò–ö–ê–¢–û–í:")
    print("-" * 40)
    
    # –ò—â–µ–º —Ç–µ–≥–∏ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    duplicates = []
    tag_names = list(all_tags.values_list('name', flat=True))
    
    for name in tag_names:
        similar = CoreTag.objects.filter(name__iexact=name)
        if similar.count() > 1:
            if name.lower() not in duplicates:
                duplicates.append(name.lower())
                print(f"  ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç: {name}")
                for dup_tag in similar:
                    print(f"     - id={dup_tag.id}, name='{dup_tag.name}'")
    
    if not duplicates:
        print("  ‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # 3. –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç "–ø–∞–ø–∞" —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã
    print("\n3. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í:")
    print("-" * 40)
    
    # –ù–∞—Ö–æ–¥–∏–º —Ç–µ–≥–∏ "–ü–∞–ø–∞" –∏ "–ø–∞–ø–∞"
    papa_big = CoreTag.objects.filter(name='–ü–∞–ø–∞').first()
    papa_small = CoreTag.objects.filter(name='–ø–∞–ø–∞').first()
    
    if papa_big and papa_small:
        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –≤—Å–µ —Å–≤—è–∑–∏ —Å "–ø–∞–ø–∞" –Ω–∞ "–ü–∞–ø–∞"
        stories_with_small = Story.objects.filter(tags=papa_small)
        for story in stories_with_small:
            story.tags.remove(papa_small)
            story.tags.add(papa_big)
        
        # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç
        papa_small.delete()
        print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç '–ø–∞–ø–∞' (id={papa_small.id})")
        print(f"  ‚úÖ –û—Å—Ç–∞–≤–ª–µ–Ω —Ç–µ–≥ '–ü–∞–ø–∞' (id={papa_big.id})")
    else:
        print("  ‚ÑπÔ∏è –î—É–±–ª–∏–∫–∞—Ç—ã '–ü–∞–ø–∞'/'–ø–∞–ø–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∫–∏
    print("\n4. –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ê–î–ú–ò–ù–ö–ò:")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ Tag –≤ –∞–¥–º–∏–Ω–∫–µ
    from django.contrib import admin
    from django.apps import apps
    
    if admin.site.is_registered(CoreTag):
        print("  ‚úÖ –ú–æ–¥–µ–ª—å Tag –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∞–¥–º–∏–Ω–∫–µ")
    else:
        print("  ‚ùå –ú–æ–¥–µ–ª—å Tag –ù–ï –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∞–¥–º–∏–Ω–∫–µ!")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ many-to-many
    print("\n5. –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ –°–í–Ø–ó–ï–ô:")
    print("-" * 40)
    
    with connection.cursor() as cursor:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("""
            SELECT sql FROM sqlite_master 
            WHERE type='table' AND name='stories_story_tags';
        """)
        result = cursor.fetchone()
        if result:
            print("  –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã stories_story_tags –Ω–∞–π–¥–µ–Ω–∞")
        else:
            # –î–ª—è PostgreSQL
            cursor.execute("""
                SELECT column_name, data_type 
                FROM information_schema.columns 
                WHERE table_name = 'stories_story_tags'
                ORDER BY ordinal_position;
            """)
            columns = cursor.fetchall()
            if columns:
                print("  –ö–æ–ª–æ–Ω–∫–∏ –≤ stories_story_tags:")
                for col_name, col_type in columns:
                    print(f"    - {col_name}: {col_type}")

def assign_sample_tags():
    """–ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ç–µ–≥–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Ä–∞—Å—Å–∫–∞–∑–∞–º –¥–ª—è —Ç–µ—Å—Ç–∞"""
    
    print("\n" + "=" * 70)
    print("–ü–†–ò–°–í–û–ï–ù–ò–ï –¢–ï–ì–û–í –†–ê–°–°–ö–ê–ó–ê–ú (–¢–ï–°–¢)")
    print("=" * 70)
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ä–∞—Å—Å–∫–∞–∑–æ–≤
    stories = Story.objects.all()[:5]
    
    if not stories:
        print("  ‚ö†Ô∏è –ù–µ—Ç —Ä–∞—Å—Å–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–µ–≥–∏
    tag_names = ['–º–æ–ª–∏—Ç–≤–∞', '—á—É–¥–µ—Å–∞', '—Å–µ–º—å—è', '–∏—Å—Ü–µ–ª–µ–Ω–∏–µ', '–≤—Ä–∞–∑—É–º–ª–µ–Ω–∏–µ']
    
    for story, tag_name in zip(stories, tag_names):
        try:
            tag = CoreTag.objects.get(name=tag_name)
            if not story.tags.filter(id=tag.id).exists():
                story.tags.add(tag)
                print(f"  ‚úÖ –†–∞—Å—Å–∫–∞–∑—É '{story.title[:30]}...' –¥–æ–±–∞–≤–ª–µ–Ω —Ç–µ–≥ '{tag_name}'")
            else:
                print(f"  ‚ÑπÔ∏è –£ —Ä–∞—Å—Å–∫–∞–∑–∞ '{story.title[:30]}...' —É–∂–µ –µ—Å—Ç—å —Ç–µ–≥ '{tag_name}'")
        except CoreTag.DoesNotExist:
            print(f"  ‚ùå –¢–µ–≥ '{tag_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")

def check_admin_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω–∫–∏ –¥–ª—è Story"""
    
    print("\n" + "=" * 70)
    print("–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ê–î–ú–ò–ù–ö–ò –î–õ–Ø STORY")
    print("=" * 70)
    
    from django.contrib import admin
    from stories.admin import StoryAdmin
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ StoryAdmin
    if hasattr(StoryAdmin, 'filter_horizontal'):
        print(f"  filter_horizontal: {StoryAdmin.filter_horizontal}")
    
    if hasattr(StoryAdmin, 'filter_vertical'):
        print(f"  filter_vertical: {StoryAdmin.filter_vertical}")
    
    if hasattr(StoryAdmin, 'fields'):
        print(f"  fields –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: {bool(StoryAdmin.fields)}")
    
    if hasattr(StoryAdmin, 'fieldsets'):
        print(f"  fieldsets –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: {bool(StoryAdmin.fieldsets)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ tags –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n  –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è 'tags' –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∫–∏:")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º—É –∞–¥–º–∏–Ω–∫–∏
    from stories.models import Story
    model_admin = admin.site._registry.get(Story)
    if model_admin:
        print(f"  ‚úÖ Story –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∞–¥–º–∏–Ω–∫–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É
        if hasattr(model_admin, 'get_form'):
            print("  ‚úÖ –ú–µ—Ç–æ–¥ get_form –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è
        if hasattr(model_admin, 'get_fields'):
            try:
                # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π request –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                class FakeRequest:
                    user = None
                fields = model_admin.get_fields(FakeRequest())
                if 'tags' in fields:
                    print(f"  ‚úÖ –ü–æ–ª–µ 'tags' –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø–æ–ª—è—Ö –∞–¥–º–∏–Ω–∫–∏")
                else:
                    print(f"  ‚ùå –ü–æ–ª–µ 'tags' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ –ø–æ–ª—è—Ö –∞–¥–º–∏–Ω–∫–∏")
                    print(f"     –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è: {fields}")
            except Exception as e:
                print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—è: {e}")

def main():
    print("\n" + "üîç" * 35)
    print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –¢–ï–ì–û–í")
    print("üîç" * 35)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    check_tags_display()
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω–∫–∏
    check_admin_config()
    
    # 3. –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–≥–∏
    choice = input("\n–ü—Ä–∏—Å–≤–æ–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–≥–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Ä–∞—Å—Å–∫–∞–∑–∞–º? (y/n): ")
    if choice.lower() == 'y':
        assign_sample_tags()
    
    print("\n" + "=" * 70)
    print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("=" * 70)
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –∞–¥–º–∏–Ω–∫–µ: http://127.0.0.1:8000/admin/stories/story/")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±–æ–π —Ä–∞—Å—Å–∫–∞–∑ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("3. –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª–µ '–¢–µ–≥–∏' - —Ç–∞–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤")
    print("4. –ï—Å–ª–∏ –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å stories/admin.py")
    
    print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == '__main__':
    main()
