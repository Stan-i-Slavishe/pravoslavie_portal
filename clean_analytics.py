#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
PROJECT_PATH = r'E:\pravoslavie_portal'
sys.path.insert(0, PROJECT_PATH)
os.chdir(PROJECT_PATH)
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

import django
django.setup()

from analytics.models import PurchaseIntent, PopularContent
from shop.models import Product
from fairy_tales.models import FairyTaleTemplate

def clean_incorrect_analytics():
    """–û—á–∏—â–∞–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    print("=" * 60)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å content_type='product'
    product_intents = PurchaseIntent.objects.filter(content_type='product')
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å content_type='product': {product_intents.count()}")
    
    for intent in product_intents:
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º: Product #{intent.object_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID
        try:
            product = Product.objects.get(id=intent.object_id)
            print(f"  ‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω: {product.title}")
            print(f"     –ó–∞–ø–∏—Å—å –ö–û–†–†–ï–ö–¢–ù–ê - –æ—Å—Ç–∞–≤–ª—è–µ–º")
        except Product.DoesNotExist:
            print(f"  ‚ùå –¢–æ–≤–∞—Ä –ù–ï –Ω–∞–π–¥–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–∫–∞–∑–∫–∞ —Å —Ç–∞–∫–∏–º ID
            try:
                fairy_tale = FairyTaleTemplate.objects.get(id=intent.object_id)
                print(f"  üßö‚Äç‚ôÄÔ∏è –ù–∞–π–¥–µ–Ω–∞ —Å–∫–∞–∑–∫–∞: {fairy_tale.title}")
                print(f"     –≠—Ç–æ –û–®–ò–ë–û–ß–ù–ê–Ø –∑–∞–ø–∏—Å—å - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å")
                
                # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
                print(f"     –í–∞—Ä–∏–∞–Ω—Ç—ã:")
                print(f"     1. –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å (recommended)")
                print(f"     2. –ò—Å–ø—Ä–∞–≤–∏—Ç—å content_type –Ω–∞ 'fairy_tale'")
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏
                intent.delete()
                print(f"     ‚úÖ –£–î–ê–õ–ï–ù–û!")
                
            except FairyTaleTemplate.DoesNotExist:
                print(f"  ‚ùì –û–±—ä–µ–∫—Ç —Å ID {intent.object_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏–≥–¥–µ")
                print(f"     –£–¥–∞–ª—è–µ–º –º–µ—Ä—Ç–≤—É—é —Å—Å—ã–ª–∫—É")
                intent.delete()
                print(f"     ‚úÖ –£–î–ê–õ–ï–ù–û!")
    
    # –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º PopularContent
    print(f"\nüìà –ü—Ä–æ–≤–µ—Ä—è–µ–º PopularContent...")
    popular_products = PopularContent.objects.filter(content_type='product')
    print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {popular_products.count()}")
    
    for popular in popular_products:
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º PopularContent: Product #{popular.object_id}")
        
        try:
            product = Product.objects.get(id=popular.object_id)
            print(f"  ‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω: {product.title}")
        except Product.DoesNotExist:
            print(f"  ‚ùå –¢–æ–≤–∞—Ä –ù–ï –Ω–∞–π–¥–µ–Ω - —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å")
            popular.delete()
            print(f"     ‚úÖ –£–î–ê–õ–ï–ù–û!")
    
    print(f"\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò:")
    print(f"PurchaseIntent –∑–∞–ø–∏—Å–µ–π:")
    for content_type in ['book', 'fairy_tale', 'product', 'audio']:
        count = PurchaseIntent.objects.filter(content_type=content_type).count()
        print(f"  {content_type}: {count}")
    
    print(f"\nPopularContent –∑–∞–ø–∏—Å–µ–π:")
    for content_type in ['book', 'fairy_tale', 'product', 'audio']:
        count = PopularContent.objects.filter(content_type=content_type).count()
        print(f"  {content_type}: {count}")

if __name__ == '__main__':
    clean_incorrect_analytics()
