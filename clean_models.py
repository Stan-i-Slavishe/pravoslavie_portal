#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üßπ –û–ß–ò–°–¢–ö–ê MODELS.PY –û–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í
–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –º–æ–¥–µ–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ stories/models.py
"""

import re

def clean_models_file():
    print("üßπ –û–ß–ò–°–¢–ö–ê stories/models.py –û–¢ –ú–û–î–ï–õ–ï–ô –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í")
    print("=" * 55)
    
    models_file = 'stories/models.py'
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open(models_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print(f"üìÑ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª: {models_file}")
        
        # –£–¥–∞–ª—è–µ–º –º–æ–¥–µ–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        models_to_remove = [
            'StoryComment',
            'StoryCommentLike', 
            'CommentReport'
        ]
        
        for model_name in models_to_remove:
            # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª–∞—Å—Å–∞ –º–æ–¥–µ–ª–∏
            pattern = rf'class {model_name}\([^)]*\):.*?(?=\n\nclass|\n\n\S|\Z)'
            
            # –£–¥–∞–ª—è–µ–º –º–æ–¥–µ–ª—å
            content = re.sub(pattern, '', content, flags=re.DOTALL)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –º–æ–¥–µ–ª—å: {model_name}")
        
        # –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        content = re.sub(r'\n\n\n+', '\n\n', content)
        content = content.strip() + '\n'
        
        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
        with open(f'{models_file}.backup', 'w', encoding='utf-8') as f:
            f.write(content)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(models_file, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"‚úÖ –§–∞–π–ª {models_file} –æ—á–∏—â–µ–Ω –æ—Ç –º–æ–¥–µ–ª–µ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
        print(f"üìÅ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {models_file}.backup")
        
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {models_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    clean_models_file()
