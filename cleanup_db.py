#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üóÉÔ∏è –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –ë–ê–ó–´ –î–ê–ù–ù–´–• –û–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í
–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –¥–∞–Ω–Ω—ã–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pravoslavie_portal.settings')
django.setup()

from django.db import connection
from django.core.management import execute_from_command_line

def cleanup_database():
    """–û—á–∏—Å—Ç–∫–∞ –ë–î –æ—Ç —Ç–∞–±–ª–∏—Ü –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""
    print("üóÉÔ∏è –û–ß–ò–°–¢–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• –û–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í")
    print("=" * 50)
    
    cursor = connection.cursor()
    
    # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    tables_to_drop = [
        'stories_storycomment',
        'stories_storycommentlike', 
        'stories_commentreport',
        'comments_comment',
        'comments_commentlike',
    ]
    
    print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
    
    for table in tables_to_drop:
        try:
            cursor.execute(f"DROP TABLE IF EXISTS {table} CASCADE;")
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: {table}")
        except Exception as e:
            print(f"‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ {table}: {e}")
    
    print("\nüîß –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∏–∑ django_migrations...")
    try:
        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –æ –º–∏–≥—Ä–∞—Ü–∏—è—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        cursor.execute("""
            DELETE FROM django_migrations 
            WHERE name LIKE '%comment%' 
               OR name LIKE '%youtube%'
               OR app = 'comments';
        """)
        print("‚úÖ –ó–∞–ø–∏—Å–∏ –º–∏–≥—Ä–∞—Ü–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —É–¥–∞–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
    
    cursor.close()
    
    print("\nüéâ –û—á–∏—Å—Ç–∫–∞ –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    
def cleanup_migration_files():
    """–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""
    print("\nüìÅ –û–ß–ò–°–¢–ö–ê –§–ê–ô–õ–û–í –ú–ò–ì–†–ê–¶–ò–ô...")
    
    import glob
    
    # –ò—â–µ–º —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    migration_patterns = [
        'stories/migrations/*comment*.py',
        'stories/migrations/*youtube*.py',
        'comments/migrations/*.py' if os.path.exists('comments/migrations') else None
    ]
    
    for pattern in migration_patterns:
        if pattern:
            for file_path in glob.glob(pattern):
                if '__init__.py' not in file_path:
                    try:
                        os.remove(file_path)
                        print(f"‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏: {file_path}")
                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {file_path}: {e}")

def check_models_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ models.py –æ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""
    print("\nüìÑ –ü–†–û–í–ï–†–ö–ê stories/models.py...")
    
    models_file = 'stories/models.py'
    
    if os.path.exists(models_file):
        with open(models_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–µ–ª–µ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        comment_models = [
            'class StoryComment',
            'class StoryCommentLike', 
            'class CommentReport'
        ]
        
        found_models = []
        for model in comment_models:
            if model in content:
                found_models.append(model)
        
        if found_models:
            print("‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –º–æ–¥–µ–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ stories/models.py:")
            for model in found_models:
                print(f"   ‚Ä¢ {model}")
            print("\nüîß –ù–ï–û–ë–•–û–î–ò–ú–û –í–†–£–ß–ù–£–Æ –£–î–ê–õ–ò–¢–¨ —ç—Ç–∏ –º–æ–¥–µ–ª–∏ –∏–∑ stories/models.py")
        else:
            print("‚úÖ –ú–æ–¥–µ–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ stories/models.py")

def main():
    print("üßπ –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í –ò–ó –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    try:
        # 1. –û—á–∏—Å—Ç–∫–∞ –ë–î
        cleanup_database()
        
        # 2. –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π
        cleanup_migration_files()
        
        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ models.py
        check_models_file()
        
        print("\n" + "=" * 60)
        print("üéâ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("=" * 60)
        print("\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("   1. –ï—Å–ª–∏ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –º–æ–¥–µ–ª–∏ –≤ stories/models.py - —É–¥–∞–ª–∏—Ç–µ –∏—Ö –≤—Ä—É—á–Ω—É—é")
        print("   2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py makemigrations")
        print("   3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py migrate")
        print("   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
        print("   5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞")
        print("\n‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤!")
        
    except Exception as e:
        print(f"\nüí• –û–®–ò–ë–ö–ê: {e}")
        print("\nüîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Django —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py shell")

if __name__ == "__main__":
    main()
