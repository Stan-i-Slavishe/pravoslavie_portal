#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–ª–Ω–∞—è –∑–∞—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
import re
import glob

def clean_file(filepath, patterns_to_remove, backup=True):
    """–û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª –æ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤"""
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # –£–¥–∞–ª—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        for pattern in patterns_to_remove:
            content = re.sub(pattern, '', content, flags=re.MULTILINE | re.DOTALL)
        
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)
        
        if content != original_content:
            if backup:
                with open(f"{filepath}.bak", 'w', encoding='utf-8') as f:
                    f.write(original_content)
            
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ –û—á–∏—â–µ–Ω: {filepath}")
            return True
        else:
            print(f"‚ö™ –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {filepath}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filepath}: {e}")
        return False

def find_files_with_pattern(directory, file_pattern, content_pattern):
    """–ù–∞—Ö–æ–¥–∏—Ç —Ñ–∞–π–ª—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º"""
    found_files = []
    
    for filepath in glob.glob(os.path.join(directory, '**', file_pattern), recursive=True):
        try:
            with open(filepath, 'r', encoding='utf-8') as f:
                content = f.read()
                if re.search(content_pattern, content, re.IGNORECASE):
                    found_files.append(filepath)
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å {filepath}: {e}")
    
    return found_files

def main():
    print("=" * 60)
    print("üßπ –ü–û–õ–ù–ê–Ø –ó–ê–ß–ò–°–¢–ö–ê –°–ò–°–¢–ï–ú–´ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í")
    print("=" * 60)
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    admin_patterns = [
        r'from\s+\.comment_admin\s+import\s+\*\s*',
        r'from\s+\.comment_admin\s+import\s+.*\n',
        r'import\s+.*comment_admin.*\n',
        r'@admin\.register\(Comment\).*?class.*?Comment.*?Admin.*?:\s*.*?(?=@admin\.register|class|\Z)',
        r'admin\.site\.register\(Comment.*?\)\s*',
    ]
    
    models_patterns = [
        r'class\s+Comment\(.*?\):\s*.*?(?=class|\Z)',
        r'comments\s*=\s*models\..*?\n',
        r'comment_count\s*=\s*models\..*?\n',
        r'from\s+.*comments.*import.*\n',
        r'import\s+.*comments.*\n',
    ]
    
    views_patterns = [
        r'from\s+\.models\s+import\s+.*Comment.*\n',
        r'from\s+\.forms\s+import\s+.*Comment.*\n',
        r'def\s+.*comment.*\(.*?\):.*?(?=def|\Z)',
        r'class\s+.*Comment.*View.*?:.*?(?=class|\Z)',
        r'Comment\.objects\..*?\n',
        r'comment\s*=\s*.*\n',
        r'comments\s*=\s*.*\n',
    ]
    
    forms_patterns = [
        r'class\s+.*Comment.*Form.*?:.*?(?=class|\Z)',
        r'from\s+\.models\s+import\s+.*Comment.*\n',
    ]
    
    urls_patterns = [
        r'path\(.*comment.*\),?\s*',
        r'url\(.*comment.*\),?\s*',
    ]
    
    template_patterns = [
        r'{%\s*for\s+comment\s+in\s+comments\s*%}.*?{%\s*endfor\s*%}',
        r'{%\s*if\s+.*comment.*\s*%}.*?{%\s*endif\s*%}',
        r'{{.*comment.*}}',
        r'<div[^>]*comment[^>]*>.*?</div>',
        r'<!-- comment.*?-->',
    ]
    
    # 1. –û—á–∏—Å—Ç–∫–∞ admin.py —Ñ–∞–π–ª–æ–≤
    print("\nüéØ –û—á–∏—Å—Ç–∫–∞ admin.py —Ñ–∞–π–ª–æ–≤...")
    admin_files = glob.glob('**/admin.py', recursive=True)
    for admin_file in admin_files:
        clean_file(admin_file, admin_patterns)
    
    # 2. –û—á–∏—Å—Ç–∫–∞ models.py —Ñ–∞–π–ª–æ–≤
    print("\nüéØ –û—á–∏—Å—Ç–∫–∞ models.py —Ñ–∞–π–ª–æ–≤...")
    model_files = glob.glob('**/models.py', recursive=True)
    for model_file in model_files:
        clean_file(model_file, models_patterns)
    
    # 3. –û—á–∏—Å—Ç–∫–∞ views.py —Ñ–∞–π–ª–æ–≤
    print("\nüéØ –û—á–∏—Å—Ç–∫–∞ views.py —Ñ–∞–π–ª–æ–≤...")
    view_files = glob.glob('**/views.py', recursive=True)
    for view_file in view_files:
        clean_file(view_file, views_patterns)
    
    # 4. –û—á–∏—Å—Ç–∫–∞ forms.py —Ñ–∞–π–ª–æ–≤
    print("\nüéØ –û—á–∏—Å—Ç–∫–∞ forms.py —Ñ–∞–π–ª–æ–≤...")
    form_files = glob.glob('**/forms.py', recursive=True)
    for form_file in form_files:
        clean_file(form_file, forms_patterns)
    
    # 5. –û—á–∏—Å—Ç–∫–∞ urls.py —Ñ–∞–π–ª–æ–≤
    print("\nüéØ –û—á–∏—Å—Ç–∫–∞ urls.py —Ñ–∞–π–ª–æ–≤...")
    url_files = glob.glob('**/urls.py', recursive=True)
    for url_file in url_files:
        clean_file(url_file, urls_patterns)
    
    # 6. –û—á–∏—Å—Ç–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
    print("\nüéØ –û—á–∏—Å—Ç–∫–∞ HTML —à–∞–±–ª–æ–Ω–æ–≤...")
    template_files = glob.glob('**/templates/**/*.html', recursive=True)
    for template_file in template_files:
        clean_file(template_file, template_patterns)
    
    # 7. –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    print("\nüéØ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
    comment_files = [
        '**/comment_admin.py',
        '**/comment_forms.py',
        '**/comment_models.py',
        '**/comment_views.py',
        '**/comments.py',
    ]
    
    for pattern in comment_files:
        files = glob.glob(pattern, recursive=True)
        for file in files:
            try:
                os.remove(file)
                print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω: {file}")
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file}: {e}")
    
    # 8. –ü–æ–∏—Å–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
    print("\nüîç –ü–æ–∏—Å–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
    
    all_py_files = glob.glob('**/*.py', recursive=True)
    remaining_files = []
    
    for py_file in all_py_files:
        if 'venv' in py_file or '__pycache__' in py_file:
            continue
            
        try:
            with open(py_file, 'r', encoding='utf-8') as f:
                content = f.read()
                if re.search(r'comment|Comment', content, re.IGNORECASE):
                    # –ò—Å–∫–ª—é—á–∞–µ–º –±–µ–∑–æ–±–∏–¥–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                    if not re.search(r'#.*comment|""".*comment.*"""|\'\'\'.*comment.*\'\'\'', content, re.IGNORECASE | re.DOTALL):
                        remaining_files.append(py_file)
        except Exception as e:
            pass
    
    if remaining_files:
        print("\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:")
        for file in remaining_files[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"   üìÑ {file}")
        if len(remaining_files) > 10:
            print(f"   ... –∏ –µ—â–µ {len(remaining_files) - 10} —Ñ–∞–π–ª–æ–≤")
    else:
        print("‚úÖ –û—Å—Ç–∞—Ç–∫–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
    
    print("\n" + "=" * 60)
    print("üéâ –ó–ê–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 60)
    print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
    print("   ‚úÖ –û—á–∏—â–µ–Ω—ã –≤—Å–µ admin.py —Ñ–∞–π–ª—ã")
    print("   ‚úÖ –û—á–∏—â–µ–Ω—ã –≤—Å–µ models.py —Ñ–∞–π–ª—ã") 
    print("   ‚úÖ –û—á–∏—â–µ–Ω—ã –≤—Å–µ views.py —Ñ–∞–π–ª—ã")
    print("   ‚úÖ –û—á–∏—â–µ–Ω—ã –≤—Å–µ forms.py —Ñ–∞–π–ª—ã")
    print("   ‚úÖ –û—á–∏—â–µ–Ω—ã –≤—Å–µ urls.py —Ñ–∞–π–ª—ã")
    print("   ‚úÖ –û—á–∏—â–µ–Ω—ã HTML —à–∞–±–ª–æ–Ω—ã")
    print("   ‚úÖ –£–¥–∞–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print("   python manage.py makemigrations")
    print("   python manage.py migrate")
    print("   python manage.py runserver")

if __name__ == "__main__":
    main()
