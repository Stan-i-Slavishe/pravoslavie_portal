from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.utils.safestring import mark_safe
from .models import Category, Tag, ContactMessage, SiteSettings, MobileFeedback

@admin.register(Category)
class CategoryAdmin(admin.ModelAdmin):
    list_display = ['name', 'content_type', 'color_preview', 'is_active', 'order', 'created_at']
    list_filter = ['content_type', 'is_active', 'created_at']
    search_fields = ['name', 'description']
    prepopulated_fields = {'slug': ('name',)}
    list_editable = ['is_active', 'order']
    ordering = ['order', 'name']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'slug', 'description', 'content_type')
        }),
        ('–í–Ω–µ—à–Ω–∏–π –≤–∏–¥', {
            'fields': ('icon', 'color', 'order'),
            'classes': ('collapse',)
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active',)
        }),
    )
    
    def color_preview(self, obj):
        """–ü—Ä–µ–≤—å—é —Ü–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        return format_html(
            '<div style="width: 20px; height: 20px; background-color: {}; border: 1px solid #ccc; border-radius: 3px;"></div>',
            obj.color
        )
    color_preview.short_description = '–¶–≤–µ—Ç'
    
    def get_queryset(self, request):
        return super().get_queryset(request).select_related()

@admin.register(Tag)
class TagAdmin(admin.ModelAdmin):
    list_display = ['name', 'color_preview', 'is_active', 'created_at']
    list_filter = ['is_active', 'created_at']
    search_fields = ['name', 'description']
    prepopulated_fields = {'slug': ('name',)}
    list_editable = ['is_active']
    
    def color_preview(self, obj):
        """–ü—Ä–µ–≤—å—é —Ü–≤–µ—Ç–∞ —Ç–µ–≥–∞"""
        return format_html(
            '<span style="background-color: {}; color: white; padding: 2px 8px; border-radius: 12px; font-size: 12px;">{}</span>',
            obj.color,
            obj.name
        )
    color_preview.short_description = '–ü—Ä–µ–≤—å—é'

@admin.register(ContactMessage)
class ContactMessageAdmin(admin.ModelAdmin):
    list_display = ['name', 'email', 'subject', 'status', 'is_read', 'created_at']
    list_filter = ['status', 'subject', 'is_read', 'created_at']
    search_fields = ['name', 'email', 'message']
    readonly_fields = ['created_at', 'updated_at', 'ip_address', 'user_agent']
    list_editable = ['status', 'is_read']
    
    fieldsets = (
        ('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏–∏', {
            'fields': ('name', 'email', 'subject', 'message')
        }),
        ('–°—Ç–∞—Ç—É—Å', {
            'fields': ('status', 'is_read', 'admin_notes')
        }),
        ('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('ip_address', 'user_agent', 'created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )
    
    def get_readonly_fields(self, request, obj=None):
        if obj:  # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            return self.readonly_fields + ['name', 'email', 'subject', 'message']
        return self.readonly_fields
    
    actions = ['mark_as_read', 'mark_as_answered']
    
    def mark_as_read(self, request, queryset):
        updated = queryset.update(is_read=True)
        self.message_user(request, f'{updated} —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ.')
    mark_as_read.short_description = '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ'
    
    def mark_as_answered(self, request, queryset):
        updated = queryset.update(status='answered', is_read=True)
        self.message_user(request, f'{updated} —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ.')
    mark_as_answered.short_description = '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ'

@admin.register(MobileFeedback)
class MobileFeedbackAdmin(admin.ModelAdmin):
    list_display = ['feedback_type_display', 'message_preview', 'priority_badge', 'status_badge', 'user_info', 'is_read', 'created_at']
    list_filter = ['feedback_type', 'status', 'priority', 'is_read', 'created_at']
    search_fields = ['message', 'user__username', 'user__email', 'ip_address']
    readonly_fields = ['created_at', 'updated_at', 'ip_address', 'user_agent', 'url', 'screen_resolution']
    list_editable = ['is_read']  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ is_read
    ordering = ['-created_at']
    
    fieldsets = (
        ('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞—â–µ–Ω–∏–∏', {
            'fields': ('feedback_type', 'message', 'user')
        }),
        ('–°—Ç–∞—Ç—É—Å –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç', {
            'fields': ('status', 'priority', 'is_read', 'assigned_to')
        }),
        ('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏', {
            'fields': ('admin_notes',),
            'classes': ('collapse',)
        }),
        ('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('url', 'user_agent', 'ip_address', 'screen_resolution', 'created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )
    
    def feedback_type_display(self, obj):
        """–ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —Å –∏–∫–æ–Ω–∫–∞–º–∏"""
        icons = {
            'bug': 'üêõ',
            'feature': 'üí°',
            'design': 'üé®',
            'content': 'üìö',
            'performance': '‚ö°',
            'other': 'üí¨'
        }
        icon = icons.get(obj.feedback_type, 'üìù')
        return format_html(
            '{} {}',
            icon,
            obj.get_feedback_type_display()
        )
    feedback_type_display.short_description = '–¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è'
    
    def message_preview(self, obj):
        """–ü—Ä–µ–≤—å—é —Å–æ–æ–±—â–µ–Ω–∏—è"""
        preview = obj.message[:80]
        if len(obj.message) > 80:
            preview += '...'
        return preview
    message_preview.short_description = '–°–æ–æ–±—â–µ–Ω–∏–µ'
    
    def priority_badge(self, obj):
        """–ë–µ–π–¥–∂ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞"""
        color = obj.get_priority_color()
        return format_html(
            '<span style="background-color: {}; color: white; padding: 3px 8px; border-radius: 12px; font-size: 11px; font-weight: bold;">{}</span>',
            color,
            obj.get_priority_display()
        )
    priority_badge.short_description = '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç'
    
    def status_badge(self, obj):
        """–ë–µ–π–¥–∂ —Å—Ç–∞—Ç—É—Å–∞"""
        colors = {
            'new': '#dc3545',
            'in_progress': '#ffc107',
            'resolved': '#28a745',
            'closed': '#6c757d'
        }
        color = colors.get(obj.status, '#6c757d')
        return format_html(
            '<span style="background-color: {}; color: white; padding: 3px 8px; border-radius: 12px; font-size: 11px;">{}</span>',
            color,
            obj.get_status_display()
        )
    status_badge.short_description = '–°—Ç–∞—Ç—É—Å'
    
    def user_info(self, obj):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        if obj.user:
            return format_html(
                '<a href="{}">{}</a>',
                reverse('admin:auth_user_change', args=[obj.user.id]),
                obj.user.username
            )
        return '–ê–Ω–æ–Ω–∏–º–Ω—ã–π'
    user_info.short_description = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    
    def get_readonly_fields(self, request, obj=None):
        if obj:  # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            return self.readonly_fields + ['feedback_type', 'message', 'user']
        return self.readonly_fields
    
    actions = ['mark_as_read', 'mark_as_in_progress', 'mark_as_resolved', 'set_high_priority']
    
    def mark_as_read(self, request, queryset):
        updated = queryset.update(is_read=True)
        self.message_user(request, f'{updated} –æ–±—Ä–∞—â–µ–Ω–∏–π –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ.')
    mark_as_read.short_description = '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ'
    
    def mark_as_in_progress(self, request, queryset):
        updated = queryset.update(status='in_progress', is_read=True)
        self.message_user(request, f'{updated} –æ–±—Ä–∞—â–µ–Ω–∏–π –≤–∑—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É.')
    mark_as_in_progress.short_description = '–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É'
    
    def mark_as_resolved(self, request, queryset):
        updated = queryset.update(status='resolved', is_read=True)
        self.message_user(request, f'{updated} –æ–±—Ä–∞—â–µ–Ω–∏–π –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ —Ä–µ—à—ë–Ω–Ω—ã–µ.')
    mark_as_resolved.short_description = '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ —Ä–µ—à—ë–Ω–Ω—ã–µ'
    
    def set_high_priority(self, request, queryset):
        updated = queryset.update(priority='high')
        self.message_user(request, f'{updated} –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–æ–ª—É—á–∏–ª–∏ –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç.')
    set_high_priority.short_description = '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'

@admin.register(SiteSettings)
class SiteSettingsAdmin(admin.ModelAdmin):
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('site_name', 'site_description')
        }),
        ('–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('contact_email', 'contact_phone')
        }),
        # ‚≠ê –ù–û–í–´–ï –°–ï–ö–¶–ò–ò –î–õ–Ø –†–ï–ñ–ò–ú–ê –†–ê–ë–û–¢–´ –ò –ê–î–†–ï–°–ê
        ('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã', {
            'fields': ('work_hours', 'work_hours_note'),
            'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤'
        }),
        ('–ê–¥—Ä–µ—Å –∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ', {
            'fields': ('address_city', 'address_country', 'address_full'),
            'description': '–ê–¥—Ä–µ—Å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤'
        }),
        # ‚≠ê –ù–û–í–ê–Ø –°–ï–ö–¶–ò–Ø - –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–í–ò–ì–ê–¶–ò–ï–ô
        ('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π', {
            'fields': (
                'show_stories', 'stories_coming_soon',
                'show_books', 'books_coming_soon',
                'show_audio', 'audio_coming_soon',
                'show_fairy_tales', 'fairy_tales_coming_soon',
                'show_shop', 'shop_coming_soon',
            ),
            'description': '–í–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –±–µ–π–¥–∂–∏ "–°–∫–æ—Ä–æ"',
            'classes': ('wide',)
        }),
        ('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', {
            'fields': ('social_telegram', 'social_youtube', 'social_vk'),
            'classes': ('collapse',)
        }),
        ('–†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è', {
            'fields': ('maintenance_mode', 'maintenance_message'),
            'classes': ('collapse',)
        }),
        ('–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', {
            'fields': ('analytics_yandex', 'analytics_google'),
            'classes': ('collapse',)
        }),
    )
    
    # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º changelist_view —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    def changelist_view(self, request, extra_context=None):
        """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Å —Å–ø–∏—Å–∫–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        from django.http import HttpResponseRedirect
        from django.urls import reverse
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings = SiteSettings.get_settings()
        
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        return HttpResponseRedirect(
            reverse('admin:core_sitesettings_change', args=[settings.id])
        )
    
    def has_add_permission(self, request):
        # –ó–∞–ø—Ä–µ—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
        return False
    
    def has_delete_permission(self, request, obj=None):
        # –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        return False
    
    def has_change_permission(self, request, obj=None):
        # –í—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        return True

# –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∞–¥–º–∏–Ω–∫–∏
admin.site.site_header = '–ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'
admin.site.site_title = '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å'
admin.site.index_title = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è'