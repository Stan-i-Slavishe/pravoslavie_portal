from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from core.models import Category, Tag, SiteSettings


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ç–µ–≥–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)'

    def add_arguments(self, parser):
        parser.add_argument(
            '--superuser',
            action='store_true',
            help='–°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞...')
        )

        # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
        self.create_site_settings()
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        self.create_categories()
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–µ–≥–∏
        self.create_tags()
        
        # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if options['superuser']:
            self.create_superuser()

        self.stdout.write(
            self.style.SUCCESS('‚úÖ –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!')
        )

    def create_site_settings(self):
        """–°–æ–∑–¥–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞"""
        settings, created = SiteSettings.objects.get_or_create(pk=1)
        if created:
            self.stdout.write('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ —Å–æ–∑–¥–∞–Ω—ã')
        else:
            self.stdout.write('‚ÑπÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç')

    def create_categories(self):
        """–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        categories_data = [
            # –í–∏–¥–µ–æ-—Ä–∞—Å—Å–∫–∞–∑—ã
            {
                'name': '–î—É—Ö–æ–≤–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏',
                'content_type': 'story',
                'description': '–†–∞—Å—Å–∫–∞–∑—ã –æ –¥—É—Ö–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö –∏ –æ–ø—ã—Ç–µ –≤–µ—Ä—ã',
                'icon': 'bi-heart',
                'color': '#e17055',
                'order': 1
            },
            {
                'name': '–ñ–∏—Ç–∏—è —Å–≤—è—Ç—ã—Ö',
                'content_type': 'story',
                'description': '–í–∏–¥–µ–æ-—Ä–∞—Å—Å–∫–∞–∑—ã –æ –∂–∏–∑–Ω–∏ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã—Ö —Å–≤—è—Ç—ã—Ö',
                'icon': 'bi-star',
                'color': '#fdcb6e',
                'order': 2
            },
            {
                'name': '–ü–∞–ª–æ–º–Ω–∏—á–µ—Å—Ç–≤–æ',
                'content_type': 'story',
                'description': '–†–∞—Å—Å–∫–∞–∑—ã –æ –ø–∞–ª–æ–º–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–µ–∑–¥–∫–∞—Ö –∏ —Å–≤—è—Ç—ã—Ö –º–µ—Å—Ç–∞—Ö',
                'icon': 'bi-geo-alt',
                'color': '#00b894',
                'order': 3
            },
            
            # –ö–Ω–∏–≥–∏
            {
                'name': '–î—É—Ö–æ–≤–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
                'content_type': 'book',
                'description': '–ö–Ω–∏–≥–∏ –æ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–π –≤–µ—Ä–µ –∏ –¥—É—Ö–æ–≤–Ω–æ—Å—Ç–∏',
                'icon': 'bi-book',
                'color': '#0984e3',
                'order': 10
            },
            {
                'name': '–ë–æ–≥–æ—Å–ª–æ–≤–∏–µ',
                'content_type': 'book',
                'description': '–ë–æ–≥–æ—Å–ª–æ–≤—Å–∫–∏–µ —Ç—Ä—É–¥—ã –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
                'icon': 'bi-mortarboard',
                'color': '#6c5ce7',
                'order': 11
            },
            {
                'name': '–î–µ—Ç—Å–∫–∏–µ –∫–Ω–∏–≥–∏',
                'content_type': 'book',
                'description': '–ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–µ–π',
                'icon': 'bi-emoji-smile',
                'color': '#fd79a8',
                'order': 12
            },
            
            # –ê—É–¥–∏–æ
            {
                'name': '–ü—Ä–æ–ø–æ–≤–µ–¥–∏',
                'content_type': 'audio',
                'description': '–ê—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –ø—Ä–æ–ø–æ–≤–µ–¥–µ–π —Å–≤—è—â–µ–Ω–Ω–∏–∫–æ–≤',
                'icon': 'bi-mic',
                'color': '#00cec9',
                'order': 20
            },
            {
                'name': '–ê–∫–∞—Ñ–∏—Å—Ç—ã',
                'content_type': 'audio',
                'description': '–ê—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã—Ö –∞–∫–∞—Ñ–∏—Å—Ç–æ–≤',
                'icon': 'bi-music-note',
                'color': '#a29bfe',
                'order': 21
            },
            {
                'name': '–ê—É–¥–∏–æ–∫–Ω–∏–≥–∏',
                'content_type': 'audio',
                'description': '–î—É—Ö–æ–≤–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ –≤ –∞—É–¥–∏–æ—Ñ–æ—Ä–º–∞—Ç–µ',
                'icon': 'bi-headphones',
                'color': '#74b9ff',
                'order': 22
            },
        ]

        created_count = 0
        for cat_data in categories_data:
            category, created = Category.objects.get_or_create(
                name=cat_data['name'],
                defaults=cat_data
            )
            if created:
                created_count += 1

        self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {created_count}')

    def create_tags(self):
        """–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ —Ç–µ–≥–∏"""
        tags_data = [
            {'name': '–≤–µ—Ä–∞', 'color': '#e17055'},
            {'name': '–º–æ–ª–∏—Ç–≤–∞', 'color': '#0984e3'},
            {'name': '–ø–æ–∫–∞—è–Ω–∏–µ', 'color': '#6c5ce7'},
            {'name': '–ª—é–±–æ–≤—å', 'color': '#fd79a8'},
            {'name': '—Å–º–∏—Ä–µ–Ω–∏–µ', 'color': '#00b894'},
            {'name': '–Ω–∞–¥–µ–∂–¥–∞', 'color': '#fdcb6e'},
            {'name': '—Å–µ–º—å—è', 'color': '#e84393'},
            {'name': '–¥–µ—Ç–∏', 'color': '#00cec9'},
            {'name': '–≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ', 'color': '#a29bfe'},
            {'name': '—Ç—Ä–∞–¥–∏—Ü–∏–∏', 'color': '#74b9ff'},
            {'name': '–ø—Ä–∞–∑–¥–Ω–∏–∫–∏', 'color': '#55a3ff'},
            {'name': '–ø–æ—Å—Ç', 'color': '#81ecec'},
            {'name': '–∏—Å–ø–æ–≤–µ–¥—å', 'color': '#fab1a0'},
            {'name': '–ø—Ä–∏—á–∞—Å—Ç–∏–µ', 'color': '#ff7675'},
            {'name': '—Ö—Ä–∞–º', 'color': '#636e72'},
        ]

        created_count = 0
        for tag_data in tags_data:
            tag, created = Tag.objects.get_or_create(
                name=tag_data['name'],
                defaults=tag_data
            )
            if created:
                created_count += 1

        self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ–≥–æ–≤: {created_count}')

    def create_superuser(self):
        """–°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not User.objects.filter(is_superuser=True).exists():
            User.objects.create_superuser(
                username='admin',
                email='admin@pravoslavie-portal.ru',
                password='admin123'
            )
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:')
            )
            self.stdout.write('   –õ–æ–≥–∏–Ω: admin')
            self.stdout.write('   –ü–∞—Ä–æ–ª—å: admin123')
            self.stdout.write('   üîí –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!')
        else:
            self.stdout.write('‚ÑπÔ∏è  –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')