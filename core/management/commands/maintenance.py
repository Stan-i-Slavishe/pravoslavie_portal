from django.core.management.base import BaseCommand
from django.conf import settings
import os
import json
from datetime import datetime, timedelta


class Command(BaseCommand):
    help = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'
    
    def add_arguments(self, parser):
        parser.add_argument(
            'action',
            type=str,
            choices=['on', 'off', 'status'],
            help='–î–µ–π—Å—Ç–≤–∏–µ: –≤–∫–ª—é—á–∏—Ç—å (on), –≤—ã–∫–ª—é—á–∏—Ç—å (off), –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å (status)'
        )
        
        parser.add_argument(
            '--message',
            type=str,
            help='–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'
        )
        
        parser.add_argument(
            '--hours',
            type=int,
            default=2,
            help='–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤ —á–∞—Å–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2)'
        )
        
        parser.add_argument(
            '--allow-ip',
            type=str,
            action='append',
            help='IP-–∞–¥—Ä–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–æ—Å—Ç—É–ø –≤–æ –≤—Ä–µ–º—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'
        )
    
    def handle(self, *args, **options):
        action = options['action']
        
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
        config_file = os.path.join(settings.BASE_DIR, 'maintenance_config.json')
        
        if action == 'on':
            # –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
            config = {
                'enabled': True,
                'message': options.get('message') or '–°–∞–π—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏. –ú—ã —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω—ë–º—Å—è!',
                'start_time': datetime.now().isoformat(),
                'estimated_end_time': (datetime.now() + timedelta(hours=options['hours'])).isoformat(),
                'allowed_ips': options.get('allow_ip') or []
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            with open(config_file, 'w', encoding='utf-8') as f:
                json.dump(config, f, ensure_ascii=False, indent=2)
            
            self.stdout.write(
                self.style.SUCCESS(
                    f'‚úÖ –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –í–ö–õ–Æ–ß–ï–ù\n'
                    f'   –°–æ–æ–±—â–µ–Ω–∏–µ: {config["message"]}\n'
                    f'   –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {config["estimated_end_time"]}\n'
                    f'   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ IP: {", ".join(config["allowed_ips"]) if config["allowed_ips"] else "—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"}'
                )
            )
            
            self.stdout.write(
                self.style.WARNING(
                    '\n‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:\n'
                    '   python manage.py runserver'
                )
            )
            
        elif action == 'off':
            # –í—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
            if os.path.exists(config_file):
                with open(config_file, 'r', encoding='utf-8') as f:
                    config = json.load(f)
                
                config['enabled'] = False
                config['end_time'] = datetime.now().isoformat()
                
                with open(config_file, 'w', encoding='utf-8') as f:
                    json.dump(config, f, ensure_ascii=False, indent=2)
                
                # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
                if 'start_time' in config:
                    start = datetime.fromisoformat(config['start_time'])
                    end = datetime.now()
                    duration = end - start
                    duration_str = str(duration).split('.')[0]  # –£–±–∏—Ä–∞–µ–º –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã
                else:
                    duration_str = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                
                self.stdout.write(
                    self.style.SUCCESS(
                        f'‚úÖ –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –í–´–ö–õ–Æ–ß–ï–ù\n'
                        f'   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è: {duration_str}'
                    )
                )
            else:
                self.stdout.write(
                    self.style.WARNING('–†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω')
                )
            
            self.stdout.write(
                self.style.WARNING(
                    '\n‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:\n'
                    '   python manage.py runserver'
                )
            )
            
        elif action == 'status':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–∂–∏–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
            if os.path.exists(config_file):
                with open(config_file, 'r', encoding='utf-8') as f:
                    config = json.load(f)
                
                if config.get('enabled', False):
                    self.stdout.write(
                        self.style.WARNING(
                            f'üîß –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è: –í–ö–õ–Æ–ß–ï–ù\n'
                            f'   –ù–∞—á–∞–ª–æ: {config.get("start_time", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")}\n'
                            f'   –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: {config.get("estimated_end_time", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")}\n'
                            f'   –°–æ–æ–±—â–µ–Ω–∏–µ: {config.get("message", "")}\n'
                            f'   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ IP: {", ".join(config.get("allowed_ips", [])) if config.get("allowed_ips") else "—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"}'
                        )
                    )
                else:
                    self.stdout.write(
                        self.style.SUCCESS('‚úÖ –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è: –í–´–ö–õ–Æ–ß–ï–ù')
                    )
                    if 'end_time' in config:
                        self.stdout.write(
                            f'   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {config["end_time"]}'
                        )
            else:
                self.stdout.write(
                    self.style.SUCCESS('‚úÖ –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è: –í–´–ö–õ–Æ–ß–ï–ù (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)')
                )
