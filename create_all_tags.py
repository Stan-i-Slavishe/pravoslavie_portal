"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–µ–≥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from core.models import Tag as CoreTag
from stories.models import Story
from django.db import connection

def main():
    print("\n" + "=" * 70)
    print("–°–û–ó–î–ê–ù–ò–ï –ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –¢–ï–ì–û–í")
    print("=" * 70)
    
    # –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤ –¥–ª—è –≤–∏–¥–µ–æ-—Ä–∞—Å—Å–∫–∞–∑–æ–≤
    required_tags = [
        ('–∞–ª–∫–æ–≥–æ–ª—å', '#e74c3c'),
        ('–±–∞–±—É—à–∫–∞', '#9b59b6'),
        ('–±–∞–Ω–¥–∏—Ç—ã', '#2c3e50'),
        ('–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞', '#f39c12'),
        ('–í–û–í', '#c0392b'),
        ('–≤—Ä–∞–∑—É–º–ª–µ–Ω–∏–µ', '#3498db'),
        ('–≤—Ä–∞—á–µ–±–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏', '#16a085'),
        ('–≥–æ–Ω–µ–Ω–∏—è', '#d35400'),
        ('–¥–µ–¥—É—à–∫–∞', '#8e44ad'),
        ('–¥–µ—Ç–∏', '#e91e63'),
        ('–¥–æ–±—Ä–æ–µ —Å–ª–æ–≤–æ', '#27ae60'),
        ('–¥–æ—á—å', '#ff6b9d'),
        ('–∂–µ—Ä—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '#00b894'),
        ('–∂–∏–≤–æ—Ç–Ω—ã–µ', '#fdcb6e'),
        ('–∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –ª–æ–≥–∏–∫–∏', '#6c5ce7'),
        ('–∏—Å–ø—ã—Ç–∞–Ω–∏—è', '#e17055'),
        ('–∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –∂–∏–∑–Ω–∏', '#74b9ff'),
        ('–∏—Å—Ü–µ–ª–µ–Ω–∏–µ', '#a29bfe'),
        ('–∫—Ä–æ—Ç–æ—Å—Ç—å', '#00cec9'),
        ('–º–∞–º–∞', '#fd79a8'),
        ('–º–æ–ª–∏—Ç–≤–∞', '#74b9ff'),
        ('–º–æ—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞', '#ff7675'),
        ('–ø–∞–ø–∞', '#0984e3'),
        ('–ø–æ–∫–∞—è–Ω–∏–µ (–∏–∑–º–µ–Ω–µ–Ω–∏–µ)', '#00b894'),
        ('–ø—Ä–æ—Å—Ç–∞—è —Ä–∞–¥–æ—Å—Ç—å', '#ffeaa7'),
        ('—Å–µ–º—å—è', '#fab1a0'),
        ('—Å–∏–ª—å–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å', '#e17055'),
        ('—Å–º–∏—Ä–µ–Ω–∏–µ', '#81ecec'),
        ('—Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ', '#55efc4'),
        ('—Å—ã–Ω', '#6c5ce7'),
        ('—Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∞—è –ª—é–±–æ–≤—å', '#ff6348'),
        ('—á—É–¥–µ—Å–∞', '#a29bfe'),
        ('—à–∫–æ–ª–∞', '#fdcb6e')
    ]
    
    created_count = 0
    updated_count = 0
    
    print("\n–°–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤:")
    print("-" * 40)
    
    for tag_name, color in required_tags:
        tag, created = CoreTag.objects.get_or_create(
            name=tag_name,
            defaults={
                'is_active': True,
                'description': f'–¢–µ–≥ –¥–ª—è –≤–∏–¥–µ–æ-—Ä–∞—Å—Å–∫–∞–∑–æ–≤',
                'color': color
            }
        )
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ–≥: {tag.name} (—Ü–≤–µ—Ç: {color})")
            created_count += 1
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–µ–≥–∞
            changed = False
            if tag.color != color:
                tag.color = color
                changed = True
            if not tag.is_active:
                tag.is_active = True
                changed = True
            
            if changed:
                tag.save()
                updated_count += 1
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–µ–≥: {tag.name} (—Ü–≤–µ—Ç: {color})")
            else:
                print(f"‚úîÔ∏è –¢–µ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {tag.name}")
    
    # –û—á–∏—Å—Ç–∫–∞ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫
    print("\n" + "-" * 40)
    print("–û—á–∏—Å—Ç–∫–∞ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫...")
    
    with connection.cursor() as cursor:
        cursor.execute("""
            DELETE FROM stories_story_tags 
            WHERE tag_id NOT IN (SELECT id FROM core_tag);
        """)
        deleted_count = cursor.rowcount
        
        if deleted_count > 0:
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫: {deleted_count}")
        else:
            print("‚úÖ –ë–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "=" * 70)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("-" * 40)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ç–µ–≥–æ–≤: {created_count}")
    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–µ–≥–æ–≤: {updated_count}")
    print(f"üìä –í—Å–µ–≥–æ —Ç–µ–≥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {CoreTag.objects.count()}")
    print(f"‚ú® –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ–≥–æ–≤: {CoreTag.objects.filter(is_active=True).count()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ —Å —Ä–∞—Å—Å–∫–∞–∑–∞–º–∏
    stories_with_tags = Story.objects.filter(tags__isnull=False).distinct().count()
    print(f"üìö –†–∞—Å—Å–∫–∞–∑–æ–≤ —Å —Ç–µ–≥–∞–º–∏: {stories_with_tags}")
    
    print("\n‚úÖ –ì–û–¢–û–í–û! –¢–µ–≥–∏ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")
    print("–¢–µ–ø–µ—Ä—å –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ /tags/")
    
if __name__ == '__main__':
    main()
