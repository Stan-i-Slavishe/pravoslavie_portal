#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ PostgreSQL —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
"""

import os
import subprocess
import sys
from datetime import datetime
import shutil

def create_backup():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞ PostgreSQL"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    db_settings = {
        'host': 'localhost',
        'port': '5432',
        'database': 'pravoslavie_local_db',
        'user': 'pravoslavie_user',
        'password': 'local_strong_password_2024'
    }
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è pg_dump
    os.environ['PGPASSWORD'] = db_settings['password']
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –±—ç–∫–∞–ø–∞
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    backup_dir = f"backups/postgresql_{timestamp}"
    os.makedirs(backup_dir, exist_ok=True)
    
    print(f"–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ PostgreSQL...")
    print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_settings['database']}")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {db_settings['user']}")
    print(f"–ü–∞–ø–∫–∞ –±—ç–∫–∞–ø–∞: {backup_dir}")
    print()
    
    # 1. SQL –¥–∞–º–ø
    sql_file = os.path.join(backup_dir, 'database.sql')
    print("–°–æ–∑–¥–∞–Ω–∏–µ SQL –¥–∞–º–ø–∞...")
    
    try:
        cmd = [
            'pg_dump',
            '-h', db_settings['host'],
            '-p', db_settings['port'], 
            '-U', db_settings['user'],
            '-d', db_settings['database'],
            '-f', sql_file,
            '--verbose',
            '--no-owner',
            '--no-privileges'
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True, check=True)
        print(f"‚úÖ SQL –¥–∞–º–ø —Å–æ–∑–¥–∞–Ω: {sql_file}")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SQL –¥–∞–º–ø–∞: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stderr}")
    
    # 2. –°–∂–∞—Ç—ã–π –¥–∞–º–ø
    dump_file = os.path.join(backup_dir, 'database.dump')
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Å–∂–∞—Ç–æ–≥–æ –¥–∞–º–ø–∞...")
    
    try:
        cmd = [
            'pg_dump',
            '-h', db_settings['host'],
            '-p', db_settings['port'],
            '-U', db_settings['user'], 
            '-d', db_settings['database'],
            '-f', dump_file,
            '--format=custom',
            '--compress=9',
            '--verbose',
            '--no-owner',
            '--no-privileges'
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True, check=True)
        print(f"‚úÖ –°–∂–∞—Ç—ã–π –¥–∞–º–ø —Å–æ–∑–¥–∞–Ω: {dump_file}")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∂–∞—Ç–æ–≥–æ –¥–∞–º–ø–∞: {e}")
    
    # 3. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤
    media_src = 'media'
    media_dst = os.path.join(backup_dir, 'media')
    
    if os.path.exists(media_src):
        print("–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤...")
        shutil.copytree(media_src, media_dst)
        print(f"‚úÖ –ú–µ–¥–∏–∞-—Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ {media_dst}")
    else:
        print("‚ö†Ô∏è –ü–∞–ø–∫–∞ media –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # 4. Django fixture
    print("–°–æ–∑–¥–∞–Ω–∏–µ Django fixture...")
    django_file = os.path.join(backup_dir, 'django_data.json')
    
    try:
        os.environ['DJANGO_ENV'] = 'local'
        cmd = [
            sys.executable, 'manage.py', 'dumpdata',
            '--natural-foreign', '--natural-primary',
            '--settings=config.settings_local',
            '-o', django_file
        ]
        
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print(f"‚úÖ Django fixture —Å–æ–∑–¥–∞–Ω: {django_file}")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Django fixture: {e}")
    
    # 5. –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    info_file = os.path.join(backup_dir, 'backup_info.txt')
    with open(info_file, 'w', encoding='utf-8') as f:
        f.write("POSTGRESQL BACKUP - PRAVOSLAVIE PORTAL\n")
        f.write("="*50 + "\n\n")
        f.write(f"–°–æ–∑–¥–∞–Ω: {datetime.now()}\n")
        f.write(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_settings['database']}\n")
        f.write(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {db_settings['user']}\n")
        f.write(f"–•–æ—Å—Ç: {db_settings['host']}\n")
        f.write(f"–ü–æ—Ä—Ç: {db_settings['port']}\n\n")
        
        f.write("–°–û–î–ï–†–ñ–ò–ú–û–ï –ë–≠–ö–ê–ü–ê:\n")
        f.write("- database.sql     : SQL –¥–∞–º–ø (—á–∏—Ç–∞–µ–º—ã–π)\n")
        f.write("- database.dump    : –°–∂–∞—Ç—ã–π –¥–∞–º–ø (–¥–ª—è pg_restore)\n")
        f.write("- django_data.json : Django fixture\n")
        f.write("- media/           : –ú–µ–¥–∏–∞-—Ñ–∞–π–ª—ã\n\n")
        
        f.write("–ö–û–ú–ê–ù–î–´ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:\n")
        f.write("1. –ò–∑ SQL –¥–∞–º–ø–∞:\n")
        f.write(f"   psql -h {db_settings['host']} -U {db_settings['user']} -d {db_settings['database']} -f database.sql\n\n")
        f.write("2. –ò–∑ —Å–∂–∞—Ç–æ–≥–æ –¥–∞–º–ø–∞:\n")
        f.write(f"   pg_restore -h {db_settings['host']} -U {db_settings['user']} -d {db_settings['database']} database.dump\n\n")
        f.write("3. Django fixture:\n")
        f.write("   python manage.py loaddata django_data.json\n\n")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–∞—Ö —Ñ–∞–π–ª–æ–≤
        f.write("–†–ê–ó–ú–ï–†–´ –§–ê–ô–õ–û–í:\n")
        for root, dirs, files in os.walk(backup_dir):
            for file in files:
                if file != 'backup_info.txt':  # –ù–µ –≤–∫–ª—é—á–∞–µ–º —Å–∞–º info —Ñ–∞–π–ª
                    filepath = os.path.join(root, file)
                    size = os.path.getsize(filepath)
                    rel_path = os.path.relpath(filepath, backup_dir)
                    f.write(f"{rel_path}: {size:,} –±–∞–π—Ç\n")
    
    print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {info_file}")
    
    # –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –ø–∞—Ä–æ–ª–µ–º
    if 'PGPASSWORD' in os.environ:
        del os.environ['PGPASSWORD']
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "="*50)
    print("–ë–≠–ö–ê–ü –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
    print("="*50)
    print(f"üìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {backup_dir}")
    print("\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:")
    
    total_size = 0
    for root, dirs, files in os.walk(backup_dir):
        for file in files:
            filepath = os.path.join(root, file)
            size = os.path.getsize(filepath)
            total_size += size
            rel_path = os.path.relpath(filepath, backup_dir)
            print(f"   üìÑ {rel_path}: {size:,} –±–∞–π—Ç")
    
    print(f"\nüìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: {total_size:,} –±–∞–π—Ç ({total_size/1024/1024:.1f} MB)")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   ‚Ä¢ –•—Ä–∞–Ω–∏—Ç–µ –±—ç–∫–∞–ø—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ")
    print("   ‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ –±—ç–∫–∞–ø—ã") 
    print("   ‚Ä¢ –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–∏")
    
    return backup_dir

if __name__ == "__main__":
    try:
        backup_location = create_backup()
        print(f"\nüéâ –ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤: {backup_location}")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞: {e}")
        import traceback
        traceback.print_exc()