#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –°—Ç–∞–Ω–∏—Å–ª–∞–≤
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth.models import User
from stories.models import Playlist, PlaylistItem, Story

def create_playlists_for_stanislav():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –°—Ç–∞–Ω–∏—Å–ª–∞–≤"""
    
    try:
        # –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –°—Ç–∞–Ω–∏—Å–ª–∞–≤
        user = User.objects.filter(username='–°—Ç–∞–Ω–∏—Å–ª–∞–≤').first()
        if not user:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ first_name
            user = User.objects.filter(first_name='–°—Ç–∞–Ω–∏—Å–ª–∞–≤').first()
        
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '–°—Ç–∞–Ω–∏—Å–ª–∞–≤' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            for u in User.objects.all():
                print(f"   - {u.username} ({u.first_name} {u.last_name})")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} ({user.first_name} {user.last_name})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã
        existing_playlists = Playlist.objects.filter(creator=user).count()
        print(f"‚ÑπÔ∏è  –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å {existing_playlists} –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã
        playlists_data = [
            {
                'title': '–ú–æ–∏ –ª—é–±–∏–º—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã',
                'description': '–°–∞–º—ã–µ —Ç—Ä–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏',
                'playlist_type': 'public'
            },
            {
                'title': '–î–µ—Ç—Å–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏',
                'description': '–î–æ–±—Ä—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã –¥–ª—è –¥–µ—Ç–µ–π',
                'playlist_type': 'private'
            },
            {
                'title': '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã',
                'description': '–†–∞—Å—Å–∫–∞–∑—ã –∫ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–º –ø—Ä–∞–∑–¥–Ω–∏–∫–∞–º',
                'playlist_type': 'public'
            }
        ]
        
        created_count = 0
        
        from django.utils.text import slugify
        
        for playlist_data in playlists_data:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–ª–µ–π–ª–∏—Å—Ç
            existing = Playlist.objects.filter(
                creator=user,
                title=playlist_data['title']
            ).first()
            
            if existing:
                print(f"‚ö†Ô∏è  –ü–ª–µ–π–ª–∏—Å—Ç '{playlist_data['title']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                continue
            
            # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π slug
            base_slug = slugify(playlist_data['title'], allow_unicode=True)
            if not base_slug:
                base_slug = f'playlist-{created_count + 1}'
            
            slug = base_slug
            counter = 1
            while Playlist.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1
            
            # –°–æ–∑–¥–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç
            playlist = Playlist.objects.create(
                creator=user,
                title=playlist_data['title'],
                slug=slug,
                description=playlist_data['description'],
                playlist_type=playlist_data['playlist_type']
            )
            
            created_count += 1
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–ª–µ–π–ª–∏—Å—Ç: {playlist.title} (slug: {playlist.slug})")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Å–∫–∞–∑—ã –≤ –ø–ª–µ–π–ª–∏—Å—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
        stories = Story.objects.filter(is_published=True)[:5]
        if stories.exists():
            print(f"\nüìπ –ù–∞–π–¥–µ–Ω–æ {stories.count()} —Ä–∞—Å—Å–∫–∞–∑–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
            
            playlists = Playlist.objects.filter(creator=user)
            for playlist in playlists:
                # –î–æ–±–∞–≤–ª—è–µ–º 1-2 —Ä–∞—Å—Å–∫–∞–∑–∞ –≤ –∫–∞–∂–¥—ã–π –ø–ª–µ–π–ª–∏—Å—Ç
                import random
                selected_stories = random.sample(list(stories), min(2, len(stories)))
                
                for i, story in enumerate(selected_stories, 1):
                    playlist_item, created = PlaylistItem.objects.get_or_create(
                        playlist=playlist,
                        story=story,
                        defaults={'order': i}
                    )
                    
                    if created:
                        print(f"  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω '{story.title}' –≤ '{playlist.title}'")
        
        print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {created_count} –Ω–æ–≤—ã—Ö –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤!")
        print(f"üìã –í—Å–µ–≥–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}: {Playlist.objects.filter(creator=user).count()} –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –¥–ª—è –°—Ç–∞–Ω–∏—Å–ª–∞–≤–∞...")
    success = create_playlists_for_stanislav()
    
    if success:
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å:")
        print("   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
        print("   2. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (Ctrl+F5)")
        print("   3. –í–∏–¥–∂–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —Å–∞–π–¥–±–∞—Ä–µ")
    else:
        print("\n‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")
