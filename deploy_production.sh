#!/bin/bash
# üöÄ –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä
# –§–∞–π–ª: deploy_production.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –î–µ–ø–ª–æ–π –ø—Ä–æ–µ–∫—Ç–∞ dobrist.com –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥ –≤–∞—à —Å–µ—Ä–≤–µ—Ä)
PROJECT_PATH="/var/www/dobrist.com"
VENV_PATH="$PROJECT_PATH/venv"
SERVICE_NAME="dobrist"
NGINX_SERVICE="nginx"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
if [ "$EUID" -ne 0 ]; then 
    error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo $0"
    exit 1
fi

log "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
BACKUP_DIR="/var/backups/dobrist_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"
cp -r "$PROJECT_PATH" "$BACKUP_DIR/"
log "‚úÖ –ë—ç–∫–∞–ø: $BACKUP_DIR"

cd "$PROJECT_PATH"

log "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
git stash push -m "Production backup $(date)"

log "‚¨áÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞..."
git fetch origin
git pull origin main

log "üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∫—à–µ–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π .env
cp .env.production .env

log "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
source "$VENV_PATH/bin/activate"
pip install -r requirements.txt

log "üóÑÔ∏è –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
python manage.py migrate --noinput

log "üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
python manage.py collectstatic --clear --noinput

log "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Service Worker..."
if [ -f "static/sw.js" ]; then
    NEW_VERSION="pravoslavie-portal-v$(date +%s)"
    sed -i "s/const CACHE_NAME = 'pravoslavie-portal-v[^']*'/const CACHE_NAME = '$NEW_VERSION'/" static/sw.js
    log "‚úÖ SW –≤–µ—Ä—Å–∏—è: $NEW_VERSION"
fi

log "üñºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ PWA –∏–∫–æ–Ω–æ–∫..."
ICONS_DIR="static/icons"
REQUIRED_ICONS=("icon-72x72.png" "icon-192x192.png" "icon-512x512.png" "favicon.svg")

for icon in "${REQUIRED_ICONS[@]}"; do
    if [ ! -f "$ICONS_DIR/$icon" ]; then
        warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $ICONS_DIR/$icon"
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if command -v convert &> /dev/null; then
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é SVG –∏–∫–æ–Ω–∫—É
            cat > temp_icon.svg << 'EOF'
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 192">
  <rect width="192" height="192" fill="#2B5AA0"/>
  <text x="96" y="120" font-family="Arial" font-size="100" fill="#D4AF37" text-anchor="middle">‚úù</text>
</svg>
EOF
            if [[ $icon == *.png ]]; then
                size=${icon%%.png}
                size=${size##*-}
                convert temp_icon.svg -resize ${size} "$ICONS_DIR/$icon"
                log "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞: $icon"
            elif [[ $icon == *.svg ]]; then
                cp temp_icon.svg "$ICONS_DIR/$icon"
                log "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞: $icon"
            fi
            rm -f temp_icon.svg
        fi
    else
        log "‚úÖ –ò–∫–æ–Ω–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: $icon"
    fi
done

log "üîÑ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–±–æ—Ä —Å—Ç–∞—Ç–∏–∫–∏..."
python manage.py collectstatic --noinput

log "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
nginx -t
if [ $? -eq 0 ]; then
    log "‚úÖ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OK"
else
    error "‚ùå –û—à–∏–±–∫–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    exit 1
fi

log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl restart "$SERVICE_NAME"
systemctl reload "$NGINX_SERVICE"

log "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
sleep 3

if systemctl is-active --quiet "$SERVICE_NAME"; then
    log "‚úÖ Django —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω"
else
    error "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Django —Å–µ—Ä–≤–∏—Å–æ–º"
    systemctl status "$SERVICE_NAME"
    exit 1
fi

if systemctl is-active --quiet "$NGINX_SERVICE"; then
    log "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω"
else
    error "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Nginx"
    systemctl status "$NGINX_SERVICE"
    exit 1
fi

log "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
python manage.py shell -c "
from django.core.cache import cache
try:
    cache.clear()
    print('‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω')
except Exception as e:
    print(f'‚ö†Ô∏è –ö—ç—à –Ω–µ –æ—á–∏—â–µ–Ω: {e}')
" || warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à"

log "üåç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞..."
sleep 2
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://dobrist.com/ || echo "000")
if [ "$HTTP_CODE" -eq 200 ]; then
    log "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $HTTP_CODE)"
else
    warning "‚ö†Ô∏è –°–∞–π—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ $HTTP_CODE"
fi

log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
CRITICAL_FILES=(
    "staticfiles/manifest.json"
    "staticfiles/sw.js"
    "staticfiles/icons/icon-192x192.png"
)

for file in "${CRITICAL_FILES[@]}"; do
    if [ -f "$file" ]; then
        log "‚úÖ $file"
    else
        warning "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $file"
    fi
done

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
log "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chown -R www-data:www-data "$PROJECT_PATH/media/"
chown -R www-data:www-data "$PROJECT_PATH/staticfiles/"
chmod -R 755 "$PROJECT_PATH/media/"
chmod -R 755 "$PROJECT_PATH/staticfiles/"

echo ""
log "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo -e "${GREEN}üìã –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:${NC}"
echo "1. üåê https://dobrist.com - –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç"
echo "2. üì± PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–∏–∫–æ–Ω–∫–∞ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ)"
echo "3. üîß F12 ‚Üí Application ‚Üí Service Workers"
echo "4. üìñ –í—Å–µ —Ä–∞–∑–¥–µ–ª—ã: —Å–∫–∞–∑–∫–∏, –∫–Ω–∏–≥–∏, –º–∞–≥–∞–∑–∏–Ω"
echo ""
echo -e "${YELLOW}üõ†Ô∏è –î–ª—è –æ—Ç–ª–∞–¥–∫–∏:${NC}"
echo "- –õ–æ–≥–∏ Django: journalctl -u $SERVICE_NAME -f"
echo "- –õ–æ–≥–∏ Nginx: tail -f /var/log/nginx/error.log"
echo "- –°—Ç–∞—Ç—É—Å: systemctl status $SERVICE_NAME"
echo ""
echo -e "${GREEN}üéä dobrist.com –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏!${NC}"
