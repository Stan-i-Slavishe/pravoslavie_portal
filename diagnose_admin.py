#!/usr/bin/env python
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∫–∏ Django
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Django: {e}")
    sys.exit(1)

def check_admin_issues():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–¥–º–∏–Ω–∫–æ–π"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ê–î–ú–ò–ù–ö–ò DJANGO")
    print("=" * 50)
    
    issues_found = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    try:
        from django.db import connection
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        issues_found.append("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π...")
    try:
        from django.core.management import execute_from_command_line
        from io import StringIO
        import contextlib
        
        # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã
        f = StringIO()
        with contextlib.redirect_stdout(f):
            try:
                execute_from_command_line(['manage.py', 'showmigrations', '--plan'])
                print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ –ø–æ—Ä—è–¥–∫–µ")
            except SystemExit:
                pass
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        issues_found.append("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–¥–º–∏–Ω–∫–∏
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–¥–º–∏–Ω–∫–∏...")
    try:
        from django.contrib.auth.models import User
        admin_users = User.objects.filter(is_superuser=True)
        if admin_users.exists():
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {admin_users.count()} —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        else:
            print("‚ö†Ô∏è –ù–µ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –°–æ–∑–¥–∞–π—Ç–µ —á–µ—Ä–µ–∑: python manage.py createsuperuser")
            issues_found.append("–ù–µ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        issues_found.append("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...")
    try:
        from django.conf import settings
        static_root = getattr(settings, 'STATIC_ROOT', None)
        static_url = getattr(settings, 'STATIC_URL', None)
        
        if static_url:
            print(f"‚úÖ STATIC_URL: {static_url}")
        else:
            print("‚ö†Ô∏è STATIC_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            issues_found.append("STATIC_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            
        if static_root:
            print(f"‚úÖ STATIC_ROOT: {static_root}")
        else:
            print("‚ö†Ô∏è STATIC_ROOT –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤: {e}")
        
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ middleware
    print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ middleware...")
    try:
        from django.conf import settings
        middleware = getattr(settings, 'MIDDLEWARE', [])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ middleware
        problematic = [
            'stories.middleware.AdminPerformanceMiddleware',
            'stories.middleware.DatabaseOptimizationMiddleware'
        ]
        
        for mw in problematic:
            if mw in middleware:
                print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π middleware: {mw}")
                issues_found.append(f"–ü—Ä–æ–±–ª–µ–º–Ω—ã–π middleware: {mw}")
            else:
                print(f"‚úÖ Middleware {mw} –æ—Ç–∫–ª—é—á–µ–Ω")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ middleware: {e}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ Stories –º–æ–¥–µ–ª–∏
    print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ Stories...")
    try:
        from stories.models import Story
        story_count = Story.objects.count()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {story_count} —Ä–∞—Å—Å–∫–∞–∑–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑
        try:
            story = Story.objects.get(id=187)
            print(f"‚úÖ –†–∞—Å—Å–∫–∞–∑ ID=187 –Ω–∞–π–¥–µ–Ω: '{story.title}'")
        except Story.DoesNotExist:
            print("‚ö†Ô∏è –†–∞—Å—Å–∫–∞–∑ ID=187 –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            issues_found.append("–†–∞—Å—Å–∫–∞–∑ ID=187 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Stories: {e}")
        issues_found.append("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –º–æ–¥–µ–ª—å—é Stories")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    if not issues_found:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –ï—Å–ª–∏ –∞–¥–º–∏–Ω–∫–∞ –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   1. –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+Shift+Delete)")
        print("   2. –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ")
        print("   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä Django")
    else:
        print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(issues_found)} –ø—Ä–æ–±–ª–µ–º:")
        for i, issue in enumerate(issues_found, 1):
            print(f"   {i}. {issue}")
        
        print("\nüîß –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
        if "–ü—Ä–æ–±–ª–µ–º–Ω—ã–π middleware" in str(issues_found):
            print("   ‚Ä¢ Middleware —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä")
        if "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" in issues_found:
            print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ settings.py")
        if "–ù–µ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" in issues_found:
            print("   ‚Ä¢ –í—ã–ø–æ–ª–Ω–∏—Ç–µ: python manage.py createsuperuser")
        if "–†–∞—Å—Å–∫–∞–∑ ID=187 –Ω–µ –Ω–∞–π–¥–µ–Ω" in issues_found:
            print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—Å–∫–∞–∑–∞ –≤ –∞–¥–º–∏–Ω–∫–µ")

if __name__ == "__main__":
    check_admin_issues()
