#!/usr/bin/env python
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–Ω–∏–≥ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
BASE_DIR = Path(__file__).parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
    
    from books.models import Book
    from shop.models import Product, Purchase
    from django.contrib.auth.models import User
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –§–ê–ô–õ–û–í –ö–ù–ò–ì –î–õ–Ø –°–ö–ê–ß–ò–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    # –ò—â–µ–º –∫–Ω–∏–≥—É "–ö–Ω–∏–≥–∞ –≤–µ—Å–Ω–∞"
    book_vesna = Book.objects.filter(title__icontains='–≤–µ—Å–Ω–∞').first()
    if book_vesna:
        print(f"\nüìñ –ö–ù–ò–ì–ê: {book_vesna.title}")
        print(f"   ID: {book_vesna.id}")
        print(f"   –§–∞–π–ª: {book_vesna.file}")
        print(f"   –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {'–î–∞' if book_vesna.file else '–ù–µ—Ç'}")
        if book_vesna.file:
            print(f"   –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {book_vesna.file.url}")
            print(f"   –§–∏–∑–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª: {book_vesna.file.path}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            try:
                file_exists = os.path.exists(book_vesna.file.path)
                print(f"   –§–∏–∑–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {'–î–∞' if file_exists else '–ù–µ—Ç'}")
                if file_exists:
                    file_size = os.path.getsize(book_vesna.file.path)
                    print(f"   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
            except Exception as e:
                print(f"   –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä –≤ –º–∞–≥–∞–∑–∏–Ω–µ
        product = Product.objects.filter(product_type='book', book_id=book_vesna.id).first()
        if product:
            print(f"\nüõçÔ∏è –¢–û–í–ê–† –í –ú–ê–ì–ê–ó–ò–ù–ï:")
            print(f"   ID: {product.id}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {product.title}")
            print(f"   content_object: {product.content_object}")
            
            content_obj = product.content_object
            if content_obj:
                print(f"   content_object.file: {content_obj.file if hasattr(content_obj, 'file') else '–ù–ï–¢ –ê–¢–†–ò–ë–£–¢–ê'}")
                if hasattr(content_obj, 'file') and content_obj.file:
                    print(f"   content_object.file.url: {content_obj.file.url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∫—É–ø–∫–∏ —ç—Ç–æ–π –∫–Ω–∏–≥–∏
        purchases = Purchase.objects.filter(product__book_id=book_vesna.id)
        print(f"\nüí∞ –ü–û–ö–£–ü–ö–ò –≠–¢–û–ô –ö–ù–ò–ì–ò:")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: {purchases.count()}")
        
        for purchase in purchases:
            print(f"\n   üì¶ –ü–æ–∫—É–ø–∫–∞ #{purchase.id}:")
            print(f"      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {purchase.user.username}")
            print(f"      –î–∞—Ç–∞: {purchase.purchased_at}")
            print(f"      –ó–∞–∫–∞–∑ —Å—Ç–∞—Ç—É—Å: {purchase.order.status}")
            print(f"      –¢–æ–≤–∞—Ä: {purchase.product.title}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            content_obj = purchase.product.content_object
            if content_obj and hasattr(content_obj, 'file') and content_obj.file:
                print(f"      ‚úÖ –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {content_obj.file.url}")
            else:
                print(f"      ‚ùå –§–∞–π–ª –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
                print(f"         content_obj: {content_obj}")
                if content_obj:
                    print(f"         hasattr file: {hasattr(content_obj, 'file')}")
                    if hasattr(content_obj, 'file'):
                        print(f"         file value: {content_obj.file}")
    
    else:
        print("‚ùå –ö–Ω–∏–≥–∞ '–≤–µ—Å–Ω–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    
    print(f"\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    total_books = Book.objects.count()
    books_with_files = Book.objects.filter(file__isnull=False).count()
    print(f"   –í—Å–µ–≥–æ –∫–Ω–∏–≥: {total_books}")
    print(f"   –ö–Ω–∏–≥ —Å —Ñ–∞–π–ª–∞–º–∏: {books_with_files}")
    
    total_purchases = Purchase.objects.count()
    paid_purchases = Purchase.objects.filter(order__status__in=['paid', 'completed']).count()
    print(f"   –í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: {total_purchases}")
    print(f"   –û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫: {paid_purchases}")
    
    print(f"\nüìã –í–°–ï –ö–ù–ò–ì–ò –° –§–ê–ô–õ–ê–ú–ò:")
    for book in Book.objects.filter(file__isnull=False)[:5]:
        print(f"   üìñ {book.title} - —Ñ–∞–π–ª: {book.file}")
    
    print(f"\nüõí –í–°–ï –ü–û–ö–£–ü–ö–ò:")
    for purchase in Purchase.objects.all()[:5]:
        print(f"   üí∞ {purchase.user.username} - {purchase.product.title} - —Å—Ç–∞—Ç—É—Å: {purchase.order.status}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
