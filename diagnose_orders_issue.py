# diagnose_orders_issue.py
# –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–∫–∞–∑–∞–º–∏ –∏ –ø–æ–∫—É–ø–∫–∞–º–∏

import os
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth.models import User
from shop.models import Order, Purchase, Product
from books.models import Book

def diagnose_current_state():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –ó–ê–ö–ê–ó–û–í –ò –ü–û–ö–£–ü–û–ö")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users_count = User.objects.count()
    print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: {users_count}")
    
    if users_count > 0:
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–µ—Ä–æ—è—Ç–Ω–æ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)
        user = User.objects.first()
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        orders = Order.objects.filter(user=user)
        print(f"üìã –ó–∞–∫–∞–∑–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {orders.count()}")
        
        if orders.exists():
            for order in orders:
                print(f"  üßæ –ó–∞–∫–∞–∑ #{order.short_id}")
                print(f"      –°—Ç–∞—Ç—É—Å: {order.get_status_display()}")
                print(f"      –î–∞—Ç–∞: {order.created_at}")
                print(f"      –¢–æ–≤–∞—Ä–æ–≤: {order.items.count()}")
        else:
            print("  ‚ùå –ó–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∫—É–ø–∫–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        purchases = Purchase.objects.filter(user=user)
        print(f"üì¶ –ü–æ–∫—É–ø–æ–∫ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {purchases.count()}")
        
        if purchases.exists():
            for purchase in purchases:
                print(f"  üìö –ü–æ–∫—É–ø–∫–∞: {purchase.product.title}")
                print(f"      –ó–∞–∫–∞–∑: #{purchase.order.short_id}")
                print(f"      –î–∞—Ç–∞: {purchase.purchased_at}")
        else:
            print("  ‚ùå –ü–æ–∫—É–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"  –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {Order.objects.count()}")
    print(f"  –û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {Order.objects.filter(status__in=['paid', 'completed']).count()}")
    print(f"  –í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: {Purchase.objects.count()}")
    print(f"  –¢–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: {Product.objects.filter(is_active=True).count()}")
    print(f"  –ö–Ω–∏–≥ –≤ —Å–∏—Å—Ç–µ–º–µ: {Book.objects.count()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É –∑–∞–∫–∞–∑–∞–º–∏ –∏ –ø–æ–∫—É–ø–∫–∞–º–∏
    print(f"\nüîó –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ï–ô:")
    
    paid_orders = Order.objects.filter(status__in=['paid', 'completed'])
    print(f"  –û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {paid_orders.count()}")
    
    for order in paid_orders[:5]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 5
        purchases_for_order = Purchase.objects.filter(order=order)
        print(f"    –ó–∞–∫–∞–∑ #{order.short_id} -> –ø–æ–∫—É–ø–æ–∫: {purchases_for_order.count()}")
        
        if purchases_for_order.count() == 0:
            print(f"      ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω, –Ω–æ –ø–æ–∫—É–ø–∫–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã!")
            
            # –ü—Ä–æ–±—É–µ–º –∏—Å–ø—Ä–∞–≤–∏—Ç—å
            print(f"      üîß –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
            from shop.views import complete_order
            try:
                complete_order(order)
                print(f"      ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–æ–∑–¥–∞–Ω–æ –ø–æ–∫—É–ø–æ–∫: {Purchase.objects.filter(order=order).count()}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")

if __name__ == '__main__':
    diagnose_current_state()
