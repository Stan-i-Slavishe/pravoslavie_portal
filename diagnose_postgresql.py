#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
"""

import psycopg2
import sys
import os

def test_postgresql_connection():
    """–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL"""
    
    connection_params = {
        'host': 'localhost',
        'port': '5432', 
        'database': 'pravoslavie_local_db',
        'user': 'pravoslavie_user',
        'password': 'local_strong_password_2024'
    }
    
    print("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL")
    print("="*50)
    print(f"Host: {connection_params['host']}")
    print(f"Port: {connection_params['port']}")
    print(f"Database: {connection_params['database']}")
    print(f"User: {connection_params['user']}")
    print()
    
    # –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É PostgreSQL
    print("–¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É PostgreSQL...")
    try:
        conn = psycopg2.connect(
            host=connection_params['host'],
            port=connection_params['port'],
            user='postgres',  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –ø–æ–¥ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            password='',  # –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ –ø–∞—Ä–æ–ª—è
            database='postgres'  # –ö —Å–∏—Å—Ç–µ–º–Ω–æ–π –ë–î
        )
        conn.close()
        print("‚úÖ PostgreSQL —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (–±–µ–∑ –ø–∞—Ä–æ–ª—è)")
    except Exception as e1:
        print(f"‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ –ø–∞—Ä–æ–ª—è –Ω–µ —É–¥–∞–ª–æ—Å—å: {e1}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Å –ø–∞—Ä–æ–ª–µ–º
        try:
            password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres: ")
            conn = psycopg2.connect(
                host=connection_params['host'],
                port=connection_params['port'],
                user='postgres',
                password=password,
                database='postgres'
            )
            conn.close()
            print("‚úÖ PostgreSQL —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (—Å –ø–∞—Ä–æ–ª–µ–º)")
        except Exception as e2:
            print(f"‚ùå PostgreSQL —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e2}")
            print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("- PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print("- –ù–µ–≤–µ—Ä–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è") 
            print("- –ü—Ä–æ–±–ª–µ–º—ã —Å firewall")
            return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ë–î
    print("\n–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ë–î pravoslavie_local_db...")
    try:
        conn = psycopg2.connect(
            host=connection_params['host'],
            port=connection_params['port'],
            user='postgres',
            database='postgres'
        )
        cursor = conn.cursor()
        cursor.execute("SELECT 1 FROM pg_database WHERE datname = 'pravoslavie_local_db';")
        result = cursor.fetchone()
        
        if result:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö pravoslavie_local_db —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö pravoslavie_local_db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ë–î
            cursor.execute("SELECT datname FROM pg_database WHERE datistemplate = false;")
            databases = cursor.fetchall()
            print("–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
            for db in databases:
                print(f"  - {db[0]}")
        
        cursor.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è pravoslavie_user...")
    try:
        conn = psycopg2.connect(
            host=connection_params['host'],
            port=connection_params['port'],
            user='postgres',
            database='postgres'
        )
        cursor = conn.cursor()
        cursor.execute("SELECT 1 FROM pg_user WHERE usename = 'pravoslavie_user';")
        result = cursor.fetchone()
        
        if result:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å pravoslavie_user —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å pravoslavie_user –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            cursor.execute("SELECT usename FROM pg_user;")
            users = cursor.fetchall()
            print("–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            for user in users:
                print(f"  - {user[0]}")
        
        cursor.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return False
    
    # –¢–µ—Å—Ç 4: –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ü–µ–ª–µ–≤–æ–π –ë–î
    print("\n–¢–µ—Å—Ç 4: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ pravoslavie_local_db –ø–æ–¥ pravoslavie_user...")
    try:
        conn = psycopg2.connect(**connection_params)
        cursor = conn.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()[0]
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ! PostgreSQL: {version[:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("""
            SELECT count(*) FROM information_schema.tables 
            WHERE table_schema = 'public';
        """)
        table_count = cursor.fetchone()[0]
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü –≤ –ë–î: {table_count}")
        
        cursor.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ü–µ–ª–µ–≤–æ–π –ë–î –Ω–µ —É–¥–∞–ª–æ—Å—å: {e}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è pravoslavie_user")
        print("- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ë–î") 
        print("- –ë–î –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return False

if __name__ == "__main__":
    success = test_postgresql_connection()
    if success:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å Django")
    else:
        print("\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° POSTGRESQL")
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
