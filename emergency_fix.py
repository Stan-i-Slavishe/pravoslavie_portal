import os

print("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ PWA views")
print("=" * 40)

views_path = r'E:\pravoslavie_portal\pwa\views.py'
urls_path = r'E:\pravoslavie_portal\pwa\urls.py'

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ views.py
missing_functions = '''
@csrf_exempt
@require_http_methods(["POST"])
def push_subscribe(request):
    """–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    try:
        return JsonResponse({
            'success': True,
            'message': '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞'
        })
    except Exception as e:
        return JsonResponse({'error': 'Server error'}, status=500)

@login_required
@csrf_exempt
@require_http_methods(["POST"])
def sync_playlists(request):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞"""
    try:
        return JsonResponse({
            'success': True,
            'message': '–ü–ª–µ–π–ª–∏—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω'
        })
    except Exception as e:
        return JsonResponse({'error': 'Server error'}, status=500)

@login_required
@csrf_exempt
@require_http_methods(["POST"])
def sync_favorites(request):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞"""
    try:
        return JsonResponse({
            'success': True,
            'message': '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ'
        })
    except Exception as e:
        return JsonResponse({'error': 'Server error'}, status=500)

@csrf_exempt
@require_http_methods(["POST"])
def sync_cart(request):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞"""
    try:
        return JsonResponse({
            'success': True,
            'message': '–ö–æ—Ä–∑–∏–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞'
        })
    except Exception as e:
        return JsonResponse({'error': 'Server error'}, status=500)

@require_http_methods(["GET"])
def get_csrf_token(request):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç CSRF —Ç–æ–∫–µ–Ω –¥–ª—è Service Worker"""
    from django.middleware.csrf import get_token
    return JsonResponse({
        'csrfToken': get_token(request)
    })

@require_http_methods(["HEAD", "GET"])
def ping(request):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è Service Worker"""
    return HttpResponse('pong', content_type='text/plain')
'''

try:
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π views.py
    with open(views_path, 'r', encoding='utf-8') as f:
        views_content = f.read()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    views_content += missing_functions
    
    with open(views_path, 'w', encoding='utf-8') as f:
        f.write(views_content)
    
    print("‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã PWA —Ñ—É–Ω–∫—Ü–∏–∏ –≤ views.py")
    
    # –¢–µ–ø–µ—Ä—å –æ—á–∏—â–∞–µ–º URLs –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    with open(urls_path, 'r', encoding='utf-8') as f:
        urls_content = f.read()
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–º–∏ URL
    lines = urls_content.split('\n')
    clean_lines = []
    removed_count = 0
    
    for line in lines:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ URL
        if any(keyword in line for keyword in [
            'orthodox-calendar', 'daily-calendar', 'calendar-month',
            'daily-orthodox', 'orthodox_calendar', 'orthodoxy_calendar'
        ]):
            removed_count += 1
            print(f"   üóëÔ∏è –£–¥–∞–ª—è–µ–º: {line.strip()}")
            continue
        clean_lines.append(line)
    
    with open(urls_path, 'w', encoding='utf-8') as f:
        f.write('\n'.join(clean_lines))
    
    print(f"‚úÖ –û—á–∏—â–µ–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö URL: {removed_count}")
    
    print("\nüéâ –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("‚úÖ –ü—Ä–æ–µ–∫—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
