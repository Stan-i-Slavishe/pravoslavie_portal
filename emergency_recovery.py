#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï Django –ø—Ä–æ–µ–∫—Ç–∞
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∏ HTTPS
"""
import os
import sys
import subprocess
import time
from pathlib import Path

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫—É –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
os.environ['PYTHONIOENCODING'] = 'utf-8'
os.environ['LANG'] = 'ru_RU.UTF-8'

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
BASE_DIR = Path(__file__).resolve().parent
sys.path.insert(0, str(BASE_DIR))

def kill_all_python():
    """–£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python"""
    print("üö® –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python...")
    try:
        subprocess.run(['taskkill', '/f', '/im', 'python.exe'], 
                      capture_output=True, check=False)
        subprocess.run(['taskkill', '/f', '/im', 'pythonw.exe'], 
                      capture_output=True, check=False)
        time.sleep(2)
        print("  ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–∫—Ä—ã—Ç—ã")
    except Exception as e:
        print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")

def fix_encoding():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π"""
    print("üî§ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_vars = {
        'PYTHONIOENCODING': 'utf-8',
        'LANG': 'ru_RU.UTF-8',
        'LC_ALL': 'ru_RU.UTF-8',
        'PYTHONLEGACYWINDOWSSTDIO': '1'
    }
    
    for key, value in env_vars.items():
        os.environ[key] = value
    
    print("  ‚úÖ –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ UTF-8")

def create_clean_env():
    """–°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—ã–π .env —Ñ–∞–π–ª"""
    print("‚öôÔ∏è –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    env_content = """# –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
DEBUG=True
SECRET_KEY=django-insecure-emergency-recovery-key-2025
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DB_ENGINE=django.db.backends.sqlite3

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
CELERY_TASK_ALWAYS_EAGER=True
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# –ö–æ–¥–∏—Ä–æ–≤–∫–∞
PYTHONIOENCODING=utf-8
LANG=ru_RU.UTF-8
"""
    
    env_file = BASE_DIR / '.env'
    with open(env_file, 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("  ‚úÖ –§–∞–π–ª .env –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def clean_problematic_files():
    """–£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã"""
    print("üóëÔ∏è –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã...")
    
    files_to_remove = [
        BASE_DIR / 'staticfiles',
        BASE_DIR / 'logs' / 'django.log',
        BASE_DIR / 'static' / 'js' / 'error-filter.js',
    ]
    
    for file_path in files_to_remove:
        try:
            if file_path.exists():
                if file_path.is_dir():
                    import shutil
                    shutil.rmtree(file_path)
                    print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞ {file_path.name}")
                else:
                    file_path.unlink()
                    print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª {file_path.name}")
        except Exception as e:
            print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file_path}: {e}")

def fix_settings():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django...")
    
    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_fix = BASE_DIR / 'config' / 'emergency_settings.py'
        
        settings_content = '''# -*- coding: utf-8 -*-
"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
"""
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-emergency-key-12345'
DEBUG = True
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0', 'testserver']

# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'accounts',
    'stories',
    'books',
]

# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
]

ROOT_URLCONF = 'config.urls'

# –®–∞–±–ª–æ–Ω—ã
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

# –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Asia/Tashkent'
USE_I18N = True
USE_TZ = True

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'WARNING',
        },
    },
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
'''
        
        with open(settings_fix, 'w', encoding='utf-8') as f:
            f.write(settings_content)
        
        print("  ‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
    except Exception as e:
        print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

def run_django_commands():
    """–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã Django"""
    print("üì¶ –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã Django...")
    
    commands = [
        ['python', 'manage.py', 'collectstatic', '--noinput', '--clear'],
        ['python', 'manage.py', 'migrate', '--run-syncdb'],
    ]
    
    for cmd in commands:
        try:
            result = subprocess.run(cmd, capture_output=True, text=True, 
                                  encoding='utf-8', cwd=BASE_DIR)
            if result.returncode == 0:
                print(f"  ‚úÖ {' '.join(cmd)} - —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"  ‚ö†Ô∏è {' '.join(cmd)} - –æ—à–∏–±–∫–∞: {result.stderr}")
        except Exception as e:
            print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è {cmd}: {e}")

def start_server():
    """–ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å–µ—Ä–≤–µ—Ä...")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        env = os.environ.copy()
        env.update({
            'PYTHONIOENCODING': 'utf-8',
            'LANG': 'ru_RU.UTF-8',
            'DJANGO_SETTINGS_MODULE': 'config.emergency_settings'
        })
        
        cmd = ['python', 'manage.py', 'runserver', '127.0.0.1:8000']
        
        print("  üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ http://127.0.0.1:8000")
        print("  ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–û–õ–¨–ö–û HTTP (–Ω–µ HTTPS)!")
        print("  üîÑ –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        subprocess.run(cmd, env=env, cwd=BASE_DIR)
        
    except KeyboardInterrupt:
        print("\n  ‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï Django")
    print("=" * 50)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ —à–∞–≥–∞–º
    kill_all_python()
    fix_encoding()
    create_clean_env()
    clean_problematic_files()
    fix_settings()
    run_django_commands()
    
    print("=" * 50)
    print("‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print()
    print("üîß –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
    print("  ‚Ä¢ –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ UTF-8")
    print("  ‚Ä¢ –°–æ–∑–¥–∞–Ω—ã —á–∏—Å—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("  ‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("  ‚Ä¢ –ü–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã")
    print()
    print("‚ö†Ô∏è –í–ê–ñ–ù–û:")
    print("  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–û–õ–¨–ö–û HTTP: http://127.0.0.1:8000")
    print("  ‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS!")
    print("  ‚Ä¢ –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+Shift+R)")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    start_server()

if __name__ == "__main__":
    main()
