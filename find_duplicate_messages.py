#!/usr/bin/env python
"""
–ü–æ–∏—Å–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ
"""
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

def search_login_messages():
    """–ò—â–µ—Ç –º–µ—Å—Ç–∞, –≥–¥–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ"""
    
    print("üîç –ü–æ–∏—Å–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ")
    print("=" * 60)
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
    search_dirs = [
        "accounts",
        "core", 
        "config",
        "templates"
    ]
    
    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
    search_patterns = [
        "messages.success",
        "messages.add_message", 
        "–í—ã –≤–æ—à–ª–∏ –∫–∞–∫",
        "—É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏",
        "–≤–æ—à–ª–∏ –∫–∞–∫",
        "login success",
        "logged in"
    ]
    
    found_files = []
    
    for directory in search_dirs:
        if not os.path.exists(directory):
            continue
            
        print(f"\nüìÅ –ü–æ–∏—Å–∫ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {directory}")
        
        for root, dirs, files in os.walk(directory):
            for file in files:
                if file.endswith(('.py', '.html')):
                    file_path = os.path.join(root, file)
                    
                    try:
                        with open(file_path, 'r', encoding='utf-8') as f:
                            content = f.read()
                            
                        for pattern in search_patterns:
                            if pattern.lower() in content.lower():
                                print(f"   üéØ –ù–∞–π–¥–µ–Ω–æ –≤ {file_path}")
                                print(f"      –ü–∞—Ç—Ç–µ—Ä–Ω: {pattern}")
                                
                                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º
                                lines = content.split('\n')
                                for i, line in enumerate(lines, 1):
                                    if pattern.lower() in line.lower():
                                        print(f"      –°—Ç—Ä–æ–∫–∞ {i}: {line.strip()}")
                                
                                if file_path not in found_files:
                                    found_files.append(file_path)
                                break
                                
                    except Exception as e:
                        continue
    
    print(f"\nüìã –ò—Ç–æ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ –≤—Ö–æ–¥–µ: {len(found_files)}")
    
    if len(found_files) > 1:
        print("‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("   1. –ù–µ—Å–∫–æ–ª—å–∫–æ views –¥–æ–±–∞–≤–ª—è—é—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("   2. Allauth + –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("   3. Middleware –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    return found_files

def check_allauth_messages_settings():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π allauth"""
    
    print(f"\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π allauth")
    print("=" * 40)
    
    from django.conf import settings
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    message_settings = [
        'ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION',
        'ACCOUNT_EMAIL_VERIFICATION',
        'SOCIALACCOUNT_AUTO_SIGNUP',
        'SOCIALACCOUNT_LOGIN_ON_GET',
    ]
    
    for setting_name in message_settings:
        value = getattr(settings, setting_name, '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')
        print(f"   {setting_name}: {value}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º MESSAGE_TAGS
    if hasattr(settings, 'MESSAGE_TAGS'):
        print(f"\nüì® MESSAGE_TAGS: {settings.MESSAGE_TAGS}")
    
    print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
    print(f"   –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è allauth –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏")

if __name__ == "__main__":
    try:
        files = search_login_messages()
        check_allauth_messages_settings()
        
        print(f"\nüéØ –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print(f"   1. –ù–∞–π–¥–∏—Ç–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö –≤—ã—à–µ")
        print(f"   2. –û—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –º–µ—Å—Ç–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è")
        print(f"   3. –ò–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è allauth")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        import traceback
        traceback.print_exc()
