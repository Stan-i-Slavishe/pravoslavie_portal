# –ü–æ–∏—Å–∫ –∏ –æ—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py shell

from pwa.models import OrthodoxEvent
from collections import defaultdict

print("üîç –ü–æ–∏—Å–∫ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö...")

# –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ –¥–∞—Ç–µ
events_by_date = defaultdict(list)
for event in OrthodoxEvent.objects.all():
    if not event.is_movable:  # –¢–æ–ª—å–∫–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã
        key = f"{event.month:02d}-{event.day:02d}"
        events_by_date[key].append(event)

# –ò—â–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
duplicates_found = False
for date_key, events in events_by_date.items():
    if len(events) > 1:
        duplicates_found = True
        print(f"\nüìÖ {date_key} - –Ω–∞–π–¥–µ–Ω–æ {len(events)} —Å–æ–±—ã—Ç–∏–π:")
        for i, event in enumerate(events, 1):
            print(f"   {i}. ID:{event.id} - '{event.title}' ({event.event_type})")
            print(f"      –û–ø–∏—Å–∞–Ω–∏–µ: {event.description}")

if not duplicates_found:
    print("‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
else:
    print("\nüßπ –î–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   1. –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Å—Ç–∞–≤–∏—Ç—å")
    print("   2. –£–¥–∞–ª–∏—Ç–µ –ª–∏—à–Ω–∏–µ —á–µ—Ä–µ–∑ Django Admin –∏–ª–∏ –∫–æ–¥")

print("\nüìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π –≤ –±–∞–∑–µ:", OrthodoxEvent.objects.count())
print("üìä –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π:", OrthodoxEvent.objects.filter(is_movable=False).count())
print("üìä –ü–µ—Ä–µ—Ö–æ–¥—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π:", OrthodoxEvent.objects.filter(is_movable=True).count())
