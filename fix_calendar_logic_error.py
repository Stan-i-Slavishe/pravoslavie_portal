#!/usr/bin/env python
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: —Å–ø–ª–æ—à–Ω—ã–µ –Ω–µ–¥–µ–ª–∏ –æ—Ç–º–µ–Ω—è—é—Ç –ø–æ—Å—Ç
"""

import os
import sys
import django
from datetime import date

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

def fix_calendar_logic():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ"""
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è...")
    print("üìã –ü—Ä–æ–±–ª–µ–º–∞: –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è + –ü–æ—Å—Ç = –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ!")
    print("‚úÖ –†–µ—à–µ–Ω–∏–µ: –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è –û–¢–ú–ï–ù–Ø–ï–¢ –ø–æ—Å—Ç (–ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é)")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª views.py
    views_file_path = 'pwa/views.py'
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(views_file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ù–∞—Ö–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é get_day_type_for_calendar –∏ –∑–∞–º–µ–Ω—è–µ–º –µ—ë
    new_function = '''def get_day_type_for_calendar(target_date, daily_info, events):
    """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –¥–Ω—è –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –¥–Ω—è
    is_holiday = False
    is_fast = False
    is_continuous_week = False
    
    # 1. –ü–†–ò–û–†–ò–¢–ï–¢: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–ª–æ—à–Ω—ã–µ –Ω–µ–¥–µ–ª–∏ (–æ–Ω–∏ –û–¢–ú–ï–ù–Ø–Æ–¢ –ø–æ—Å—Ç!)
    continuous_weeks_2025 = [
        # –°–≤—è—Ç–∫–∏: 8-17 —è–Ω–≤–∞—Ä—è
        ((1, 8), (1, 17)),
        # –ú—ã—Ç–∞—Ä—è –∏ —Ñ–∞—Ä–∏—Å–µ—è: 10-16 —Ñ–µ–≤—Ä–∞–ª—è
        ((2, 10), (2, 16)),
        # –ú–∞—Å–ª–µ–Ω–∏—Ü–∞: 24 —Ñ–µ–≤—Ä–∞–ª—è - 2 –º–∞—Ä—Ç–∞
        ((2, 24), (3, 2)),
        # –ü–∞—Å—Ö–∞–ª—å–Ω–∞—è: 21-27 –∞–ø—Ä–µ–ª—è
        ((4, 21), (4, 27)),
        # –¢—Ä–æ–∏—Ü–∫–∞—è: 9-15 –∏—é–Ω—è
        ((6, 9), (6, 15)),
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ –¥–∞—Ç–∞ –≤ –æ–¥–Ω—É –∏–∑ —Å–ø–ª–æ—à–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
    for start, end in continuous_weeks_2025:
        start_month, start_day = start
        end_month, end_day = end
        
        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞
        if start_month == end_month:
            if (target_date.month == start_month and 
                start_day <= target_date.day <= end_day):
                is_continuous_week = True
                break
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ø–µ—Ä–∏–æ–¥–æ–≤ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü—ã (–º–∞—Å–ª–µ–Ω–∏—Ü–∞)
        else:
            if ((target_date.month == start_month and target_date.day >= start_day) or
                (target_date.month == end_month and target_date.day <= end_day)):
                is_continuous_week = True
                break
    
    # –ï–°–õ–ò –°–ü–õ–û–®–ù–ê–Ø –ù–ï–î–ï–õ–Ø - –ü–û–°–¢ –û–¢–ú–ï–ù–Ø–ï–¢–°–Ø!
    if is_continuous_week:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
        for event in events:
            if event.event_type in ['great_feast', 'major_feast']:
                is_holiday = True
                break
        
        # –í —Å–ø–ª–æ—à–Ω—É—é –Ω–µ–¥–µ–ª—é –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∞–∑–¥–Ω–∏–∫ + —Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è
        if is_holiday:
            return 'holiday-continuous'  # –ü—Ä–∞–∑–¥–Ω–∏–∫ + —Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è
        else:
            return 'continuous-week'  # –û–±—ã—á–Ω–∞—è —Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–≥–∏–µ –ø–æ—Å—Ç–Ω—ã–µ –¥–Ω–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï —Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è)
    strict_fast_days = [
        (8, 29),   # 29 –∞–≤–≥—É—Å—Ç–∞ - –£—Å–µ–∫–Ω–æ–≤–µ–Ω–∏–µ –≥–ª–∞–≤—ã –ò–æ–∞–Ω–Ω–∞ –ü—Ä–µ–¥—Ç–µ—á–∏
        (9, 11),   # 11 —Å–µ–Ω—Ç—è–±—Ä—è - –£—Å–µ–∫–Ω–æ–≤–µ–Ω–∏–µ –≥–ª–∞–≤—ã –ò–æ–∞–Ω–Ω–∞ –ü—Ä–µ–¥—Ç–µ—á–∏ (–Ω–æ–≤—ã–π —Å—Ç–∏–ª—å)
        (9, 27),   # 27 —Å–µ–Ω—Ç—è–±—Ä—è - –ö—Ä–µ—Å—Ç–æ–≤–æ–∑–¥–≤–∏–∂–µ–Ω–∏–µ
    ]
    
    if (target_date.month, target_date.day) in strict_fast_days:
        is_fast = True
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –ø—Ä–∞–∑–¥–Ω–∏–∫ –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å
        for event in events:
            if event.event_type in ['great_feast', 'major_feast']:
                is_holiday = True
                break
        
        # –î–ª—è —Å—Ç—Ä–æ–≥–∏—Ö –ø–æ—Å—Ç–Ω—ã—Ö –¥–Ω–µ–π –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å—Ç
        if is_holiday:
            return 'holiday-fast'  # 80% –ø—Ä–∞–∑–¥–Ω–∏–∫ / 20% –ø–æ—Å—Ç
        else:
            return 'fast-day'  # –û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–µ –ø–æ—Å—Ç—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï —Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è)
    if daily_info.fasting_type in ['strict_fast', 'dry_eating', 'complete_fast', 'light_fast', 'with_oil', 'wine_oil']:
        is_fast = True
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
    for event in events:
        if event.event_type in ['great_feast', 'major_feast']:
            is_holiday = True
            break
    
    # 5. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ç–∏–ø –¥–Ω—è
    
    # –ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ (–±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤!)
    if is_holiday and is_fast:
        return 'holiday-fast'  # –ü—Ä–∞–∑–¥–Ω–∏–∫ + –ü–æ—Å—Ç
    
    # –û–¥–∏–Ω–æ—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    elif is_holiday:
        return 'holiday'
    elif is_fast:
        return 'fast-day'
    
    # –û–±—ã—á–Ω—ã–π –¥–µ–Ω—å
    return 'feast' '''
    
    # –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    import re
    pattern = r'def get_day_type_for_calendar\(.*?\n    return \'feast\''
    content = re.sub(pattern, new_function, content, flags=re.DOTALL)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open(views_file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –õ–æ–≥–∏–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    
    # –¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–π CSS –∫–ª–∞—Å—Å
    print("üé® –£–±–∏—Ä–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–π CSS –∫–ª–∞—Å—Å 'fast-continuous'...")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω
    template_path = 'templates/pwa/daily_orthodox_calendar.html'
    
    with open(template_path, 'r', encoding='utf-8') as f:
        template_content = f.read()
    
    # –£–±–∏—Ä–∞–µ–º CSS –¥–ª—è fast-continuous (–ª–æ–≥–∏—á–µ—Å–∫–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è)
    css_to_remove = '''/* –ü–æ—Å—Ç + –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è (80% —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π / 20% –∑–µ–ª–µ–Ω—ã–π) */
.calendar-day.fast-continuous {
    background: linear-gradient(to bottom, 
        #6f42c1 0%, 
        #6f42c1 80%, 
        #51cf66 80%, 
        #51cf66 100%);
    color: white;
    font-weight: 600;
}'''
    
    template_content = template_content.replace(css_to_remove, '/* –ö–æ–º–±–∏–Ω–∞—Ü–∏—è –ø–æ—Å—Ç + —Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è –ª–æ–≥–∏—á–µ—Å–∫–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞ */')
    
    with open(template_path, 'w', encoding='utf-8') as f:
        f.write(template_content)
    
    print("‚úÖ –ù–µ–Ω—É–∂–Ω—ã–π CSS —É–¥–∞–ª–µ–Ω!")
    
    return True

def test_fixed_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É"""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É...")
    
    from pwa.views import get_day_type_for_calendar
    from pwa.models import DailyOrthodoxInfo, OrthodoxEvent
    
    test_dates = [
        # –°–ø–ª–æ—à–Ω—ã–µ –Ω–µ–¥–µ–ª–∏ - –ù–ï –î–û–õ–ñ–ù–û –±—ã—Ç—å –ø–æ—Å—Ç–æ–≤
        (date(2025, 1, 10), "–°–≤—è—Ç–∫–∏ (—Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è)", "continuous-week"),
        (date(2025, 2, 15), "–ú—ã—Ç–∞—Ä—è –∏ —Ñ–∞—Ä–∏—Å–µ—è (—Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è)", "continuous-week"), 
        (date(2025, 6, 12), "–¢—Ä–æ–∏—Ü–∫–∞—è —Å–µ–¥–º–∏—Ü–∞ (—Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è)", "continuous-week"),
        
        # –ü—Ä–∞–∑–¥–Ω–∏–∫ + —Å–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è
        (date(2025, 1, 7), "–†–æ–∂–¥–µ—Å—Ç–≤–æ + –°–≤—è—Ç–∫–∏", "holiday-continuous"),
        
        # –°—Ç—Ä–æ–≥–∏–µ –ø–æ—Å—Ç–Ω—ã–µ –¥–Ω–∏
        (date(2025, 8, 29), "–û—Ä–µ—Ö–æ–≤—ã–π –°–ø–∞—Å + –£—Å–µ–∫–Ω–æ–≤–µ–Ω–∏–µ", "holiday-fast"),
        
        # –û–±—ã—á–Ω—ã–µ –¥–Ω–∏
        (date(2025, 5, 15), "–û–±—ã—á–Ω—ã–π –¥–µ–Ω—å", "feast"),
    ]
    
    for test_date, description, expected in test_dates:
        try:
            daily_info = DailyOrthodoxInfo.get_info_for_date(test_date)
            events = OrthodoxEvent.get_events_for_date(test_date)
            day_type = get_day_type_for_calendar(test_date, daily_info, events)
            
            if day_type == expected:
                status = "‚úÖ"
            else:
                status = "‚ùå"
            
            print(f"{status} {test_date.strftime('%d.%m')} - {description}")
            print(f"    –û–∂–∏–¥–∞–ª–∏: {expected}, –ü–æ–ª—É—á–∏–ª–∏: {day_type}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {test_date}: {e}")
    
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:")
    print("  ‚úÖ –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è –û–¢–ú–ï–ù–Ø–ï–¢ –ø–æ—Å—Ç")
    print("  ‚úÖ –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è + –ø—Ä–∞–∑–¥–Ω–∏–∫ = holiday-continuous")
    print("  ‚úÖ –°—Ç—Ä–æ–≥–∏–π –ø–æ—Å—Ç + –ø—Ä–∞–∑–¥–Ω–∏–∫ = holiday-fast")
    print("  ‚ùå –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è + –ø–æ—Å—Ç = –õ–û–ì–ò–ß–ï–°–ö–ò –ù–ï–í–û–ó–ú–û–ñ–ù–û!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ì–ò–ß–ï–°–ö–û–ô –û–®–ò–ë–ö–ò –í –ö–ê–õ–ï–ù–î–ê–†–ï")
    print("=" * 50)
    print("üêõ –ü—Ä–æ–±–ª–µ–º–∞: –û—Ç–æ–±—Ä–∞–∂–∞–ª–æ—Å—å '–ü–æ—Å—Ç + –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è'")
    print("üí° –†–µ—à–µ–Ω–∏–µ: –°–ø–ª–æ—à–Ω–∞—è –Ω–µ–¥–µ–ª—è –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é –æ—Ç–º–µ–Ω—è–µ—Ç –ø–æ—Å—Ç!")
    print()
    
    try:
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É
        fix_calendar_logic()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º
        test_fixed_logic()
        
        print("\n" + "=" * 50)
        print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("‚úÖ –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–æ")
        print("‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print()
        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
        print("    python manage.py runserver")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
