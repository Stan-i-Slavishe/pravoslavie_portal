#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–∞—Å—Å–∫–∞–∑–æ–≤
"""

import os
import shutil
from datetime import datetime

def create_backup(file_path):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ñ–∞–π–ª–∞"""
    if os.path.exists(file_path):
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_path = f"{file_path}.backup_{timestamp}"
        shutil.copy2(file_path, backup_path)
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")
        return backup_path
    return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    # –ù–æ–≤—ã–π –∫–æ–¥ –¥–ª—è views.py —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ–¥—Å—á–µ—Ç–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    views_content = '''from django.views.generic import ListView, DetailView
from django.http import Http404, JsonResponse
from django.shortcuts import get_object_or_404, redirect, render
from django.contrib import messages
from django.views.decorators.http import require_POST, require_http_methods
from django.views.decorators.csrf import csrf_exempt
from django.contrib.auth.decorators import login_required
from django.db.models import Q, F, Count, Avg
from django.core.paginator import Paginator
from django.utils.decorators import method_decorator
from django.views.decorators.cache import cache_page
from django.utils.text import slugify
from django.utils.crypto import get_random_string
import json

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏
from .models import Story, StoryLike, StoryComment, CommentReaction
from core.models import Category, Tag
from django.template.loader import render_to_string
from django.utils.html import escape


# ==========================================
# –ë–ê–ó–û–í–´–ô MIXIN –î–õ–Ø –ü–û–î–°–ß–ï–¢–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í
# ==========================================

class StoryQuerysetMixin:
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ queryset"""
    
    def get_base_queryset(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—ã–π queryset —Å –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è–º–∏"""
        return Story.objects.filter(is_published=True).select_related('category').prefetch_related('tags').annotate(
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–Ω–µ –æ—Ç–≤–µ—Ç—ã)
            comments_count=Count('comments', filter=Q(comments__is_approved=True, comments__parent=None)),
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ª–∞–π–∫–∏
            likes_count=Count('likes', distinct=True)
        )


class StoryListView(StoryQuerysetMixin, ListView):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∏–¥–µ–æ-—Ä–∞—Å—Å–∫–∞–∑–æ–≤"""
    model = Story
    template_name = 'stories/story_list.html'
    context_object_name = 'stories'
    paginate_by = 12
    
    def get_queryset(self):
        queryset = self.get_base_queryset()
        
        # –ü–æ–∏—Å–∫
        search_query = self.request.GET.get('search')
        if search_query:
            queryset = queryset.filter(
                Q(title__icontains=search_query) |
                Q(description__icontains=search_query)
            )
        
        # –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        category_slug = self.request.GET.get('category')
        if category_slug:
            queryset = queryset.filter(category__slug=category_slug)
        
        # –§–∏–ª—å—Ç—Ä –ø–æ —Ç–µ–≥—É
        tag_slug = self.request.GET.get('tag')
        if tag_slug:
            queryset = queryset.filter(tags__slug=tag_slug)
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        sort_by = self.request.GET.get('sort', '-created_at')
        if sort_by == 'popular':
            queryset = queryset.order_by('-views_count', '-created_at')
        elif sort_by == 'title':
            queryset = queryset.order_by('title')
        else:
            queryset = queryset.order_by(sort_by)
        
        return queryset
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = '–í–∏–¥–µ–æ-—Ä–∞—Å—Å–∫–∞–∑—ã'
        context['categories'] = Category.objects.all()
        context['tags'] = Tag.objects.all()
        context['featured_stories'] = Story.objects.filter(
            is_published=True, 
            is_featured=True
        )[:3]
        
        # –ü–µ—Ä–µ–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context['search_query'] = self.request.GET.get('search', '')
        context['current_category'] = self.request.GET.get('category', '')
        context['current_tag'] = self.request.GET.get('tag', '')
        context['current_sort'] = self.request.GET.get('sort', '-created_at')
        
        return context


class StoryCategoryView(StoryQuerysetMixin, ListView):
    """–†–∞—Å—Å–∫–∞–∑—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - –ò–°–ü–†–ê–í–õ–ï–ù–û"""
    model = Story
    template_name = 'stories/story_list.html'
    context_object_name = 'stories'
    paginate_by = 12
    
    def get_queryset(self):
        category_slug = self.kwargs.get('category_slug')
        return self.get_base_queryset().filter(
            category__slug=category_slug
        ).order_by('-created_at')
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        category_slug = self.kwargs.get('category_slug')
        try:
            category = Category.objects.get(slug=category_slug)
            context['title'] = f'–†–∞—Å—Å–∫–∞–∑—ã: {category.name}'
            context['current_category'] = category
        except Category.DoesNotExist:
            context['title'] = '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
        
        context['categories'] = Category.objects.all()
        context['tags'] = Tag.objects.all()
        return context


class StoryTagView(StoryQuerysetMixin, ListView):
    """–†–∞—Å—Å–∫–∞–∑—ã –ø–æ —Ç–µ–≥—É - –ò–°–ü–†–ê–í–õ–ï–ù–û"""
    model = Story
    template_name = 'stories/story_list.html'
    context_object_name = 'stories'
    paginate_by = 12
    
    def get_queryset(self):
        tag_slug = self.kwargs.get('tag_slug')
        return self.get_base_queryset().filter(
            tags__slug=tag_slug
        ).order_by('-created_at')
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        tag_slug = self.kwargs.get('tag_slug')
        try:
            tag = Tag.objects.get(slug=tag_slug)
            context['title'] = f'–†–∞—Å—Å–∫–∞–∑—ã –ø–æ —Ç–µ–≥—É: {tag.name}'
            context['current_tag'] = tag
        except Tag.DoesNotExist:
            context['title'] = '–¢–µ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω'
        
        context['categories'] = Category.objects.all()
        context['tags'] = Tag.objects.all()
        return context


@method_decorator(cache_page(60 * 15), name='dispatch')
class PopularStoriesView(StoryQuerysetMixin, ListView):
    """–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã - –ò–°–ü–†–ê–í–õ–ï–ù–û"""
    model = Story
    template_name = 'stories/story_list.html'
    context_object_name = 'stories'
    paginate_by = 12
    
    def get_queryset(self):
        return self.get_base_queryset().order_by(
            '-views_count', '-created_at'
        )
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã'
        context['categories'] = Category.objects.all()
        context['tags'] = Tag.objects.all()
        return context


@method_decorator(cache_page(60 * 15), name='dispatch')
class FeaturedStoriesView(StoryQuerysetMixin, ListView):
    """–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã - –ò–°–ü–†–ê–í–õ–ï–ù–û"""
    model = Story
    template_name = 'stories/story_list.html'
    context_object_name = 'stories'
    paginate_by = 12
    
    def get_queryset(self):
        return self.get_base_queryset().filter(
            is_featured=True
        ).order_by('-created_at')
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã'
        context['categories'] = Category.objects.all()
        context['tags'] = Tag.objects.all()
        return context


class StorySearchView(StoryQuerysetMixin, ListView):
    """–ü–æ–∏—Å–∫ –ø–æ —Ä–∞—Å—Å–∫–∞–∑–∞–º —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ - –ò–°–ü–†–ê–í–õ–ï–ù–û"""
    model = Story
    template_name = 'stories/search_results.html'
    context_object_name = 'stories'
    paginate_by = 10
    
    def get_queryset(self):
        query = self.request.GET.get('q', '')
        if not query:
            return Story.objects.none()
        
        return self.get_base_queryset().filter(
            Q(title__icontains=query) |
            Q(description__icontains=query) |
            Q(tags__name__icontains=query) |
            Q(category__name__icontains=query)
        ).distinct().order_by('-created_at')
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['search_query'] = self.request.GET.get('q', '')
        context['title'] = f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: {context['search_query']}"
        return context


# –û—Å—Ç–∞–ª—å–Ω—ã–µ view –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
# (StoryDetailView, AJAX —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Å–∏—Å—Ç–µ–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)
# –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
'''

    print("="*50)
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í")
    print("="*50)
    print()

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    views_path = "stories/views.py"
    backup_path = create_backup(views_path)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(views_path, 'w', encoding='utf-8') as f:
        f.write(views_content)
        
    print(f"‚úÖ –§–∞–π–ª {views_path} –æ–±–Ω–æ–≤–ª–µ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ–¥—Å—á–µ—Ç–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    print()
    print("üìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
    print("  ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω StoryQuerysetMixin –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ queryset")
    print("  ‚Ä¢ –í—Å–µ ListView —Ç–µ–ø–µ—Ä—å –Ω–∞—Å–ª–µ–¥—É—é—Ç –æ—Ç StoryQuerysetMixin")
    print("  ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤–æ –≤—Å–µ—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è—Ö")
    print("  ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î")
    print()
    print("üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("  1. –û–±–Ω–æ–≤–∏—Ç–µ —à–∞–±–ª–æ–Ω story_list.html")
    print("  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py runserver")
    print("  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: http://127.0.0.1:8000/stories/")
    print()

if __name__ == "__main__":
    main()
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
