#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ Playlist
–£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ –ø–æ–ª–µ stories
"""

import os
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–î–ï–õ–ò PLAYLIST")
print("=" * 50)

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª models.py
models_file = 'stories/models.py'

try:
    with open(models_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    print("‚úÖ –§–∞–π–ª models.py –ø—Ä–æ—á–∏—Ç–∞–Ω")
    
    # –ò—â–µ–º –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ –ø–æ–ª–µ stories
    lines = content.split('\n')
    new_lines = []
    skip_next = False
    
    for i, line in enumerate(lines):
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å ManyToManyField –Ω–∞ stories
        if 'stories' in line.lower() and ('manytomanyfield' in line.lower() or 'through' in line.lower()):
            print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É {i+1}: {line.strip()}")
            skip_next = True
            continue
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
        if skip_next and (line.strip().startswith('through=') or line.strip().startswith('blank=') or line.strip().startswith('verbose_name=')):
            print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É {i+1}: {line.strip()}")
            continue
        else:
            skip_next = False
        
        new_lines.append(line)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    new_content = '\n'.join(new_lines)
    
    with open(models_file, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    print("‚úÖ –§–∞–π–ª models.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    print("\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π...")
    from django.core.management import call_command
    
    try:
        call_command('makemigrations', 'stories', '--name=fix_playlist_model')
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
    except Exception as e:
        print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏: {e}")
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    print("\n‚öôÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    try:
        call_command('migrate', 'stories')
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    except Exception as e:
        print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
    print("‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ –ø–æ–ª–µ stories –∏–∑ –º–æ–¥–µ–ª–∏ Playlist") 
    print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏—Å–ø—Ä–∞–≤–ª—è—é—â–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:")
    print("python manage.py runserver")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
