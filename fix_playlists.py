#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏
–ó–∞–ø—É—Å–∫: python fix_playlists.py
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('E:/pravoslavie_portal')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from stories.models import Playlist, PlaylistItem
from django.contrib.auth.models import User
from django.db import transaction

def main():
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –ü–õ–ï–ô–õ–ò–°–¢–ê–ú–ò")
    print("=" * 50)
    
    try:
        with transaction.atomic():
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã
            playlists = Playlist.objects.all()
            print(f"üìä –í—Å–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –≤ –±–∞–∑–µ: {playlists.count()}")
            
            # 2. –ò—â–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç '–±–æ—Ä–æ–¥–∞'
            problematic_playlists = Playlist.objects.filter(slug='–±–æ—Ä–æ–¥–∞')
            
            if problematic_playlists.exists():
                print(f"üîç –ù–∞–π–¥–µ–Ω–æ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ —Å slug='–±–æ—Ä–æ–¥–∞': {problematic_playlists.count()}")
                
                for playlist in problematic_playlists:
                    print(f"   - ID: {playlist.id}")
                    print(f"   - Title: '{playlist.title}'")
                    print(f"   - Creator: {playlist.creator.username}")
                    print(f"   - Type: {playlist.playlist_type}")
                    print(f"   - Stories: {playlist.playlist_items.count()}")
                    
                    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–ª–µ–π–ª–∏—Å—Ç ID {playlist.id}:")
                    
                    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ò–∑–º–µ–Ω–∏—Ç—å slug
                    new_slug = f"playlist-{playlist.creator.username}-{playlist.id}"
                    playlist.slug = new_slug
                    playlist.save()
                    print(f"   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω slug –Ω–∞: '{new_slug}'")
                    
            else:
                print("‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç '–±–æ—Ä–æ–¥–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å...")
            
            for playlist in Playlist.objects.all():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å slug
                duplicates = Playlist.objects.filter(
                    slug=playlist.slug
                ).exclude(id=playlist.id)
                
                if duplicates.exists():
                    print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã slug '{playlist.slug}' –¥–ª—è –ø–ª–µ–π–ª–∏—Å—Ç–∞ ID {playlist.id}")
                    new_slug = f"{playlist.slug}-{playlist.id}"
                    playlist.slug = new_slug
                    playlist.save()
                    print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞: '{new_slug}'")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–æ–ª–µ–π
                if not playlist.title:
                    playlist.title = f"–ü–ª–µ–π–ª–∏—Å—Ç {playlist.id}"
                    playlist.save()
                    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–ª–µ–π–ª–∏—Å—Ç–∞ ID {playlist.id}")
            
            # 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            print(f"\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            playlists = Playlist.objects.all()
            print(f"   –í—Å–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤: {playlists.count()}")
            
            for playlist in playlists:
                print(f"   - '{playlist.slug}' | '{playlist.title}' | {playlist.creator.username}")
                
        print(f"\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
