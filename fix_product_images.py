#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
BASE_DIR = Path(__file__).parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
    
    from books.models import Book
    from shop.models import Product
    
    print("üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Ç–∏–ø–∞ 'book'
    book_products = Product.objects.filter(product_type='book')
    
    print(f"üìö –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –∫–Ω–∏–≥: {book_products.count()}")
    
    updated_count = 0
    error_count = 0
    
    for product in book_products:
        try:
            # –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–∏–≥—É
            book = Book.objects.get(id=product.book_id)
            
            print(f"\nüìñ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {product.title}")
            print(f"   ID —Ç–æ–≤–∞—Ä–∞: {product.id}")
            print(f"   ID –∫–Ω–∏–≥–∏: {product.book_id}")
            print(f"   –û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏: {'‚úÖ –µ—Å—Ç—å' if book.cover else '‚ùå –Ω–µ—Ç'}")
            print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {'‚úÖ –µ—Å—Ç—å' if product.image else '‚ùå –Ω–µ—Ç'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±–ª–æ–∂–∫–∞ —É –∫–Ω–∏–≥–∏
            if book.cover:
                # –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
                if not product.image:
                    product.image = book.cover
                    product.save()
                    print(f"   ‚úÖ –û–±–ª–æ–∂–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Ç–æ–≤–∞—Ä")
                    updated_count += 1
                else:
                    print(f"   ‚ÑπÔ∏è –£ —Ç–æ–≤–∞—Ä–∞ —É–∂–µ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            else:
                print(f"   ‚ö†Ô∏è –£ –∫–Ω–∏–≥–∏ –Ω–µ—Ç –æ–±–ª–æ–∂–∫–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è")
                    
        except Book.DoesNotExist:
            print(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {product.book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: {product.title}")
            error_count += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–æ–≤–∞—Ä–∞ {product.title}: {e}")
            error_count += 1
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {updated_count}")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"   üìã –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –∫–Ω–∏–≥: {book_products.count()}")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüñºÔ∏è –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    with_images = book_products.exclude(image='').count()
    without_images = book_products.filter(image='').count()
    
    print(f"   ‚úÖ –¢–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {with_images}")
    print(f"   ‚ùå –¢–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {without_images}")
    
    if without_images > 0:
        print(f"\nüìù –¢–û–í–ê–†–´ –ë–ï–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:")
        for product in book_products.filter(image=''):
            try:
                book = Book.objects.get(id=product.book_id)
                print(f"   üìñ {product.title}")
                print(f"      –ö–Ω–∏–≥–∞: {book.title}")
                print(f"      –û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏: {'–µ—Å—Ç—å' if book.cover else '–ù–ï–¢'}")
            except Book.DoesNotExist:
                print(f"   üìñ {product.title} (–∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)")
    
    print(f"\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print(f"\nüîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:")
    all_products = Product.objects.filter(is_active=True)
    for product in all_products[:5]:  # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤
        content_obj = product.content_object
        print(f"üì¶ {product.title}")
        print(f"   –¢–∏–ø: {product.product_type}")
        print(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {'‚úÖ' if product.image else '‚ùå'}")
        if content_obj:
            if hasattr(content_obj, 'cover'):
                print(f"   –û–±–ª–æ–∂–∫–∞ –æ–±—ä–µ–∫—Ç–∞: {'‚úÖ' if content_obj.cover else '‚ùå'}")
            else:
                print(f"   –û–±–ª–æ–∂–∫–∞ –æ–±—ä–µ–∫—Ç–∞: ‚ùì (–Ω–µ—Ç –ø–æ–ª—è cover)")
        else:
            print(f"   –°–≤—è–∑–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç: ‚ùå (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
    
except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
