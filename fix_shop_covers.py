#!/usr/bin/env python
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–ª–æ–∂–µ–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
BASE_DIR = Path(__file__).parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
    
    from books.models import Book
    from shop.models import Product
    
    print("üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–ª–æ–∂–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Ç–∏–ø–∞ 'book'
    book_products = Product.objects.filter(product_type='book')
    
    updated_count = 0
    created_count = 0
    error_count = 0
    
    for product in book_products:
        try:
            # –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–∏–≥—É
            book = Book.objects.get(id=product.book_id)
            
            print(f"\nüìñ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {product.title}")
            print(f"   Book ID: {product.book_id}")
            print(f"   Book cover: {book.cover}")
            print(f"   Product image: {product.image}")
            
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –æ–±–ª–æ–∂–∫—É
            if book.cover and (not product.image or str(product.image) != str(book.cover)):
                product.image = book.cover
                product.save()
                print(f"   ‚úÖ –û–±–ª–æ–∂–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
                updated_count += 1
            elif not book.cover and product.image:
                print(f"   ‚ö†Ô∏è –£ –∫–Ω–∏–≥–∏ –Ω–µ—Ç –æ–±–ª–æ–∂–∫–∏, –Ω–æ —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            elif not book.cover and not product.image:
                print(f"   ‚ö†Ô∏è –ò —É –∫–Ω–∏–≥–∏, –∏ —É —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            else:
                print(f"   ‚úì –û–±–ª–æ–∂–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞")
                    
        except Book.DoesNotExist:
            print(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {product.book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: {product.title}")
            error_count += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–æ–≤–∞—Ä–∞ {product.title}: {e}")
            error_count += 1
    
    # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∫–Ω–∏–≥, —É –∫–æ—Ç–æ—Ä—ã—Ö –∏—Ö –µ—â–µ –Ω–µ—Ç
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–∏–≥–∏ –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤...")
    books_without_products = []
    
    for book in Book.objects.filter(price__gt=0):
        if not Product.objects.filter(product_type='book', book_id=book.id).exists():
            books_without_products.append(book)
    
    print(f"   –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥ –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤: {len(books_without_products)}")
    
    for book in books_without_products:
        try:
            product = Product.objects.create(
                title=book.title,
                description=book.description,
                price=book.price,
                product_type='book',
                book_id=book.id,
                image=book.cover,
                is_active=True,
                is_digital=True,
            )
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä –¥–ª—è –∫–Ω–∏–≥–∏: {book.title}")
            created_count += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∫–Ω–∏–≥–∏ {book.title}: {e}")
            error_count += 1
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–±–ª–æ–∂–µ–∫: {updated_count}")
    print(f"   –°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {created_count}")
    print(f"   –û—à–∏–±–æ–∫: {error_count}")
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –∫–Ω–∏–≥: {Product.objects.filter(product_type='book').count()}")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print(f"\nüñºÔ∏è –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ë–õ–û–ñ–ï–ö:")
    with_covers = Product.objects.filter(product_type='book', image__isnull=False).count()
    without_covers = Product.objects.filter(product_type='book', image__isnull=True).count()
    
    print(f"   –¢–æ–≤–∞—Ä—ã —Å –æ–±–ª–æ–∂–∫–∞–º–∏: {with_covers}")
    print(f"   –¢–æ–≤–∞—Ä—ã –±–µ–∑ –æ–±–ª–æ–∂–µ–∫: {without_covers}")
    
    if without_covers > 0:
        print(f"\nüìù –¢–û–í–ê–†–´ –ë–ï–ó –û–ë–õ–û–ñ–ï–ö:")
        for product in Product.objects.filter(product_type='book', image__isnull=True):
            try:
                book = Book.objects.get(id=product.book_id)
                print(f"   üìñ {product.title} (—É –∫–Ω–∏–≥–∏ –æ–±–ª–æ–∂–∫–∞: {'–µ—Å—Ç—å' if book.cover else '–ù–ï–¢'})")
            except Book.DoesNotExist:
                print(f"   üìñ {product.title} (–∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)")
    
    print(f"\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
