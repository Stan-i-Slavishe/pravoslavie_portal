#!/usr/bin/env python
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–Ω–∏–≥–æ–π "–í–µ–ª–∏–∫–∞—è –∫–Ω–∏–≥–∞"
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from books.models import Book

def main():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–ù–ò–ì–ò '–í–ï–õ–ò–ö–ê–Ø –ö–ù–ò–ì–ê'")
    print("=" * 50)
    
    try:
        # –ò—â–µ–º –∫–Ω–∏–≥—É –ø–æ slug
        book = Book.objects.get(slug='velikaya-kniga')
        
        print(f"üìñ –ù–ê–ô–î–ï–ù–ê –ö–ù–ò–ì–ê:")
        print(f"   ID: {book.id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {book.title}")
        print(f"   Slug: {book.slug}")
        print(f"   –¶–µ–Ω–∞: {book.price} ‚ÇΩ")
        print(f"   –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è: {book.is_free}")
        print(f"   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞: {book.is_published}")
        
        print(f"\nüé≠ –ê–ù–ê–õ–ò–ó –õ–û–ì–ò–ö–ò –®–ê–ë–õ–û–ù–ê:")
        print(f"   –£—Å–ª–æ–≤–∏–µ: user.is_authenticated = True")
        print(f"   book.is_free = {book.is_free}")
        print(f"   user_can_read = False (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∫—É–ø–∏–ª –∫–Ω–∏–≥—É)")
        
        if book.is_free:
            print(f"   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: book.is_free=True")
            print(f"   ‚Üí –®–∞–±–ª–æ–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É'")
            print(f"   üîß –†–ï–®–ï–ù–ò–ï: –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å is_free=False")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º
            book.is_free = False
            book.save()
            print(f"   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: is_free —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ False")
        else:
            print(f"   ‚úÖ –ö–Ω–∏–≥–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–∞–∫ –ø–ª–∞—Ç–Ω–∞—è")
            print(f"   ‚Üí –®–∞–±–ª–æ–Ω –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É '–ö—É–ø–∏—Ç—å –∑–∞ {book.price} ‚ÇΩ'")
        
        print(f"\nüìä –ò–¢–û–ì–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò:")
        book.refresh_from_db()
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {book.title}")
        print(f"   –¶–µ–Ω–∞: {book.price} ‚ÇΩ")
        print(f"   –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è: {book.is_free}")
        print(f"   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞: {book.is_published}")
        
        print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        if book.is_free:
            print(f"   ‚Üí –ë—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞: '–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É'")
        else:
            print(f"   ‚Üí –ë—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞: '–ö—É–ø–∏—Ç—å –∑–∞ {book.price} ‚ÇΩ'")
        
    except Book.DoesNotExist:
        print("‚ùå –ö–Ω–∏–≥–∞ 'velikaya-kniga' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏
        print("\nüìö –í–°–ï –ö–ù–ò–ì–ò –í –ë–ê–ó–ï:")
        books = Book.objects.all()
        for book in books:
            print(f"   - ID:{book.id} | '{book.title}' | slug:'{book.slug}' | price:{book.price} ‚ÇΩ | free:{book.is_free}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
