#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ views.py
"""

print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï VIEWS.PY")
print("=" * 40)

# –ß–∏—Ç–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
try:
    with open('stories/views.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç
    if 'from django.views.generic import ListView, DetailView' in content:
        # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
        content = content.replace(
            'status=500)from django.views.generic import ListView, DetailView',
            'status=500)\n\nfrom django.views.generic import ListView, DetailView'
        )
        
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
        lines = content.split('\n')
        
        # –ù–∞—Ö–æ–¥–∏–º –∑–∞–≥–ª—É—à–∫–∏
        stub_start = -1
        stub_end = -1
        
        for i, line in enumerate(lines):
            if '# –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –õ–ê–ô–ö–û–í –ò –ò–ó–ë–†–ê–ù–ù–û–ì–û' in line:
                stub_start = i
            if stub_start != -1 and 'from django.views.generic import ListView, DetailView' in line and i > stub_start:
                stub_end = i - 1
                break
        
        if stub_start != -1 and stub_end != -1:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏
            stub_lines = lines[stub_start:stub_end + 1]
            
            # –£–¥–∞–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏ –∏–∑ –Ω–∞—á–∞–ª–∞
            remaining_lines = lines[:stub_start] + lines[stub_end + 1:]
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏ –≤ –∫–æ–Ω–µ—Ü
            fixed_lines = remaining_lines + [''] + stub_lines
            
            content = '\n'.join(fixed_lines)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('stories/views.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ views.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é views.py
    minimal_content = '''from django.views.generic import ListView, DetailView
from django.http import Http404, JsonResponse
from django.shortcuts import get_object_or_404, redirect, render
from django.db.models import Count, Q
from django.contrib import messages
from django.views.decorators.http import require_POST, require_http_methods
from django.views.decorators.csrf import csrf_exempt
from django.contrib.auth.decorators import login_required
from django.db.models import Q, F, Count, Avg
from django.core.paginator import Paginator
from django.utils.decorators import method_decorator
from django.views.decorators.cache import cache_page
from django.utils.text import slugify
from django.utils.crypto import get_random_string
import json

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏
from .models import Story, StoryComment, CommentReaction, Playlist, PlaylistItem
from core.models import Category, Tag
from django.template.loader import render_to_string
from django.utils.html import escape

# –ë–∞–∑–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã
class StoryListView(ListView):
    model = Story
    template_name = 'stories/list.html'
    context_object_name = 'stories'
    paginate_by = 12

    def get_queryset(self):
        return Story.objects.filter(is_published=True).select_related('category').prefetch_related('tags')

class StoryCategoryView(ListView):
    model = Story
    template_name = 'stories/category.html'
    context_object_name = 'stories'
    paginate_by = 12

class StoryTagView(ListView):
    model = Story
    template_name = 'stories/list.html'
    context_object_name = 'stories'
    paginate_by = 12

class PopularStoriesView(ListView):
    model = Story
    template_name = 'stories/list.html'
    context_object_name = 'stories'
    paginate_by = 12

class FeaturedStoriesView(ListView):
    model = Story
    template_name = 'stories/list.html'
    context_object_name = 'stories'
    paginate_by = 12

class StorySearchView(ListView):
    model = Story
    template_name = 'stories/search_results.html'
    context_object_name = 'stories'
    paginate_by = 12

def story_detail(request, slug):
    """–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å—Å–∫–∞–∑–∞"""
    story = get_object_or_404(Story, slug=slug, is_published=True)
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã
    story.views_count = F('views_count') + 1
    story.save(update_fields=['views_count'])
    story.refresh_from_db()
    
    context = {
        'story': story,
        'likes_count': story.likes_count,
        'user_liked': False,
    }
    
    return render(request, 'stories/story_detail.html', context)

@require_POST
@login_required
def story_like(request, story_id):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ª–∞–π–∫–æ–≤ —Ä–∞—Å—Å–∫–∞–∑–æ–≤"""
    try:
        story = get_object_or_404(Story, id=story_id)
        
        # –ü—Ä–æ—Å—Ç–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ª–∞–π–∫–æ–≤
        story.likes_count += 1
        story.save(update_fields=['likes_count'])
        
        return JsonResponse({
            'status': 'success',
            'liked': True,
            'likes_count': story.likes_count,
            'message': '–õ–∞–π–∫ –¥–æ–±–∞–≤–ª–µ–Ω!'
        })
        
    except Exception as e:
        return JsonResponse({
            'status': 'error',
            'message': str(e)
        }, status=500)

@require_POST
@login_required
def story_favorite(request, story_id):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
    try:
        story = get_object_or_404(Story, id=story_id)
        
        return JsonResponse({
            'status': 'success',
            'favorited': True,
            'message': '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!'
        })
        
    except Exception as e:
        return JsonResponse({
            'status': 'error',
            'message': str(e)
        }, status=500)

# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
def add_comment(request, story_id):
    return JsonResponse({'status': 'error', 'message': '–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'})

def load_comments(request, story_id):
    return JsonResponse({'status': 'error', 'message': '–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'})

def load_more_comments(request, story_id):
    return JsonResponse({'status': 'error', 'message': '–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'})

def comment_reaction(request, comment_id):
    return JsonResponse({'status': 'error', 'message': '–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'})

def edit_comment(request, comment_id):
    return JsonResponse({'status': 'error', 'message': '–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'})

def delete_comment(request, comment_id):
    return JsonResponse({'status': 'error', 'message': '–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'})
'''
    
    with open('stories/views.py', 'w', encoding='utf-8') as f:
        f.write(minimal_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π views.py")

print("\nüöÄ –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä:")
print("python manage.py runserver")
