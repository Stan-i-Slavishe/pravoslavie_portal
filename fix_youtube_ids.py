#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ YouTube ID –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞
"""

import os
import sys
import django
import re
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.append(str(project_root))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from stories.models import Story

def extract_youtube_id(url):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –≤–∏–¥–µ–æ –∏–∑ YouTube URL"""
    if not url:
        return None
    
    patterns = [
        r'(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/)([^&\n?#]+)',
        r'youtube\.com\/v\/([^&\n?#]+)',
    ]
    
    for pattern in patterns:
        match = re.search(pattern, url)
        if match:
            return match.group(1)
    
    return None

def fix_specific_story(slug):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑ –ø–æ slug"""
    try:
        story = Story.objects.get(slug=slug)
        print(f"üìñ –ù–∞–π–¥–µ–Ω —Ä–∞—Å—Å–∫–∞–∑: {story.title}")
        print(f"üîó YouTube URL: {story.youtube_url or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"üÜî YouTube ID: {story.youtube_embed_id or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        
        if story.youtube_url and not story.youtube_embed_id:
            youtube_id = extract_youtube_id(story.youtube_url)
            if youtube_id:
                story.youtube_embed_id = youtube_id
                story.save(update_fields=['youtube_embed_id'])
                print(f"‚úÖ YouTube ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {youtube_id}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∏–∑ URL: {story.youtube_url}")
        elif story.youtube_embed_id:
            print("‚úÖ YouTube ID —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ö†Ô∏è YouTube URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π URL
            test_url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
            story.youtube_url = test_url
            story.youtube_embed_id = "dQw4w9WgXcQ"
            story.save(update_fields=['youtube_url', 'youtube_embed_id'])
            print(f"üß™ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π YouTube URL: {test_url}")
        
        return story
        
    except Story.DoesNotExist:
        print(f"‚ùå –†–∞—Å—Å–∫–∞–∑ —Å slug '{slug}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None

def list_stories_without_youtube_id():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å—Å–∫–∞–∑—ã –±–µ–∑ YouTube ID"""
    stories = Story.objects.filter(youtube_embed_id__isnull=True) | Story.objects.filter(youtube_embed_id='')
    
    if stories.exists():
        print("üìã –†–∞—Å—Å–∫–∞–∑—ã –±–µ–∑ YouTube ID:")
        for story in stories[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"   - {story.slug}: {story.title}")
        
        if stories.count() > 10:
            print(f"   ... –∏ –µ—â–µ {stories.count() - 10} —Ä–∞—Å—Å–∫–∞–∑–æ–≤")
    else:
        print("‚úÖ –í—Å–µ —Ä–∞—Å—Å–∫–∞–∑—ã –∏–º–µ—é—Ç YouTube ID")

def main():
    print("üé¨ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ YouTube ID –¥–ª—è —Ä–∞—Å—Å–∫–∞–∑–æ–≤")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Å–∫–∞–∑ –∏–∑ –æ—à–∏–±–∫–∏
    problem_slug = "kak-svyatoj-luka-doch-spas"
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑: {problem_slug}")
    story = fix_specific_story(problem_slug)
    
    if story:
        print(f"\nüåê –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
        print(f"   http://127.0.0.1:8000/stories/{story.slug}/")
    
    print("\n" + "-" * 30)
    list_stories_without_youtube_id()

if __name__ == '__main__':
    main()
