#!/usr/bin/env python
"""
–°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
"""

import requests
import json
from datetime import datetime, date
from typing import List, Dict, Optional

class OrthodoxCalendarService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º"""
    
    def __init__(self):
        # API endpoints (–ø—Ä–∏–º–µ—Ä—ã)
        self.apis = {
            'pravoslavie': 'https://pravoslavie.ru/api/calendar',
            'azbyka': 'https://azbyka.ru/api/calendar', 
            'calapi': 'https://calapi.ru/api/orthodox',
            # –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
            'local': 'local_calendar.json'
        }
    
    def get_events_for_date(self, target_date: date) -> List[Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É"""
        events = []
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        for source_name, api_url in self.apis.items():
            try:
                if source_name == 'local':
                    events = self._get_local_events(target_date)
                else:
                    events = self._get_api_events(api_url, target_date)
                
                if events:
                    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Å–æ–±—ã—Ç–∏—è –∏–∑ {source_name}")
                    break
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ {source_name}: {e}")
                continue
        
        return events
    
    def _get_api_events(self, api_url: str, target_date: date) -> List[Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ API"""
        params = {
            'date': target_date.strftime('%Y-%m-%d'),
            'format': 'json'
        }
        
        response = requests.get(api_url, params=params, timeout=10)
        response.raise_for_status()
        
        data = response.json()
        return self._normalize_events(data)
    
    def _get_local_events(self, target_date: date) -> List[Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
        # –ë–∞–∑–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è (–∑–∞–≥–ª—É—à–∫–∞)
        local_events = {
            '01-07': [{'title': '–†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ', 'type': 'great_feast'}],
            '01-19': [{'title': '–ö—Ä–µ—â–µ–Ω–∏–µ –ì–æ—Å–ø–æ–¥–Ω–µ', 'type': 'great_feast'}],
            '02-15': [{'title': '–°—Ä–µ—Ç–µ–Ω–∏–µ –ì–æ—Å–ø–æ–¥–Ω–µ', 'type': 'great_feast'}],
            '04-07': [{'title': '–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω–∏–µ', 'type': 'great_feast'}],
            '08-19': [{'title': '–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ì–æ—Å–ø–æ–¥–Ω–µ', 'type': 'great_feast'}],
            '08-28': [{'title': '–£—Å–ø–µ–Ω–∏–µ –ü—Ä–µ—Å–≤—è—Ç–æ–π –ë–æ–≥–æ—Ä–æ–¥–∏—Ü—ã', 'type': 'great_feast'}],
            '09-21': [{'title': '–†–æ–∂–¥–µ—Å—Ç–≤–æ –ü—Ä–µ—Å–≤—è—Ç–æ–π –ë–æ–≥–æ—Ä–æ–¥–∏—Ü—ã', 'type': 'great_feast'}],
            '09-27': [{'title': '–í–æ–∑–¥–≤–∏–∂–µ–Ω–∏–µ –ö—Ä–µ—Å—Ç–∞ –ì–æ—Å–ø–æ–¥–Ω—è', 'type': 'great_feast'}],
            '12-04': [{'title': '–í–≤–µ–¥–µ–Ω–∏–µ –≤–æ —Ö—Ä–∞–º –ü—Ä–µ—Å–≤—è—Ç–æ–π –ë–æ–≥–æ—Ä–æ–¥–∏—Ü—ã', 'type': 'great_feast'}],
            '12-19': [{'title': '–î–µ–Ω—å —Å–≤—è—Ç–∏—Ç–µ–ª—è –ù–∏–∫–æ–ª–∞—è –ß—É–¥–æ—Ç–≤–æ—Ä—Ü–∞', 'type': 'saint'}],
        }
        
        date_key = target_date.strftime('%m-%d')
        return local_events.get(date_key, [])
    
    def _normalize_events(self, raw_data) -> List[Dict]:
        """–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ API
        if isinstance(raw_data, list):
            return raw_data
        elif isinstance(raw_data, dict) and 'events' in raw_data:
            return raw_data['events']
        else:
            return []

# –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
def test_calendar_service():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞"""
    service = OrthodoxCalendarService()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä–∞–∑–Ω—ã–µ –¥–∞—Ç—ã
    test_dates = [
        date(2024, 1, 7),   # –†–æ–∂–¥–µ—Å—Ç–≤–æ
        date(2024, 1, 19),  # –ö—Ä–µ—â–µ–Ω–∏–µ
        date(2024, 12, 19), # –ù–∏–∫–æ–ª–∞–π –ß—É–¥–æ—Ç–≤–æ—Ä–µ—Ü
        date.today(),       # –°–µ–≥–æ–¥–Ω—è
    ]
    
    for test_date in test_dates:
        print(f"\nüìÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º {test_date}:")
        events = service.get_events_for_date(test_date)
        
        if events:
            for event in events:
                print(f"  üïäÔ∏è {event.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        else:
            print("  üìñ –û–±—ã—á–Ω—ã–π –¥–µ–Ω—å")

if __name__ == '__main__':
    print("üîî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...")
    test_calendar_service()
