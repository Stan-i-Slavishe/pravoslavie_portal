#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Django –ø—Ä–æ–µ–∫—Ç–∞
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
"""
import os
import sys
import subprocess
from pathlib import Path

def run_django_check():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Django –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏"""
    print("üîç –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê DJANGO –ü–†–û–ï–ö–¢–ê")
    print("="*50)
    
    if not Path('manage.py').exists():
        print("‚ùå manage.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        return
    
    print("\n1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç Django...")
    try:
        import django
        print(f"   ‚úÖ Django {django.get_version()} –Ω–∞–π–¥–µ–Ω")
    except ImportError as e:
        print(f"   ‚ùå Django –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        return
    
    print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞...")
    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
        django.setup()
        print("   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        print("   üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å config/settings.py")
        return
    
    print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Django...")
    try:
        from django.apps import apps
        app_configs = apps.get_app_configs()
        print(f"   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(app_configs)} –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
        
        for app in app_configs:
            if app.name.startswith(('core', 'stories', 'books', 'shop', 'fairy_tales')):
                print(f"      ‚Ä¢ {app.name}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: {e}")
    
    print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    try:
        from django.db import connection
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
        print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
        print("   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ settings.py")
    
    print("\n5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...")
    try:
        result = subprocess.run(
            [sys.executable, 'manage.py', 'showmigrations', '--list'],
            capture_output=True,
            text=True,
            timeout=30
        )
        if result.returncode == 0:
            print("   ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ –ø–æ—Ä—è–¥–∫–µ")
        else:
            print(f"   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏: {result.stderr}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
    
    print("\n6. –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Django...")
    try:
        result = subprocess.run(
            [sys.executable, 'manage.py', 'check'],
            capture_output=True,
            text=True,
            timeout=30
        )
        if result.returncode == 0:
            print("   üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
            print("   Django –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É: python manage.py runserver")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∏ Django:")
            print(f"   {result.stderr}")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –¥–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
            if "ImproperlyConfigured" in result.stderr:
                print("\n   üí° –°–û–í–ï–¢: –ü—Ä–æ–±–ª–µ–º–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
                print("      ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
                print("      ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ SECRET_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                print("      ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            
            if "ImportError" in result.stderr:
                print("\n   üí° –°–û–í–ï–¢: –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–º–ø–æ—Ä—Ç–æ–º")
                print("      ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
                print("      ‚Ä¢ –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")
            
            if "OperationalError" in result.stderr:
                print("\n   üí° –°–û–í–ï–¢: –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
                print("      ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω")
                print("      ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î")
                print("      ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py migrate")
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

if __name__ == "__main__":
    run_django_check()
