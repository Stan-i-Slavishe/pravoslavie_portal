#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
"""

import re

def fix_views_playlists():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –≤ views_playlists.py"""
    file_path = r'E:\pravoslavie_portal\stories\views_playlists.py'
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ views_playlists.py...")
        
        # –ó–∞–º–µ–Ω—è–µ–º add_to_playlist
        old_add_pattern = r'@login_required\s*@require_http_methods\(\["POST"\]\)\s*def add_to_playlist\(request\):.*?except Exception as e:.*?return JsonResponse\(\{.*?\}\)'
        new_add_function = '''@login_required
@require_http_methods(["POST"])
def add_to_playlist(request):
    """AJAX: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å–∫–∞–∑–∞ –≤ –ø–ª–µ–π–ª–∏—Å—Ç - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON
        if hasattr(request, 'content_type') and request.content_type == 'application/json':
            data = json.loads(request.body)
        else:
            # Fallback –¥–ª—è form data
            data = request.POST
            
        story_id = data.get('story_id')
        playlist_id = data.get('playlist_id')
        
        print(f"DEBUG: story_id={story_id}, playlist_id={playlist_id}")
        print(f"DEBUG: content_type={getattr(request, 'content_type', 'unknown')}")
        print(f"DEBUG: request.body={request.body}")
        
        if not story_id or not playlist_id:
            return JsonResponse({
                'success': False,
                'message': '–ù–µ —É–∫–∞–∑–∞–Ω ID —Ä–∞—Å—Å–∫–∞–∑–∞ –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞'
            }, status=400)
        
        story = get_object_or_404(Story, id=story_id)
        playlist = get_object_or_404(Playlist, id=playlist_id, creator=request.user)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —ç—Ç–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞ –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ
        if PlaylistItem.objects.filter(playlist=playlist, story=story).exists():
            return JsonResponse({
                'success': False,
                'message': '–†–∞—Å—Å–∫–∞–∑ —É–∂–µ –µ—Å—Ç—å –≤ —ç—Ç–æ–º –ø–ª–µ–π–ª–∏—Å—Ç–µ'
            })
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ (–ø–æ—Å–ª–µ–¥–Ω–∏–π + 1)
        last_order = PlaylistItem.objects.filter(
            playlist=playlist
        ).count()
        
        PlaylistItem.objects.create(
            playlist=playlist,
            story=story,
            order=last_order + 1
        )
        
        print(f"DEBUG: –î–æ–±–∞–≤–ª–µ–Ω —Ä–∞—Å—Å–∫–∞–∑ {story.title} –≤ –ø–ª–µ–π–ª–∏—Å—Ç {playlist.title}")
        
        return JsonResponse({
            'success': True,
            'message': f'–†–∞—Å—Å–∫–∞–∑ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–ª–µ–π–ª–∏—Å—Ç "{playlist.title}"'
        })
        
    except json.JSONDecodeError as e:
        print(f"JSON decode error: {e}")
        return JsonResponse({
            'success': False,
            'message': '–û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∞–Ω–Ω—ã—Ö'
        }, status=400)
    except Exception as e:
        print(f"Add to playlist error: {e}")
        import traceback
        traceback.print_exc()
        return JsonResponse({
            'success': False,
            'message': f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}'
        }, status=500)'''
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ - –∑–∞–º–µ–Ω—è–µ–º –ø–æ –º–∞—Ä–∫–µ—Ä–∞–º
        if 'def add_to_playlist(request):' in content:
            # –ù–∞—Ö–æ–¥–∏–º –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏
            lines = content.split('\n')
            new_lines = []
            in_add_function = False
            indent_level = 0
            
            for line in lines:
                if 'def add_to_playlist(request):' in line:
                    in_add_function = True
                    indent_level = len(line) - len(line.lstrip())
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
                    new_lines.extend(new_add_function.split('\n'))
                    continue
                elif in_add_function:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è
                    current_indent = len(line) - len(line.lstrip()) if line.strip() else indent_level + 1
                    if line.strip() and current_indent <= indent_level and (line.startswith('def ') or line.startswith('class ') or line.startswith('@')):
                        in_add_function = False
                        new_lines.append(line)
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ä–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                    continue
                else:
                    new_lines.append(line)
            
            content = '\n'.join(new_lines)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
            
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è add_to_playlist –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")
        return False

def fix_story_detail_js():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç JavaScript –≤ story_detail.html"""
    file_path = r'E:\pravoslavie_portal\templates\stories\story_detail.html'
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º JavaScript –≤ story_detail.html...")
        
        # –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é togglePlaylistStory
        old_toggle_pattern = r'function togglePlaylistStory\(playlistId, storyId, checkbox\) \{.*?\}\s*(?=\n\s*//|function|</script>)'
        
        new_toggle_function = '''function togglePlaylistStory(playlistId, storyId, checkbox) {
    console.log('togglePlaylistStory called:', { playlistId, storyId, checked: checkbox.checked });
    
    const isAdding = checkbox.checked;
    const csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value;
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ URL –∏–∑ urls.py
    const url = isAdding ? '/stories/playlist/add-story/' : '/stories/playlist/remove-story/';
    
    const requestData = {
        playlist_id: playlistId,
        story_id: storyId
    };
    
    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', url, requestData);
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º checkbox –Ω–∞ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
    checkbox.disabled = true;
    
    fetch(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': csrfToken,
        },
        body: JSON.stringify(requestData)
    })
    .then(response => {
        console.log('Response status:', response.status);
        console.log('Response headers:', response.headers);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
            throw new Error('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ JSON –æ—Ç–≤–µ—Ç');
        }
        
        return response.json();
    })
    .then(data => {
        console.log('Response data:', data);
        
        if (data.success) {
            showToast(data.message, 'success');
        } else {
            // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ checkbox
            checkbox.checked = !checkbox.checked;
            showToast(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞', 'error');
        }
    })
    .catch(error => {
        console.error('Playlist error:', error);
        
        // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ checkbox
        checkbox.checked = !checkbox.checked;
        showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞: ' + error.message, 'error');
    })
    .finally(() => {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º checkbox
        checkbox.disabled = false;
    });
}'''
        
        # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞
        if 'function togglePlaylistStory(' in content:
            # –ù–∞–π–¥–µ–º –Ω–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
            start_pattern = 'function togglePlaylistStory(playlistId, storyId, checkbox) {'
            start_idx = content.find(start_pattern)
            
            if start_idx != -1:
                # –ù–∞–π–¥–µ–º –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ (—Å–ª–µ–¥—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ </script>)
                brace_count = 0
                end_idx = start_idx
                in_function = False
                
                for i, char in enumerate(content[start_idx:], start_idx):
                    if char == '{':
                        brace_count += 1
                        in_function = True
                    elif char == '}':
                        brace_count -= 1
                        if in_function and brace_count == 0:
                            end_idx = i + 1
                            break
                
                # –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                content = content[:start_idx] + new_toggle_function + content[end_idx:]
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
            
        print("‚úÖ JavaScript –≤ story_detail.html –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ JavaScript: {e}")
        return False

if __name__ == "__main__":
    print("üîß –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤")
    print("=" * 40)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Python —Ñ—É–Ω–∫—Ü–∏–∏
    if fix_views_playlists():
        print("‚úÖ Python —Ñ—É–Ω–∫—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ Python —Ñ—É–Ω–∫—Ü–∏–π")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º JavaScript
    if fix_story_detail_js():
        print("‚úÖ JavaScript –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ JavaScript")
    
    print("\nüéØ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
    print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞—Å—Å–∫–∞–∑–∞")
    print("3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Å–∫–∞–∑ –≤ –ø–ª–µ–π–ª–∏—Å—Ç")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ Django –∏ –±—Ä–∞—É–∑–µ—Ä–∞")
