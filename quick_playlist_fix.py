#!/usr/bin/env python
# quick_playlist_fix.py - –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤

print("üîß –ü—Ä–∏–º–µ–Ω—è—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤...")

# ‚úÖ JavaScript —Ñ–∞–π–ª —É–∂–µ –∑–∞–º–µ–Ω–µ–Ω

print("‚úÖ JavaScript —Ñ–∞–π–ª –∑–∞–º–µ–Ω–µ–Ω: static/js/save_to_playlist.js")

print("\nüìù –î–û–ë–ê–í–¨–¢–ï –í –ö–û–ù–ï–¶ –§–ê–ô–õ–ê stories/views.py:")
print("="*60)

views_code = '''
# ==========================================
# API –î–õ–Ø –ü–õ–ï–ô–õ–ò–°–¢–û–í - –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï
# ==========================================

@login_required
def api_playlists(request):
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        from .models import Playlist
        
        story_slug = request.GET.get('story_slug')
        story = None
        
        if story_slug:
            try:
                story = Story.objects.get(slug=story_slug)
            except Story.DoesNotExist:
                pass
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        playlists = Playlist.objects.filter(user=request.user).order_by('-created_at')
        
        playlists_data = []
        for playlist in playlists:
            has_story = False
            if story:
                has_story = playlist.stories.filter(id=story.id).exists()
            
            playlists_data.append({
                'id': playlist.id,
                'title': playlist.name,
                'has_story': has_story,
                'stories_count': playlist.stories.count(),
                'is_public': playlist.is_public
            })
        
        return JsonResponse({
            'success': True,
            'playlists': playlists_data
        })
        
    except Exception as e:
        return JsonResponse({
            'success': False,
            'message': f'–û—à–∏–±–∫–∞: {str(e)}'
        })

@login_required
@require_POST
def api_toggle_playlist(request):
    """API –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—Å–∫–∞–∑–∞ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞"""
    try:
        from .models import Playlist
        
        story_slug = request.POST.get('story_slug')
        playlist_id = request.POST.get('playlist_id')
        action = request.POST.get('action')  # 'add' –∏–ª–∏ 'remove'
        
        if not all([story_slug, playlist_id, action]):
            return JsonResponse({
                'success': False,
                'message': '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö'
            })
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—Å–∫–∞–∑
        try:
            story = Story.objects.get(slug=story_slug)
        except Story.DoesNotExist:
            return JsonResponse({
                'success': False,
                'message': '–†–∞—Å—Å–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω'
            })
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç
        try:
            playlist = Playlist.objects.get(id=playlist_id, user=request.user)
        except Playlist.DoesNotExist:
            return JsonResponse({
                'success': False,
                'message': '–ü–ª–µ–π–ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
            })
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        if action == 'add':
            playlist.stories.add(story)
            message = f'–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ "{playlist.name}"'
        elif action == 'remove':
            playlist.stories.remove(story)
            message = f'–£–¥–∞–ª–µ–Ω–æ –∏–∑ "{playlist.name}"'
        else:
            return JsonResponse({
                'success': False,
                'message': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
            })
        
        return JsonResponse({
            'success': True,
            'message': message
        })
        
    except Exception as e:
        return JsonResponse({
            'success': False,
            'message': f'–û—à–∏–±–∫–∞: {str(e)}'
        })

@login_required
@require_POST
def api_create_playlist(request):
    """API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞"""
    try:
        from .models import Playlist
        from django.utils.text import slugify
        
        name = request.POST.get('name', '').strip()
        story_slug = request.POST.get('story_slug')
        
        if not name:
            return JsonResponse({
                'success': False,
                'message': '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞'
            })
        
        # –°–æ–∑–¥–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç
        playlist = Playlist.objects.create(
            name=name,
            slug=slugify(name),
            user=request.user,
            is_public=False
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Å–∫–∞–∑, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
        if story_slug:
            try:
                story = Story.objects.get(slug=story_slug)
                playlist.stories.add(story)
            except Story.DoesNotExist:
                pass
        
        return JsonResponse({
            'success': True,
            'message': f'–ü–ª–µ–π–ª–∏—Å—Ç "{name}" —Å–æ–∑–¥–∞–Ω!',
            'playlist_id': playlist.id
        })
        
    except Exception as e:
        return JsonResponse({
            'success': False,
            'message': f'–û—à–∏–±–∫–∞: {str(e)}'
        })'''

print(views_code)

print("\nüìù –î–û–ë–ê–í–¨–¢–ï –í stories/urls.py –í –°–ü–ò–°–û–ö urlpatterns:")
print("="*60)

urls_code = '''    # API –¥–ª—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
    path('api/playlists/', views.api_playlists, name='api_playlists'),
    path('api/toggle-playlist/', views.api_toggle_playlist, name='api_toggle_playlist'),
    path('api/create-playlist/', views.api_create_playlist, name='api_create_playlist'),'''

print(urls_code)

print("\nüéâ –ü–û–°–õ–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
print("="*60)
print("1. ‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
print("2. ‚úÖ –ì–∞–ª–æ—á–∫–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º")
print("3. ‚úÖ –ë—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è '–î–æ–±–∞–≤–ª–µ–Ω–æ!' / '–£–¥–∞–ª–µ–Ω–æ!'")
print("4. ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
print("5. ‚úÖ –ù–æ–≤—ã–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

print("\nüìç –°–ò–°–¢–ï–ú–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê! –¢–µ–ø–µ—Ä—å –ø–ª–µ–π–ª–∏—Å—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –≤ YouTube! üéâ")
