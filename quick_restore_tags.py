#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º —Ä–∞—Å—Å–∫–∞–∑–æ–≤
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from stories.models import Story
from core.models import Tag

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Ç–µ–≥–∞–º
TAG_MAPPING = {
    '–∞–ª–∫–æ–≥–æ–ª—å': ['–∞–ª–∫–æ–≥–æ–ª—å', '–ø–∏—Ç—å', '–≤—ã–ø–∏–≤–∫–∞', '–ø—å—è–Ω'],
    '–±–∞–±—É—à–∫–∞': ['–±–∞–±—É—à–∫–∞', '–±–∞–±—É–ª—è', '—Å—Ç–∞—Ä—É—à–∫–∞'],
    '–±–∞–Ω–¥–∏—Ç—ã': ['–±–∞–Ω–¥–∏—Ç', '–ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫', '–≥—Ä–∞–±–µ–∂', '–≤–æ—Ä–æ–≤—Å—Ç–≤–æ'],
    '–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞': ['—Å–∏–ª–∞', '–º—É–∂–µ—Å—Ç–≤–æ', '—Ö—Ä–∞–±—Ä–æ—Å—Ç—å', '—Å—Ç–æ–π–∫–æ—Å—Ç—å'],
    '–í–û–í': ['–≤–æ–π–Ω–∞', '—Ñ—Ä–æ–Ω—Ç', '—Å–æ–ª–¥–∞—Ç', '–ø–æ–±–µ–¥–∞', '–≤–æ–µ–Ω–Ω—ã–π'],
    '–≤—Ä–∞–∑—É–º–ª–µ–Ω–∏–µ': ['–≤—Ä–∞–∑—É–º–ª–µ–Ω–∏–µ', '—É—Ä–æ–∫', '–Ω–∞–∫–∞–∑–∞–Ω–∏–µ', '–ø–æ—É—á–µ–Ω–∏–µ'],
    '–≤—Ä–∞—á–µ–±–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏': ['–≤—Ä–∞—á', '–¥–æ–∫—Ç–æ—Ä', '–±–æ–ª—å–Ω–∏—Ü–∞', '–ª–µ—á–µ–Ω–∏–µ', '–º–µ–¥–∏—Ü–∏–Ω'],
    '–≥–æ–Ω–µ–Ω–∏—è': ['–≥–æ–Ω–µ–Ω–∏–µ', '–ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', '–∞—Ä–µ—Å—Ç', '—Ç—é—Ä—å–º–∞'],
    '–¥–µ–¥—É—à–∫–∞': ['–¥–µ–¥—É—à–∫–∞', '–¥–µ–¥', '—Å—Ç–∞—Ä–∏–∫'],
    '–¥–µ—Ç–∏': ['–¥–µ—Ç–∏', '—Ä–µ–±–µ–Ω–æ–∫', '–º–∞–ª—ã—à', '–¥–µ—Ç—Å–∫–∏–π', '–¥–µ–≤–æ—á–∫–∞', '–º–∞–ª—å—á–∏–∫'],
    '–¥–æ–±—Ä–æ–µ —Å–ª–æ–≤–æ': ['—Å–ª–æ–≤–æ', '—Å–æ–≤–µ—Ç', '–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '—É—Ç–µ—à–µ–Ω–∏–µ'],
    '–¥–æ—á—å': ['–¥–æ—á—å', '–¥–æ—á–∫–∞'],
    '–∂–∏–≤–æ—Ç–Ω—ã–µ': ['—Å–æ–±–∞–∫–∞', '–∫–æ—Ç', '–∂–∏–≤–æ—Ç–Ω–æ–µ', '–∑–≤–µ—Ä—å', '–∫–æ—à–∫–∞', '–ø–µ—Å'],
    '–∂–µ—Ä—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å': ['–∂–µ—Ä—Ç–≤–∞', '—Å–∞–º–æ–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ', '–æ—Ç–¥–∞—Ç—å'],
    '–∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –ª–æ–≥–∏–∫–∏': ['—á—É–¥–æ', '–Ω–µ–æ–±—ä—è—Å–Ω–∏–º–æ–µ', '—Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω'],
    '–∏—Å–ø—ã—Ç–∞–Ω–∏—è': ['–∏—Å–ø—ã—Ç–∞–Ω–∏–µ', '—Ç—Ä—É–¥–Ω–æ—Å—Ç—å', '–±–µ–¥–∞', '–Ω–µ—Å—á–∞—Å—Ç—å–µ'],
    '–∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –∂–∏–∑–Ω–∏': ['–∂–∏–∑–Ω—å', '–±—ã—Ç', '–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç—å', '–∂–∏—Ç–µ–π—Å–∫'],
    '–∏—Å—Ü–µ–ª–µ–Ω–∏–µ': ['–∏—Å—Ü–µ–ª–µ–Ω–∏–µ', '–∏–∑–ª–µ—á–µ–Ω–∏–µ', '–∑–¥–æ—Ä–æ–≤—å–µ', '–≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–µ'],
    '–∫—Ä–æ—Ç–æ—Å—Ç—å': ['–∫—Ä–æ—Ç–æ—Å—Ç—å', '—Å–º–∏—Ä–µ–Ω–∏–µ', '—Ç–µ—Ä–ø–µ–Ω–∏–µ', '—Ç–∏—Ö–∏–π'],
    '–º–∞–º–∞': ['–º–∞–º–∞', '–º–∞—Ç—å', '–º–∞–º–æ—á–∫–∞', '–º–∞—Ç—É—à–∫–∞'],
    '–º–æ–ª–∏—Ç–≤–∞': ['–º–æ–ª–∏—Ç–≤–∞', '–º–æ–ª–∏—Ç—å—Å—è', '–º–æ–ª–µ–±–µ–Ω'],
    '–º–æ—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞': ['–∂–µ–Ω–∞', '–º—É–∂', '—Å—É–ø—Ä—É–≥', '–±—Ä–∞–∫', '—Å–µ–º–µ–π–Ω'],
    '–ü–∞–ø–∞': ['–ø–∞–ø–∞', '–æ—Ç–µ—Ü', '–±–∞—Ç—è', '–±–∞—Ç—é—à–∫–∞'],
    '–ø–æ–∫–∞—è–Ω–∏–µ': ['–ø–æ–∫–∞—è–Ω–∏–µ', '–∏—Å–ø–æ–≤–µ–¥—å', '–≥—Ä–µ—Ö', '—Ä–∞—Å–∫–∞—è–Ω–∏–µ'],
    '–ø—Ä–æ—Å—Ç–∞—è —Ä–∞–¥–æ—Å—Ç—å': ['—Ä–∞–¥–æ—Å—Ç—å', '—Å—á–∞—Å—Ç—å–µ', '–≤–µ—Å–µ–ª—å–µ', '–ø—Ä–∞–∑–¥–Ω–∏–∫'],
    '—Å–µ–º—å—è': ['—Å–µ–º—å—è', '—Ä–æ–¥–∏—Ç–µ–ª–∏', '–¥–æ–º', '–¥–æ–º–∞—à–Ω'],
    '—Å–∏–ª—å–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å': ['–ª–∏—á–Ω–æ—Å—Ç—å', '—Ö–∞—Ä–∞–∫—Ç–µ—Ä', '–≤–æ–ª—è', '—Å–∏–ª—å–Ω—ã–π'],
    '—Å–º–∏—Ä–µ–Ω–∏–µ': ['—Å–º–∏—Ä–µ–Ω–∏–µ', '–ø–æ–∫–æ—Ä–Ω–æ—Å—Ç—å', '–ø–æ—Å–ª—É—à–∞–Ω–∏–µ'],
    '—Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ': ['—Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ', '–º–∏–ª–æ—Å–µ—Ä–¥–∏–µ', '–∂–∞–ª–æ—Å—Ç—å', '–ø–æ–º–æ—â—å'],
    '—Å—ã–Ω': ['—Å—ã–Ω', '—Å—ã–Ω–æ–∫'],
    '—Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∞—è –ª—é–±–æ–≤—å': ['–ª—é–±–æ–≤—å', '—Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∏–π', '—Ü–µ—Ä–∫–æ–≤–Ω'],
    '—á—É–¥–µ—Å–∞': ['—á—É–¥–æ', '—á—É–¥–µ—Å–Ω—ã–π', '–Ω–µ–æ–±—ã—á–Ω–æ–µ', '—É–¥–∏–≤–∏—Ç–µ–ª—å–Ω'],
    '—à–∫–æ–ª–∞': ['—à–∫–æ–ª–∞', '—É—á–∏—Ç–µ–ª—å', '—É—á–µ–Ω–∏–∫', '—É—Ä–æ–∫', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ']
}

def restore_tags():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–≥–∏ –¥–ª—è –≤—Å–µ—Ö —Ä–∞—Å—Å–∫–∞–∑–æ–≤"""
    print("üöÄ –ë—ã—Å—Ç—Ä–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤...")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    restored_count = 0
    total_tags_assigned = 0
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–∞—Å—Å–∫–∞–∑—ã
    stories = Story.objects.all()
    print(f"üìö –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {stories.count()} —Ä–∞—Å—Å–∫–∞–∑–æ–≤...")
    
    for story in stories:
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏
        story.tags.clear()
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
        text_content = f"{story.title} {story.description}".lower()
        
        # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–µ–≥–∏
        assigned_tags = []
        for tag_name, keywords in TAG_MAPPING.items():
            try:
                tag = Tag.objects.get(name=tag_name)
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ
                if any(keyword in text_content for keyword in keywords):
                    story.tags.add(tag)
                    assigned_tags.append(tag_name)
                    total_tags_assigned += 1
            except Tag.DoesNotExist:
                print(f"‚ö†Ô∏è –¢–µ–≥ '{tag_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
                continue
        
        if assigned_tags:
            restored_count += 1
            print(f"‚úÖ '{story.title}' ‚Üí {len(assigned_tags)} —Ç–µ–≥–æ–≤: {', '.join(assigned_tags[:3])}{'...' if len(assigned_tags) > 3 else ''}")
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"‚úÖ –†–∞—Å—Å–∫–∞–∑–æ–≤ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–µ–≥–∞–º–∏: {restored_count}")
    print(f"üè∑Ô∏è –í—Å–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ —Ç–µ–≥–æ–≤: {total_tags_assigned}")
    print(f"üìà –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–≥–æ–≤ –Ω–∞ —Ä–∞—Å—Å–∫–∞–∑: {total_tags_assigned/restored_count:.1f}" if restored_count > 0 else "")

def check_missing_tags():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞–∫–∏–µ —Ç–µ–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ–≥–æ–≤...")
    
    missing_tags = []
    for tag_name in TAG_MAPPING.keys():
        if not Tag.objects.filter(name=tag_name).exists():
            missing_tags.append(tag_name)
    
    if missing_tags:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–≥–∏ ({len(missing_tags)}):")
        for tag in missing_tags:
            print(f"  - {tag}")
        
        create_missing = input("\n–°–æ–∑–¥–∞—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏? (y/n): ").lower()
        if create_missing == 'y':
            created_count = 0
            for tag_name in missing_tags:
                tag, created = Tag.objects.get_or_create(
                    name=tag_name,
                    defaults={'slug': tag_name.lower().replace(' ', '-')}
                )
                if created:
                    created_count += 1
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ–≥: {tag_name}")
            print(f"üìä –°–æ–∑–¥–∞–Ω–æ —Ç–µ–≥–æ–≤: {created_count}")
    else:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–µ–≥–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ")

def show_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–≥–æ–≤"""
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –¢–ï–ì–û–í:")
    
    total_stories = Story.objects.count()
    stories_with_tags = Story.objects.filter(tags__isnull=False).distinct().count()
    stories_without_tags = total_stories - stories_with_tags
    
    print(f"üìö –í—Å–µ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–æ–≤: {total_stories}")
    print(f"‚úÖ –° —Ç–µ–≥–∞–º–∏: {stories_with_tags}")
    print(f"‚ùå –ë–µ–∑ —Ç–µ–≥–æ–≤: {stories_without_tags}")
    
    if stories_without_tags > 0:
        print(f"\nüìù –†–∞—Å—Å–∫–∞–∑—ã –±–µ–∑ —Ç–µ–≥–æ–≤:")
        for story in Story.objects.filter(tags__isnull=True)[:10]:
            print(f"  - {story.title}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üè∑Ô∏è –ë–´–°–¢–†–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –¢–ï–ì–û–í")
    print("=" * 40)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_statistics()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏
    check_missing_tags()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print("\n" + "=" * 40)
    confirm = input("üöÄ –ù–∞—á–∞—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤? (y/n): ").lower()
    
    if confirm == 'y':
        restore_tags()
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        show_statistics()
        print("\n‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    else:
        print("‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")

if __name__ == "__main__":
    main()
