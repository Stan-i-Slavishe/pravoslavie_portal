#!/bin/bash
# ü§ñ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
# –°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
PROJECT_DIR="E:/pravoslavie_portal"
PYTHON_PATH="python"
MANAGE_PY="$PROJECT_DIR/manage.py"
LOG_FILE="$PROJECT_DIR/logs/monitoring_cron.log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
check_system() {
    log_message "üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
    cd "$PROJECT_DIR"
    export DJANGO_ENV=production
    
    $PYTHON_PATH $MANAGE_PY monitor_system --check-all --send-alerts >> "$LOG_FILE" 2>&1
    
    if [ $? -eq 0 ]; then
        log_message "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    else
        log_message "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏—Å—Ç–µ–º—ã"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
cleanup_logs() {
    log_message "üßπ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤..."
    
    cd "$PROJECT_DIR"
    export DJANGO_ENV=production
    
    $PYTHON_PATH $MANAGE_PY cleanup_logs --days=7 >> "$LOG_FILE" 2>&1
    
    if [ $? -eq 0 ]; then
        log_message "‚úÖ –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    else
        log_message "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–≥–æ–≤"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
generate_report() {
    log_message "üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    cd "$PROJECT_DIR"
    export DJANGO_ENV=production
    
    REPORT_FILE="$PROJECT_DIR/logs/monitoring_report_$(date +%Y%m%d_%H%M).txt"
    
    $PYTHON_PATH $MANAGE_PY monitoring_report --hours=24 --save="$REPORT_FILE" >> "$LOG_FILE" 2>&1
    
    if [ $? -eq 0 ]; then
        log_message "‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: $REPORT_FILE"
    else
        log_message "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
health_check() {
    log_message "‚ù§Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Django (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
    if curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health/simple/ | grep -q "200"; then
        log_message "‚úÖ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: OK"
    else
        log_message "‚ùå Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: FAILED"
        send_critical_alert "Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–ª–µ—Ä—Ç–∞
send_critical_alert() {
    local message="$1"
    log_message "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–õ–ï–†–¢: $message"
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É email –∏–ª–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    echo "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–õ–ï–†–¢: $message" >> "$PROJECT_DIR/logs/critical_alerts.log"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    "system")
        check_system
        ;;
    "cleanup")
        cleanup_logs
        ;;
    "report")
        generate_report
        ;;
    "health")
        health_check
        ;;
    "all")
        health_check
        check_system
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {system|cleanup|report|health|all}"
        echo "  system  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
        echo "  cleanup - –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤"
        echo "  report  - –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"
        echo "  health  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  all     - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        exit 1
        ;;
esac
