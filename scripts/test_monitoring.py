#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
–°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import os
import sys
import django
import requests
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(project_path)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

def test_health_checks():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check endpoints"""
    print("üè• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health checks...")
    
    base_url = "http://localhost:8000"
    
    endpoints = [
        "/health/simple/",
        "/health/detailed/",
    ]
    
    for endpoint in endpoints:
        try:
            response = requests.get(f"{base_url}{endpoint}", timeout=5)
            status = "‚úÖ" if response.status_code == 200 else "‚ùå"
            print(f"   {status} {endpoint} - {response.status_code}")
        except requests.RequestException as e:
            print(f"   ‚ùå {endpoint} - –û—à–∏–±–∫–∞: {e}")

def test_monitoring_dashboard():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ dashboard –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ dashboard –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    
    base_url = "http://localhost:8000"
    
    endpoints = [
        "/admin/monitoring/dashboard/",
        "/admin/monitoring/api/system/",
        "/admin/monitoring/api/database/",
        "/admin/monitoring/api/cache/",
        "/admin/monitoring/api/application/",
        "/admin/monitoring/api/logs/",
        "/admin/monitoring/api/alerts/",
    ]
    
    for endpoint in endpoints:
        try:
            response = requests.get(f"{base_url}{endpoint}", timeout=5)
            if endpoint.endswith('dashboard/'):
                # Dashboard —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                status = "‚úÖ" if response.status_code in [200, 302, 403] else "‚ùå"
            else:
                # API endpoints —Ç–æ–∂–µ —Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                status = "‚úÖ" if response.status_code in [200, 403] else "‚ùå"
            print(f"   {status} {endpoint} - {response.status_code}")
        except requests.RequestException as e:
            print(f"   ‚ùå {endpoint} - –û—à–∏–±–∫–∞: {e}")

def test_middleware():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ middleware –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ middleware...")
    
    try:
        from core.middleware.monitoring import PerformanceMonitoringMiddleware
        print("   ‚úÖ PerformanceMonitoringMiddleware –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ PerformanceMonitoringMiddleware: {e}")
    
    try:
        from core.middleware.monitoring import SecurityMonitoringMiddleware
        print("   ‚úÖ SecurityMonitoringMiddleware –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ SecurityMonitoringMiddleware: {e}")

def test_management_commands():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Django –∫–æ–º–∞–Ω–¥"""
    print("‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ management –∫–æ–º–∞–Ω–¥...")
    
    commands = [
        "monitor_system",
        "cleanup_logs", 
        "monitoring_report"
    ]
    
    for cmd in commands:
        try:
            from django.core.management import get_commands
            available_commands = get_commands()
            if cmd in available_commands:
                print(f"   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ {cmd} –¥–æ—Å—Ç—É–ø–Ω–∞")
            else:
                print(f"   ‚ùå –ö–æ–º–∞–Ω–¥–∞ {cmd} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã {cmd}: {e}")

def test_cache_monitoring():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–µ—à–∞"""
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–µ—à–∞...")
    
    try:
        from django.core.cache import cache
        
        # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏/—á—Ç–µ–Ω–∏—è
        test_key = 'monitoring_test'
        test_value = 'test_value_123'
        
        cache.set(test_key, test_value, 60)
        retrieved = cache.get(test_key)
        
        if retrieved == test_value:
            print("   ‚úÖ –ö–µ—à —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("   ‚ùå –ö–µ—à –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–µ—à–∞: {e}")

def test_database_monitoring():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ë–î"""
    print("üóÑÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ë–î...")
    
    try:
        from django.db import connection
        
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1 as test")
            result = cursor.fetchone()
            
        if result and result[0] == 1:
            print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print("   ‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")

def test_psutil():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ psutil –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫"""
    print("üíª –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ psutil...")
    
    try:
        import psutil
        
        cpu = psutil.cpu_percent()
        memory = psutil.virtual_memory().percent
        disk = psutil.disk_usage('/').percent if os.name == 'posix' else psutil.disk_usage('C:').percent
        
        print(f"   ‚úÖ CPU: {cpu}%")
        print(f"   ‚úÖ –ü–∞–º—è—Ç—å: {memory}%") 
        print(f"   ‚úÖ –î–∏—Å–∫: {disk:.1f}%")
        
    except ImportError:
        print("   ‚ùå psutil –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install psutil")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ psutil: {e}")

def test_directories():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    
    directories = [
        "logs",
        "scripts", 
        "templates/admin/monitoring"
    ]
    
    for dir_name in directories:
        dir_path = os.path.join(project_path, dir_name)
        if os.path.exists(dir_path):
            print(f"   ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {dir_name} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"   ‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {dir_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def test_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...")
    
    files = [
        "config/monitoring_settings.py",
        "core/middleware/monitoring.py",
        "core/monitoring_views.py",
        "core/management/commands/monitor_system.py",
        "core/management/commands/cleanup_logs.py",
        "core/management/commands/monitoring_report.py",
        "templates/admin/monitoring/dashboard.html",
        "scripts/monitoring_check.sh",
        "scripts/monitoring_check.bat"
    ]
    
    for file_name in files:
        file_path = os.path.join(project_path, file_name)
        if os.path.exists(file_path):
            print(f"   ‚úÖ –§–∞–π–ª {file_name} —Å–æ–∑–¥–∞–Ω")
        else:
            print(f"   ‚ùå –§–∞–π–ª {file_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ü–†–ê–í–û–°–õ–ê–í–ù–û–ì–û –ü–û–†–¢–ê–õ–ê")
    print("=" * 60)
    
    test_directories()
    print()
    
    test_files()
    print()
    
    test_psutil()
    print()
    
    test_middleware()
    print()
    
    test_management_commands()
    print()
    
    test_database_monitoring()
    print()
    
    test_cache_monitoring()
    print()
    
    # –≠—Ç–∏ —Ç–µ—Å—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    print("‚ö†Ô∏è –°–ª–µ–¥—É—é—â–∏–µ —Ç–µ—Å—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ Django —Å–µ—Ä–≤–µ—Ä–∞:")
    print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py runserver")
    print("   –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: python scripts/test_monitoring.py --server-tests")
    
    if '--server-tests' in sys.argv:
        print()
        test_health_checks()
        print()
        
        test_monitoring_dashboard()
    
    print()
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìö –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
    print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8000/admin/monitoring/dashboard/")
    print("   3. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")

if __name__ == "__main__":
    main()
