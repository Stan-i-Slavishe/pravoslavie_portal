@echo off
echo üîí –ù–ê–°–¢–†–û–ô–ö–ê HTTPS –î–õ–Ø DJANGO –†–ê–ó–†–ê–ë–û–¢–ö–ò
echo =======================================
echo.

echo üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º HTTPS –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π YooKassa/Stripe
echo üîπ –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo.

REM –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8
chcp 65001 >nul

call .venv\Scripts\activate

echo 1Ô∏è‚É£  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã...
pip install django-extensions[werkzeug] --quiet
pip install pyopenssl --quiet

echo.
echo 2Ô∏è‚É£  –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...
if not exist ssl mkdir ssl

echo.
echo 3Ô∏è‚É£  –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç...

python -c "
import os
import subprocess
from pathlib import Path

ssl_dir = Path('ssl')
cert_file = ssl_dir / 'cert.pem'
key_file = ssl_dir / 'key.pem'

try:
    # –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å OpenSSL
    subprocess.run([
        'openssl', 'req', '-x509', '-newkey', 'rsa:2048',
        '-keyout', str(key_file), '-out', str(cert_file),
        '-days', '365', '-nodes', '-batch',
        '-subj', '/C=RU/ST=Moscow/L=Moscow/O=DevServer/CN=localhost'
    ], check=True, capture_output=True)
    print('‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ OpenSSL')
    
except (FileNotFoundError, subprocess.CalledProcessError):
    # –ï—Å–ª–∏ OpenSSL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ–∑–¥–∞–µ–º —á–µ—Ä–µ–∑ Python
    try:
        from cryptography import x509
        from cryptography.x509.oid import NameOID
        from cryptography.hazmat.primitives import hashes, serialization
        from cryptography.hazmat.primitives.asymmetric import rsa
        import datetime
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
        private_key = rsa.generate_private_key(
            public_exponent=65537,
            key_size=2048,
        )
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        subject = issuer = x509.Name([
            x509.NameAttribute(NameOID.COUNTRY_NAME, 'RU'),
            x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, 'Moscow'),
            x509.NameAttribute(NameOID.LOCALITY_NAME, 'Moscow'),
            x509.NameAttribute(NameOID.ORGANIZATION_NAME, 'Django Dev Server'),
            x509.NameAttribute(NameOID.COMMON_NAME, 'localhost'),
        ])
        
        cert = x509.CertificateBuilder().subject_name(
            subject
        ).issuer_name(
            issuer
        ).public_key(
            private_key.public_key()
        ).serial_number(
            x509.random_serial_number()
        ).not_valid_before(
            datetime.datetime.utcnow()
        ).not_valid_after(
            datetime.datetime.utcnow() + datetime.timedelta(days=365)
        ).add_extension(
            x509.SubjectAlternativeName([
                x509.DNSName('localhost'),
                x509.DNSName('127.0.0.1'),
            ]),
            critical=False,
        ).sign(private_key, hashes.SHA256())
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        with open(cert_file, 'wb') as f:
            f.write(cert.public_bytes(serialization.Encoding.PEM))
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
        with open(key_file, 'wb') as f:
            f.write(private_key.private_bytes(
                encoding=serialization.Encoding.PEM,
                format=serialization.PrivateFormat.PKCS8,
                encryption_algorithm=serialization.NoEncryption()
            ))
        
        print('‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Python cryptography')
        
    except ImportError:
        print('‚ö†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cryptography...')
        subprocess.run(['pip', 'install', 'cryptography'], check=True)
        print('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ cryptography')
        exit(1)
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: {e}')
        exit(1)
"

if %ERRORLEVEL% neq 0 (
    echo ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    pause
    exit /b 1
)

echo.
echo 4Ô∏è‚É£  –î–æ–±–∞–≤–ª—è–µ–º django-extensions –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...

python -c "
import re

with open('config/settings.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –î–æ–±–∞–≤–ª—è–µ–º django_extensions –≤ THIRD_PARTY_APPS –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
if 'django_extensions' not in content:
    content = re.sub(
        r'(THIRD_PARTY_APPS\s*=\s*\[)',
        r'\1\n    \"django_extensions\",  # –î–ª—è HTTPS –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
        content
    )

with open('config/settings.py', 'w', encoding='utf-8') as f:
    f.write(content)

print('‚úÖ django-extensions –¥–æ–±–∞–≤–ª–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
"

echo.
echo 5Ô∏è‚É£  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º HTTPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...

python -c "
import re

with open('config/settings.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
content = re.sub(r'# –û—Ç–∫–ª—é—á–∞–µ–º HTTPS –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.*?\n', '', content, flags=re.DOTALL)
content = re.sub(r'SECURE_SSL_REDIRECT\s*=\s*False.*?\n', '', content)
content = re.sub(r'SESSION_COOKIE_SECURE\s*=\s*False.*?\n', '', content)
content = re.sub(r'CSRF_COOKIE_SECURE\s*=\s*False.*?\n', '', content)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ HTTPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
https_settings = '''

# HTTPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏
if DEBUG:
    # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–µ –ø—Ä–∏–Ω—É–∂–¥–∞–µ–º –∫ HTTPS (–¥–ª—è –≥–∏–±–∫–æ—Å—Ç–∏)
    SECURE_SSL_REDIRECT = False
    # –ù–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º secure cookies –¥–ª—è HTTPS –∑–∞–ø—Ä–æ—Å–æ–≤
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    # –û—Ç–∫–ª—é—á–∞–µ–º HSTS –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    SECURE_HSTS_SECONDS = 0
    SECURE_HSTS_INCLUDE_SUBDOMAINS = False
    SECURE_HSTS_PRELOAD = False
else:
    # –ü—Ä–æ–¥–∞–∫—à–µ–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
'''

content += https_settings

with open('config/settings.py', 'w', encoding='utf-8') as f:
    f.write(content)

print('‚úÖ HTTPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã')
"

echo.
echo 6Ô∏è‚É£  –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ HTTPS —Å–µ—Ä–≤–µ—Ä–∞...

echo @echo off > start_https_server.bat
echo echo üîí –ó–ê–ü–£–°–ö DJANGO HTTPS –°–ï–†–í–ï–†–ê >> start_https_server.bat
echo echo ============================== >> start_https_server.bat
echo echo. >> start_https_server.bat
echo call .venv\Scripts\activate >> start_https_server.bat
echo echo ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å HTTPS... >> start_https_server.bat
echo echo. >> start_https_server.bat
echo echo üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: >> start_https_server.bat
echo echo    https://127.0.0.1:8000/ >> start_https_server.bat
echo echo. >> start_https_server.bat
echo echo ‚ö†Ô∏è  –í–ê–ñ–ù–û: –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ >> start_https_server.bat
echo echo    –ù–∞–∂–º–∏—Ç–µ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ" ^-^> "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ 127.0.0.1" >> start_https_server.bat
echo echo. >> start_https_server.bat
echo python manage.py runserver_plus --cert-file ssl/cert.pem --key-file ssl/key.pem 127.0.0.1:8000 >> start_https_server.bat
echo pause >> start_https_server.bat

echo ‚úÖ –°–∫—Ä–∏–ø—Ç start_https_server.bat —Å–æ–∑–¥–∞–Ω

echo.
echo 7Ô∏è‚É£  –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ HTTP —Å–µ—Ä–≤–µ—Ä–∞...

echo @echo off > start_http_server.bat
echo echo üåê –ó–ê–ü–£–°–ö DJANGO HTTP –°–ï–†–í–ï–†–ê >> start_http_server.bat
echo echo ============================= >> start_http_server.bat
echo echo. >> start_http_server.bat
echo call .venv\Scripts\activate >> start_http_server.bat
echo echo ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å HTTP... >> start_http_server.bat
echo echo. >> start_http_server.bat
echo echo üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: >> start_http_server.bat
echo echo    http://127.0.0.1:8000/ >> start_http_server.bat
echo echo. >> start_http_server.bat
echo python manage.py runserver 127.0.0.1:8000 >> start_http_server.bat
echo pause >> start_http_server.bat

echo ‚úÖ –°–∫—Ä–∏–ø—Ç start_http_server.bat —Å–æ–∑–¥–∞–Ω

echo.
echo 8Ô∏è‚É£  –û—á–∏—â–∞–µ–º –∫–µ—à –∏ —Å–µ—Å—Å–∏–∏...
python -c "
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
import django
django.setup()
try:
    from django.contrib.sessions.models import Session
    Session.objects.all().delete()
    print('‚úÖ –°–µ—Å—Å–∏–∏ –æ—á–∏—â–µ–Ω—ã')
except:
    pass
try:
    from django.core.cache import cache
    cache.clear()
    print('‚úÖ –ö–µ—à –æ—á–∏—â–µ–Ω')
except:
    pass
"

echo.
echo üéâ HTTPS –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!
echo =============================
echo.
echo üìã –ß–¢–û –ë–´–õ–û –ù–ê–°–¢–†–û–ï–ù–û:
echo   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω django-extensions
echo   ‚úÖ –°–æ–∑–¥–∞–Ω —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo   ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã HTTPS –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Django
echo   ‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞
echo.
echo üöÄ –í–ê–†–ò–ê–ù–¢–´ –ó–ê–ü–£–°–ö–ê:
echo.
echo   üîí HTTPS (–¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π): start_https_server.bat
echo      –ê–¥—Ä–µ—Å: https://127.0.0.1:8000/
echo.
echo   üåê HTTP (–æ–±—ã—á–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞): start_http_server.bat
echo      –ê–¥—Ä–µ—Å: http://127.0.0.1:8000/
echo.
echo üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
echo   ‚Ä¢ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è YooKassa/Stripe - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTPS
echo   ‚Ä¢ –î–ª—è –æ–±—ã—á–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ HTTP
echo   ‚Ä¢ –û–±–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ
echo.
echo ‚ö†Ô∏è  –ü–†–ò –ü–ï–†–í–û–ú –ó–ê–ü–£–°–ö–ï HTTPS:
echo   1. –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
echo   2. –ù–∞–∂–º–∏—Ç–µ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"
echo   3. –í—ã–±–µ—Ä–∏—Ç–µ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ 127.0.0.1 (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ)"
echo   4. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!
echo.

set /p launch_choice="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Å–µ–π—á–∞—Å? (1=HTTPS, 2=HTTP, 3=–ù–µ—Ç): "

if "%launch_choice%"=="1" (
    echo.
    echo üîí –ó–∞–ø—É—Å–∫–∞–µ–º HTTPS —Å–µ—Ä–≤–µ—Ä...
    call start_https_server.bat
) else if "%launch_choice%"=="2" (
    echo.
    echo üåê –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä...
    call start_http_server.bat
) else (
    echo.
    echo ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞ –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã.
)

pause
