@echo off
echo üîí –ü–†–û–°–¢–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê HTTPS –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò
echo ========================================
echo.

echo üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º HTTPS –∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ
echo üîπ –ë–µ–∑ –ª–∏—à–Ω–∏—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
echo.

REM –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8
chcp 65001 >nul

call .venv\Scripts\activate

echo 1Ô∏è‚É£  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º django-extensions...
pip install django-extensions[werkzeug] --quiet

echo.
echo 2Ô∏è‚É£  –°–æ–∑–¥–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç...
if not exist ssl mkdir ssl

python -c "
import subprocess
import os

try:
    # –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    subprocess.run([
        'openssl', 'req', '-x509', '-newkey', 'rsa:2048',
        '-keyout', 'ssl/key.pem', '-out', 'ssl/cert.pem',
        '-days', '365', '-nodes', '-batch',
        '-subj', '/C=RU/ST=Local/L=Local/O=Dev/CN=localhost'
    ], check=True, capture_output=True)
    print('‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω')
except:
    # –ï—Å–ª–∏ OpenSSL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±
    try:
        import ssl
        import socket
        from cryptography import x509
        from cryptography.x509.oid import NameOID
        from cryptography.hazmat.primitives import hashes, serialization
        from cryptography.hazmat.primitives.asymmetric import rsa
        import datetime
        
        key = rsa.generate_private_key(public_exponent=65537, key_size=2048)
        
        subject = issuer = x509.Name([
            x509.NameAttribute(NameOID.COUNTRY_NAME, u'RU'),
            x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, u'Local'),
            x509.NameAttribute(NameOID.LOCALITY_NAME, u'Local'),
            x509.NameAttribute(NameOID.ORGANIZATION_NAME, u'Django Dev'),
            x509.NameAttribute(NameOID.COMMON_NAME, u'localhost'),
        ])
        
        cert = x509.CertificateBuilder().subject_name(
            subject
        ).issuer_name(
            issuer
        ).public_key(
            key.public_key()
        ).serial_number(
            x509.random_serial_number()
        ).not_valid_before(
            datetime.datetime.utcnow()
        ).not_valid_after(
            datetime.datetime.utcnow() + datetime.timedelta(days=365)
        ).sign(key, hashes.SHA256())
        
        with open('ssl/cert.pem', 'wb') as f:
            f.write(cert.public_bytes(serialization.Encoding.PEM))
        
        with open('ssl/key.pem', 'wb') as f:
            f.write(key.private_bytes(
                encoding=serialization.Encoding.PEM,
                format=serialization.PrivateFormat.PKCS8,
                encryption_algorithm=serialization.NoEncryption()
            ))
        
        print('‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Python')
    except ImportError:
        print('‚ö†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cryptography...')
        subprocess.run(['pip', 'install', 'cryptography'])
        print('üîÑ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ')
        exit(1)
"

echo.
echo 3Ô∏è‚É£  –î–æ–±–∞–≤–ª—è–µ–º django-extensions –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...

python -c "
with open('config/settings.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –î–æ–±–∞–≤–ª—è–µ–º django_extensions –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if 'django_extensions' not in content:
    content = content.replace(
        'THIRD_PARTY_APPS = [',
        'THIRD_PARTY_APPS = [\n    \"django_extensions\",  # –î–ª—è HTTPS –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'
    )

with open('config/settings.py', 'w', encoding='utf-8') as f:
    f.write(content)

print('‚úÖ django-extensions –¥–æ–±–∞–≤–ª–µ–Ω')
"

echo.
echo 4Ô∏è‚É£  –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞...

REM HTTPS —Å–µ—Ä–≤–µ—Ä
echo @echo off > run_https.bat
echo echo üîí Django HTTPS Server >> run_https.bat
echo echo ==================== >> run_https.bat
echo call .venv\Scripts\activate >> run_https.bat
echo echo Starting HTTPS server at https://127.0.0.1:8000/ >> run_https.bat
echo python manage.py runserver_plus --cert-file ssl/cert.pem --key-file ssl/key.pem 127.0.0.1:8000 >> run_https.bat

REM HTTP —Å–µ—Ä–≤–µ—Ä
echo @echo off > run_http.bat
echo echo üåê Django HTTP Server >> run_http.bat
echo echo =================== >> run_http.bat
echo call .venv\Scripts\activate >> run_http.bat
echo echo Starting HTTP server at http://127.0.0.1:8000/ >> run_http.bat
echo python manage.py runserver 127.0.0.1:8000 >> run_http.bat

echo ‚úÖ –°–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω—ã

echo.
echo 5Ô∏è‚É£  –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS –≤ Django...

python -c "
with open('config/settings.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –£–±–∏—Ä–∞–µ–º –ø—Ä–∏–Ω—É–∂–¥–µ–Ω–∏–µ –∫ HTTPS –¥–ª—è –≥–∏–±–∫–æ—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if 'SECURE_SSL_REDIRECT = True' in content:
    content = content.replace('SECURE_SSL_REDIRECT = True', 'SECURE_SSL_REDIRECT = False')

# –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
if 'SECURE_SSL_REDIRECT' not in content:
    content += '''
# –ü—Ä–æ—Å—Ç—ã–µ HTTPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
SECURE_SSL_REDIRECT = False  # –ù–µ –ø—Ä–∏–Ω—É–∂–¥–∞–µ–º –∫ HTTPS
'''

with open('config/settings.py', 'w', encoding='utf-8') as f:
    f.write(content)

print('‚úÖ –ë–∞–∑–æ–≤—ã–µ HTTPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã')
"

echo.
echo üéâ –ì–û–¢–û–í–û!
echo ========
echo.
echo üìã –¢–ï–ü–ï–†–¨ –£ –í–ê–° –ï–°–¢–¨ –î–í–ê –†–ï–ñ–ò–ú–ê:
echo.
echo   üîí HTTPS: run_https.bat
echo      ‚Üí https://127.0.0.1:8000/
echo.
echo   üåê HTTP:  run_http.bat  
echo      ‚Üí http://127.0.0.1:8000/
echo.
echo üí° –ü–†–ò –ü–ï–†–í–û–ú –ó–ê–ü–£–°–ö–ï HTTPS:
echo   ‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
echo   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ" ‚Üí "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ 127.0.0.1"
echo   ‚Ä¢ –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!
echo.

set /p launch="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ–π—á–∞—Å? (1=HTTPS, 2=HTTP, 3=–ù–µ —Å–µ–π—á–∞—Å): "

if "%launch%"=="1" (
    echo.
    echo üîí –ó–∞–ø—É—Å–∫–∞–µ–º HTTPS...
    call run_https.bat
) else if "%launch%"=="2" (
    echo.
    echo üåê –ó–∞–ø—É—Å–∫–∞–µ–º HTTP...
    call run_http.bat
) else (
    echo.
    echo ‚úÖ –ì–æ—Ç–æ–≤–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ run_https.bat –∏–ª–∏ run_http.bat
)

pause
