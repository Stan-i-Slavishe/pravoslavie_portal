from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.utils import timezone
from django import forms
from django.core.exceptions import ValidationError
from .models import Product, Cart, CartItem, Order, OrderItem, Purchase, Discount

# –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è Product —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–æ–≤
class ProductAdminForm(forms.ModelForm):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤"""
    
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞
        try:
            from books.models import Book
            book_choices = [('', '-- –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É --')] + [
                (book.id, f"{book.title} (ID: {book.id})") 
                for book in Book.objects.all()
            ]
            self.fields['book_id'] = forms.ChoiceField(
                choices=book_choices,
                required=False,
                label='–ö–Ω–∏–≥–∞',
                help_text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞',
                widget=forms.Select(attrs={'onchange': 'updateContentPreview()'})
            )
        except Exception as e:
            # –ï—Å–ª–∏ –º–æ–¥–µ–ª—å Book –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ –ø–æ–ª–µ
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥: {e}")
            
        try:
            from audio.models import AudioTrack
            audio_choices = [('', '-- –í—ã–±–µ—Ä–∏—Ç–µ –∞—É–¥–∏–æ --')] + [
                (audio.id, f"{audio.title} (ID: {audio.id})") 
                for audio in AudioTrack.objects.all()
            ]
            self.fields['audio_id'] = forms.ChoiceField(
                choices=audio_choices,
                required=False,
                label='–ê—É–¥–∏–æ —Ç—Ä–µ–∫',
                help_text='–í—ã–±–µ—Ä–∏—Ç–µ –∞—É–¥–∏–æ –∏–∑ —Å–ø–∏—Å–∫–∞',
                widget=forms.Select(attrs={'onchange': 'updateContentPreview()'})
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ: {e}")
            
        try:
            from subscriptions.models import Subscription
            subscription_choices = [('', '-- –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É --')] + [
                (sub.id, f"{sub.name} (ID: {sub.id})") 
                for sub in Subscription.objects.all()
            ]
            self.fields['subscription_id'] = forms.ChoiceField(
                choices=subscription_choices,
                required=False,
                label='–¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏',
                help_text='–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞',
                widget=forms.Select(attrs={'onchange': 'updateContentPreview()'})
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫: {e}")
            
        try:
            from fairy_tales.models import FairyTale
            fairy_tale_choices = [('', '-- –í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω —Å–∫–∞–∑–∫–∏ --')] + [
                (ft.id, f"{ft.title} ({ft.age_group}) (ID: {ft.id})") 
                for ft in FairyTale.objects.all()
            ]
            self.fields['fairy_tale_template_id'] = forms.ChoiceField(
                choices=fairy_tale_choices,
                required=False,
                label='–®–∞–±–ª–æ–Ω —Å–∫–∞–∑–∫–∏',
                help_text='–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω —Å–∫–∞–∑–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞',
                widget=forms.Select(attrs={'onchange': 'updateContentPreview()'})
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫–∞–∑–æ–∫: {e}")
    
    def clean(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã"""
        cleaned_data = super().clean()
        product_type = cleaned_data.get('product_type')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Ç–æ–≤–∞—Ä–∞ —É–∫–∞–∑–∞–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ID
        if product_type == 'book':
            if not cleaned_data.get('book_id'):
                raise ValidationError('–î–ª—è —Ç–∏–ø–∞ "–ö–Ω–∏–≥–∞" –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∫–Ω–∏–≥—É')
            # –û—á–∏—â–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
            cleaned_data['audio_id'] = None
            cleaned_data['subscription_id'] = None
            cleaned_data['fairy_tale_template_id'] = None
            
        elif product_type == 'audio':
            if not cleaned_data.get('audio_id'):
                raise ValidationError('–î–ª—è —Ç–∏–ø–∞ "–ê—É–¥–∏–æ" –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∞—É–¥–∏–æ —Ç—Ä–µ–∫')
            # –û—á–∏—â–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
            cleaned_data['book_id'] = None
            cleaned_data['subscription_id'] = None
            cleaned_data['fairy_tale_template_id'] = None
            
        elif product_type == 'subscription':
            if not cleaned_data.get('subscription_id'):
                raise ValidationError('–î–ª—è —Ç–∏–ø–∞ "–ü–æ–¥–ø–∏—Å–∫–∞" –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏')
            # –û—á–∏—â–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
            cleaned_data['book_id'] = None
            cleaned_data['audio_id'] = None
            cleaned_data['fairy_tale_template_id'] = None
            
        elif product_type == 'fairy_tale':
            if not cleaned_data.get('fairy_tale_template_id'):
                raise ValidationError('–î–ª—è —Ç–∏–ø–∞ "–°–∫–∞–∑–∫–∞" –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —à–∞–±–ª–æ–Ω —Å–∫–∞–∑–∫–∏')
            # –û—á–∏—â–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
            cleaned_data['book_id'] = None
            cleaned_data['audio_id'] = None
            cleaned_data['subscription_id'] = None
        
        return cleaned_data
    
    class Meta:
        model = Product
        fields = '__all__'

@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    form = ProductAdminForm
    
    list_display = [
        'title', 
        'get_product_type_display', 
        'price', 
        'is_active', 
        'is_digital',
        'content_link',
        'created_at'
    ]
    list_filter = ['product_type', 'is_active', 'is_digital', 'created_at']
    search_fields = ['title', 'description']
    readonly_fields = ['created_at', 'updated_at', 'content_preview']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('title', 'description', 'price', 'product_type')
        }),
        ('–°–≤—è–∑—å —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º', {
            'fields': ('book_id', 'audio_id', 'subscription_id', 'fairy_tale_template_id', 'content_preview'),
            'description': '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–æ–≤–∞—Ä–∞'
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∫–∞–∑–æ–∫', {
            'fields': (
                'requires_personalization', 
                'has_audio_option', 'audio_option_price',
                'has_illustration_option', 'illustration_option_price',
                'personalization_form_config'
            ),
            'classes': ('collapse',),
            'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∫–∞–∑–æ–∫'
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_active', 'is_digital', 'image')
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )
    
    def content_link(self, obj):
        """–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–≤—è–∑–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"""
        content = obj.content_object
        if content:
            try:
                if obj.product_type == 'book':
                    url = reverse('admin:books_book_change', args=[content.id])
                    return format_html('<a href="{}" target="_blank">üìö {}</a>', url, content.title)
                elif obj.product_type == 'fairy_tale':
                    url = reverse('admin:fairy_tales_fairytale_change', args=[content.id])
                    return format_html('<a href="{}" target="_blank">üßö‚Äç‚ôÄÔ∏è {}</a>', url, content.title)
                elif obj.product_type == 'audio':
                    url = reverse('admin:audio_audiotrack_change', args=[content.id])
                    return format_html('<a href="{}" target="_blank">üéß {}</a>', url, content.title)
                elif obj.product_type == 'subscription':
                    url = reverse('admin:subscriptions_subscription_change', args=[content.id])
                    return format_html('<a href="{}" target="_blank">üìÖ {}</a>', url, content.name)
            except:
                pass
        return format_html('<span style="color: red;">‚ùå –ù–µ —Å–≤—è–∑–∞–Ω–æ</span>')
    content_link.short_description = '–°–≤—è–∑–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç'
    
    def content_preview(self, obj):
        """–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        if not obj.pk:
            return format_html(
                '<div style="padding: 10px; background: #f0f8ff; border-radius: 5px;">'
                'üí° –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä'
                '</div>'
            )
            
        content = obj.content_object
        if content:
            try:
                if obj.product_type == 'book':
                    description = getattr(content, 'description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
                    if len(description) > 100:
                        description = description[:100] + '...'
                    
                    file_info = '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'
                    if hasattr(content, 'pdf_file') and content.pdf_file:
                        file_info = content.pdf_file.name
                    
                    return format_html(
                        '<div style="padding: 10px; background: #f8f9fa; border-radius: 5px; border: 1px solid #ddd;">'
                        '<strong>üìö –ö–Ω–∏–≥–∞:</strong> {}<br>'
                        '<strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {}<br>'
                        '<strong>–§–∞–π–ª:</strong> {}'
                        '</div>',
                        content.title,
                        description,
                        file_info
                    )
                elif obj.product_type == 'fairy_tale':
                    age_group = getattr(content, 'age_group', '–ù–µ —É–∫–∞–∑–∞–Ω')
                    therapeutic_goal = getattr(content, 'therapeutic_goal', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
                    if len(therapeutic_goal) > 100:
                        therapeutic_goal = therapeutic_goal[:100] + '...'
                    
                    category_name = '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
                    if hasattr(content, 'category') and content.category:
                        category_name = content.category.name
                    
                    return format_html(
                        '<div style="padding: 10px; background: #f0f8ff; border-radius: 5px; border: 1px solid #ddd;">'
                        '<strong>üßö‚Äç‚ôÄÔ∏è –°–∫–∞–∑–∫–∞:</strong> {}<br>'
                        '<strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> {}<br>'
                        '<strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> {}<br>'
                        '<strong>–¶–µ–ª—å:</strong> {}'
                        '</div>',
                        content.title,
                        age_group,
                        category_name,
                        therapeutic_goal
                    )
                elif obj.product_type == 'audio':
                    description = getattr(content, 'description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
                    if len(description) > 100:
                        description = description[:100] + '...'
                    
                    file_info = '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'
                    if hasattr(content, 'audio_file') and content.audio_file:
                        file_info = content.audio_file.name
                    
                    return format_html(
                        '<div style="padding: 10px; background: #fff8dc; border-radius: 5px; border: 1px solid #ddd;">'
                        '<strong>üéß –ê—É–¥–∏–æ:</strong> {}<br>'
                        '<strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {}<br>'
                        '<strong>–§–∞–π–ª:</strong> {}'
                        '</div>',
                        content.title,
                        description,
                        file_info
                    )
                elif obj.product_type == 'subscription':
                    price = getattr(content, 'price', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
                    duration = getattr(content, 'duration', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
                    
                    return format_html(
                        '<div style="padding: 10px; background: #f0fff0; border-radius: 5px; border: 1px solid #ddd;">'
                        '<strong>üìÖ –ü–æ–¥–ø–∏—Å–∫–∞:</strong> {}<br>'
                        '<strong>–¶–µ–Ω–∞:</strong> {}‚ÇΩ<br>'
                        '<strong>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> {} –¥–Ω–µ–π'
                        '</div>',
                        content.name,
                        price,
                        duration
                    )
            except Exception as e:
                return format_html(
                    '<div style="padding: 10px; background: #ffe4e1; border-radius: 5px; color: #8b0000;">'
                    '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {}'
                    '</div>',
                    str(e)
                )
        else:
            return format_html(
                '<div style="padding: 10px; background: #ffe4e1; border-radius: 5px; color: #8b0000;">'
                '‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω.'
                '</div>'
            )
    content_preview.short_description = '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
    
    class Media:
        js = ('admin/js/product_admin.js',)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–µ –∂–µ...
class CartItemInline(admin.TabularInline):
    model = CartItem
    extra = 0
    readonly_fields = ['added_at', 'total_price_display', 'personalization_summary']
    fields = ['product', 'quantity', 'personalization_summary', 'total_price_display', 'added_at']
    
    def total_price_display(self, obj):
        return f"{obj.total_price}‚ÇΩ"
    total_price_display.short_description = '–°—É–º–º–∞'
    
    def personalization_summary(self, obj):
        if obj.product.product_type == 'fairy_tale' and obj.personalization_data:
            summary = obj.get_personalization_summary()
            options = []
            if obj.include_audio:
                options.append('üé§ –û–∑–≤—É—á–∫–∞')
            if obj.include_illustrations:
                options.append('üé® –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏')
            result = summary
            if options:
                result += f' + {", ".join(options)}'
            return result
        return '-'
    personalization_summary.short_description = '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è'

@admin.register(Cart)
class CartAdmin(admin.ModelAdmin):
    list_display = ['user', 'total_items', 'total_price_display', 'updated_at']
    list_filter = ['created_at', 'updated_at']
    search_fields = ['user__username', 'user__email']
    readonly_fields = ['created_at', 'updated_at', 'total_price_display', 'total_items']
    inlines = [CartItemInline]
    
    def total_price_display(self, obj):
        return f"{obj.total_price}‚ÇΩ"
    total_price_display.short_description = '–û–±—â–∞—è —Å—É–º–º–∞'

@admin.register(Purchase)
class PurchaseAdmin(admin.ModelAdmin):
    list_display = ['user', 'product', 'order', 'purchased_at']
    list_filter = ['purchased_at', 'product__product_type']
    search_fields = ['user__username', 'product__title', 'order__order_id']
    readonly_fields = ['purchased_at']
    
    def get_queryset(self, request):
        return super().get_queryset(request).select_related('user', 'product', 'order')

@admin.register(Discount)
class DiscountAdmin(admin.ModelAdmin):
    list_display = [
        'code', 
        'description', 
        'discount_display',
        'uses_display', 
        'valid_period',
        'is_active'
    ]
    list_filter = ['discount_type', 'is_active', 'valid_from', 'valid_until']
    search_fields = ['code', 'description']
    readonly_fields = ['uses_count', 'created_at']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('code', 'description', 'is_active')
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–∏–¥–∫–∏', {
            'fields': ('discount_type', 'discount_value', 'min_amount')
        }),
        ('–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', {
            'fields': ('max_uses', 'uses_count', 'valid_from', 'valid_until')
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at',),
            'classes': ('collapse',)
        }),
    )
    
    def discount_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Å–∫–∏–¥–∫–∏"""
        if obj.discount_type == 'percentage':
            return f"{obj.discount_value}%"
        return f"{obj.discount_value}‚ÇΩ"
    discount_display.short_description = '–°–∫–∏–¥–∫–∞'
    
    def uses_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π"""
        if obj.max_uses:
            return f"{obj.uses_count}/{obj.max_uses}"
        return f"{obj.uses_count}/‚àû"
    uses_display.short_description = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π'
    
    def valid_period(self, obj):
        """–ü–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è"""
        return f"{obj.valid_from.strftime('%d.%m.%Y')} - {obj.valid_until.strftime('%d.%m.%Y')}"
    valid_period.short_description = '–ü–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è'

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
admin.site.site_header = '–ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'
