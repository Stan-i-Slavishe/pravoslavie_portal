from django.core.management.base import BaseCommand
from shop.models import Product

class Command(BaseCommand):
    help = '–£–¥–∞–ª—è–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞'

    def add_arguments(self, parser):
        parser.add_argument(
            '--delete',
            action='store_true',
            help='–ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–æ–ª—å–∫–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç)',
        )

    def handle(self, *args, **options):
        self.stdout.write("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞...")
        
        # –ù–∞–π–¥–µ–º –≤—Å–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        free_products = Product.objects.filter(price=0)
        
        self.stdout.write(f"üìä –ù–∞–π–¥–µ–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {free_products.count()}")
        
        if free_products.exists():
            for product in free_products:
                self.stdout.write(f"   - {product.title} (ID: {product.id}, —Ü–µ–Ω–∞: {product.price}‚ÇΩ)")
            
            if options['delete']:
                # –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ–º
                deleted_count = free_products.delete()[0]
                self.stdout.write(
                    self.style.SUCCESS(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {deleted_count}")
                )
            else:
                # –¢–æ–ª—å–∫–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º
                updated_count = free_products.update(is_active=False)
                self.stdout.write(
                    self.style.SUCCESS(f"‚úÖ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {updated_count}")
                )
        else:
            self.stdout.write(
                self.style.SUCCESS("‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            )
        
        # –ü–æ–∫–∞–∂–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.stdout.write("\nüìà –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        active_products = Product.objects.filter(is_active=True)
        paid_products = active_products.filter(price__gt=0)
        
        self.stdout.write(f"   –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {active_products.count()}")
        self.stdout.write(f"   –ü–ª–∞—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {paid_products.count()}")
        self.stdout.write(f"   –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö: {active_products.filter(price=0).count()}")
        
        if paid_products.exists():
            self.stdout.write("\nüí∞ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:")
            for product in paid_products:
                self.stdout.write(f"   - {product.title}: {product.price}‚ÇΩ")
        
        self.stdout.write(
            self.style.SUCCESS("\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        )
