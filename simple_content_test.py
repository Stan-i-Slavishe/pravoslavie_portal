#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–ª—è content
"""
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from books.models import Book

def simple_content_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–ª—è content"""
    
    print("üî¨ –ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–ª—è content")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–Ω–∏–≥—É "–í–µ–ª–∏–∫–∞—è –∫–Ω–∏–≥–∞"
        book = Book.objects.filter(title__icontains="–í–µ–ª–∏–∫–∞—è").first()
        
        if not book:
            print("‚ùå –ö–Ω–∏–≥–∞ '–í–µ–ª–∏–∫–∞—è –∫–Ω–∏–≥–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
            
        print(f"üìö –ö–Ω–∏–≥–∞ –Ω–∞–π–¥–µ–Ω–∞: {book.title}")
        print(f"   ID: {book.id}")
        print(f"   Slug: {book.slug}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç content
        try:
            content_value = book.content
            print(f"\nüìÑ –ü–æ–ª–µ content:")
            print(f"   –¢–∏–ø: {type(content_value)}")
            print(f"   –î–ª–∏–Ω–∞: {len(content_value) if content_value else 0}")
            print(f"   –ü—É—Å—Ç–æ–µ: {'–î–∞' if not content_value else '–ù–µ—Ç'}")
            
            if content_value:
                print(f"   –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {content_value[:100]}...")
            else:
                print(f"   ‚ùå –ü–û–õ–ï –ü–£–°–¢–û–ï!")
                
        except AttributeError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—é content: {e}")
            print("üéØ –ü–æ–ª–µ content –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –≤ –º–æ–¥–µ–ª–∏!")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º description –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        try:
            desc_value = book.description
            print(f"\nüìù –ü–æ–ª–µ description (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è):")
            print(f"   –î–ª–∏–Ω–∞: {len(desc_value) if desc_value else 0}")
            print(f"   –ü–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤: {desc_value[:50] if desc_value else '–ü–£–°–¢–û–ï'}...")
            
        except AttributeError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—é description: {e}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è –º–æ–¥–µ–ª–∏
        print(f"\nüîç –í—Å–µ –ø–æ–ª—è –º–æ–¥–µ–ª–∏ Book:")
        for field in Book._meta.fields:
            print(f"   - {field.name} ({field.__class__.__name__})")
            
        # –ü—Ä—è–º–æ–π SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print(f"\nüíæ –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        from django.db import connection
        
        with connection.cursor() as cursor:
            cursor.execute("SELECT content FROM books_book WHERE id = %s", [book.id])
            row = cursor.fetchone()
            
            if row:
                db_content = row[0]
                print(f"   Content –∏–∑ –ë–î: {len(db_content) if db_content else 0} —Å–∏–º–≤–æ–ª–æ–≤")
                if db_content:
                    print(f"   –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {db_content[:100]}...")
                else:
                    print(f"   ‚ùå –í –ë–î –ø–æ–ª–µ –ü–£–°–¢–û–ï!")
            else:
                print(f"   ‚ùå –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def test_template_rendering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞"""
    
    print(f"\nüé® –¢–µ—Å—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞")
    print("=" * 30)
    
    try:
        from django.template import Template, Context
        
        book = Book.objects.filter(title__icontains="–í–µ–ª–∏–∫–∞—è").first()
        
        # –¢–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω
        template_code = '''
Title: {{ book.title }}
Description exists: {% if book.description %}YES{% else %}NO{% endif %}
Content exists: {% if book.content %}YES{% else %}NO{% endif %}
Content length: {{ book.content|length }}
        '''
        
        template = Template(template_code)
        context = Context({'book': book})
        result = template.render(context)
        
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞:")
        print(result)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ: {e}")

if __name__ == "__main__":
    simple_content_test()
    test_template_rendering()
