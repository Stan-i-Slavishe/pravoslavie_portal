// –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∑–≤—ë–∑–¥ - —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ
document.addEventListener('DOMContentLoaded', function() {
    console.log('üåü Rating script loaded');
    
    const ratingInputs = document.querySelectorAll('.rating-input');
    console.log('Found rating inputs:', ratingInputs.length);
    
    ratingInputs.forEach(function(ratingContainer) {
        const stars = ratingContainer.querySelectorAll('.star-label');
        const inputs = ratingContainer.querySelectorAll('input[type="radio"]');
        
        console.log('Stars:', stars.length, 'Inputs:', inputs.length);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–µ–¥–µ–Ω–∏—è
        stars.forEach(function(star, index) {
            star.addEventListener('mouseenter', function() {
                // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∑–≤—ë–∑–¥—ã —Å–ª–µ–≤–∞ –¥–æ —Ç–µ–∫—É—â–µ–π –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
                const rating = index + 1;
                console.log('Hover on star', index + 1);
                highlightStars(stars, rating);
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            star.addEventListener('click', function() {
                const rating = index + 1;
                const targetInput = ratingContainer.querySelector(`input[value="${rating}"]`);
                console.log('Clicked star', rating, 'target input:', targetInput);
                
                if (targetInput) {
                    // –°–Ω–∏–º–∞–µ–º –≤—ã–±–æ—Ä —Å –¥—Ä—É–≥–∏—Ö
                    inputs.forEach(inp => inp.checked = false);
                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±–æ—Ä
                    targetInput.checked = true;
                    console.log('Set rating to:', rating);
                    highlightStars(stars, rating);
                }
            });
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Ö–æ–¥–∞ –º—ã—à–∏
        ratingContainer.addEventListener('mouseleave', function() {
            const checkedInput = ratingContainer.querySelector('input:checked');
            if (checkedInput) {
                const rating = parseInt(checkedInput.value);
                console.log('Mouse leave, restoring rating:', rating);
                highlightStars(stars, rating);
            } else {
                console.log('Mouse leave, no rating selected');
                clearStars(stars);
            }
        });
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
        const checkedInput = ratingContainer.querySelector('input:checked');
        if (checkedInput) {
            const rating = parseInt(checkedInput.value);
            console.log('Initial rating found:', rating);
            highlightStars(stars, rating);
        }
    });
    
    function highlightStars(stars, rating) {
        console.log('Highlighting', rating, 'stars out of', stars.length);
        clearStars(stars);
        
        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ rating –∑–≤—ë–∑–¥ (–≤–∫–ª—é—á–∞—è –≤—ã–±—Ä–∞–Ω–Ω—É—é)
        for (let i = 0; i < rating && i < stars.length; i++) {
            stars[i].classList.add('active');
            stars[i].style.setProperty('color', '#ffc107', 'important');
            console.log('Star', i + 1, 'highlighted');
        }
        
        // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–≤—ë–∑–¥—ã —Å–µ—Ä—ã–µ
        for (let i = rating; i < stars.length; i++) {
            stars[i].classList.remove('active');
            stars[i].style.setProperty('color', '#ddd', 'important');
            console.log('Star', i + 1, 'dimmed');
        }
    }
    
    function clearStars(stars) {
        stars.forEach(function(star, index) {
            star.classList.remove('active');
            star.style.setProperty('color', '#ddd', 'important');
        });
        console.log('All stars cleared');
    }
});
