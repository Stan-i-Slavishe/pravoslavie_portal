from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from stories.models import Story, Playlist, PlaylistItem
from django.utils.text import slugify


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã —Å –ø—Ä–µ–≤—å—é—à–∫–∞–º–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏'

    def handle(self, *args, **options):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user, created = User.objects.get_or_create(
                username='admin',
                defaults={
                    'email': 'admin@example.com',
                    'is_staff': True,
                    'is_superuser': True
                }
            )
            
            if created:
                user.set_password('admin123')
                user.save()
                self.stdout.write(f'–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}')
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–∞—Å—Å–∫–∞–∑—ã
            stories = Story.objects.filter(is_published=True)[:10]
            
            if not stories.exists():
                self.stdout.write(self.style.WARNING('–ù–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å–∫–∞–∑–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤'))
                return
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã
            playlists_data = [
                {
                    'title': '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∂–µ',
                    'description': '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –Ω–∞ –ø–æ—Ç–æ–º',
                    'playlist_type': 'private',
                    'stories': stories[:3]
                },
                {
                    'title': '–ì–∞—Ä–º–æ–Ω—å',
                    'description': '–†–∞—Å—Å–∫–∞–∑—ã –ø–æ–¥ –∞–∫–∫–æ–º–ø–∞–Ω–µ–º–µ–Ω—Ç –≥–∞—Ä–º–æ–Ω–∏',
                    'playlist_type': 'public',
                    'stories': stories[2:5]
                },
                {
                    'title': '–ö—É–∫—Ä–∏–Ω–∏–∫—Å—ã',
                    'description': '–í–µ—Å–µ–ª—ã–µ –∏ –ø–æ—É—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏',
                    'playlist_type': 'private',
                    'stories': stories[5:8]
                },
                {
                    'title': '–õ—é–±–∏–º—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã',
                    'description': '–ü–æ–¥–±–æ—Ä–∫–∞ —Å–∞–º—ã—Ö —Ç—Ä–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π',
                    'playlist_type': 'public',
                    'stories': stories[3:7]
                },
                {
                    'title': '–î–µ—Ç—Å–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏',
                    'description': '–†–∞—Å—Å–∫–∞–∑—ã –¥–ª—è —Å–∞–º—ã—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö',
                    'playlist_type': 'public',
                    'stories': stories[1:4]
                },
                {
                    'title': '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã',
                    'description': '–ò—Å—Ç–æ—Ä–∏–∏ –∫ –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–º –ø—Ä–∞–∑–¥–Ω–∏–∫–∞–º',
                    'playlist_type': 'private',
                    'stories': stories[6:9]
                }
            ]
            
            created_count = 0
            
            for playlist_data in playlists_data:
                # –°–æ–∑–¥–∞–µ–º —Å–ª–∞–≥
                base_slug = slugify(playlist_data['title'], allow_unicode=True)
                if not base_slug:
                    base_slug = 'playlist'
                
                slug = base_slug
                counter = 1
                while Playlist.objects.filter(slug=slug).exists():
                    slug = f"{base_slug}-{counter}"
                    counter += 1
                
                # –°–æ–∑–¥–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç
                playlist, created = Playlist.objects.get_or_create(
                    title=playlist_data['title'],
                    creator=user,
                    defaults={
                        'slug': slug,
                        'description': playlist_data['description'],
                        'playlist_type': playlist_data['playlist_type']
                    }
                )
                
                if created:
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Å–∫–∞–∑—ã –≤ –ø–ª–µ–π–ª–∏—Å—Ç
                    for order, story in enumerate(playlist_data['stories'], 1):
                        PlaylistItem.objects.create(
                            playlist=playlist,
                            story=story,
                            order=order
                        )
                    
                    created_count += 1
                    self.stdout.write(f'–°–æ–∑–¥–∞–Ω –ø–ª–µ–π–ª–∏—Å—Ç: "{playlist.title}" —Å {len(playlist_data["stories"])} —Ä–∞—Å—Å–∫–∞–∑–∞–º–∏')
                else:
                    self.stdout.write(f'–ü–ª–µ–π–ª–∏—Å—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: "{playlist.title}"')
            
            self.stdout.write(
                self.style.SUCCESS(f'–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ {created_count} –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤!')
            )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_playlists = Playlist.objects.filter(creator=user).count()
            total_public = Playlist.objects.filter(creator=user, playlist_type='public').count()
            total_private = Playlist.objects.filter(creator=user, playlist_type='private').count()
            
            self.stdout.write(f'\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}:')
            self.stdout.write(f'   –í—Å–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤: {total_playlists}')
            self.stdout.write(f'   –ü—É–±–ª–∏—á–Ω—ã—Ö: {total_public}')
            self.stdout.write(f'   –ü—Ä–∏–≤–∞—Ç–Ω—ã—Ö: {total_private}')
            
            self.stdout.write(f'\nüîó –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞: http://127.0.0.1:8000/stories/playlists/')
            self.stdout.write(f'   –í–æ–π–¥–∏—Ç–µ –∫–∞–∫: admin / admin123')
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤: {e}')
            )
