# Generated by Django 4.2.7 on 2025-07-03 01:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
        ('stories', '0003_add_playlist_models'),
    ]

    operations = [
        migrations.DeleteModel(
            name='SearchQuery',
        ),
        migrations.AlterUniqueTogether(
            name='storylike',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='storylike',
            name='story',
        ),
        migrations.RemoveField(
            model_name='storylike',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='userrecommendation',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='userrecommendation',
            name='story',
        ),
        migrations.RemoveField(
            model_name='userrecommendation',
            name='user',
        ),
        migrations.RemoveField(
            model_name='userwatchhistory',
            name='story',
        ),
        migrations.RemoveField(
            model_name='userwatchhistory',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='playlist',
            options={'ordering': ['-updated_at'], 'verbose_name': 'Плейлист', 'verbose_name_plural': 'Плейлисты'},
        ),
        migrations.AlterModelOptions(
            name='playlistitem',
            options={'ordering': ['order'], 'verbose_name': 'Элемент плейлиста', 'verbose_name_plural': 'Элементы плейлистов'},
        ),
        migrations.AlterModelOptions(
            name='storyrecommendation',
            options={'ordering': ['-score', '-created_at'], 'verbose_name': 'Рекомендация', 'verbose_name_plural': 'Рекомендации'},
        ),
        migrations.RemoveIndex(
            model_name='storyrecommendation',
            name='stories_sto_source__9352ed_idx',
        ),
        migrations.AlterUniqueTogether(
            name='storyrecommendation',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='story',
            name='duration',
        ),
        migrations.AddField(
            model_name='story',
            name='content',
            field=models.TextField(blank=True, verbose_name='Полный текст'),
        ),
        migrations.AddField(
            model_name='story',
            name='likes_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Лайки'),
        ),
        migrations.AddField(
            model_name='storyrecommendation',
            name='score',
            field=models.FloatField(default=0.0, verbose_name='Вес рекомендации'),
        ),
        migrations.AddField(
            model_name='storyrecommendation',
            name='story',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='recommendations_for', to='stories.story', verbose_name='Рассказ'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='playlist',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создан'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание плейлиста'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='playlist_type',
            field=models.CharField(choices=[('public', 'Публичный'), ('private', 'Приватный'), ('unlisted', 'По ссылке')], default='private', max_length=20, verbose_name='Тип плейлиста'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='slug',
            field=models.SlugField(max_length=255, verbose_name='URL-адрес'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлен'),
        ),
        migrations.AlterField(
            model_name='playlist',
            name='views_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Количество просмотров'),
        ),
        migrations.AlterField(
            model_name='playlistitem',
            name='added_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Добавлен'),
        ),
        migrations.AlterField(
            model_name='playlistitem',
            name='order',
            field=models.PositiveIntegerField(default=1, verbose_name='Порядок'),
        ),
        migrations.AlterField(
            model_name='story',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stories', to='core.category', verbose_name='Категория'),
        ),
        migrations.AlterField(
            model_name='story',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создан'),
        ),
        migrations.AlterField(
            model_name='story',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='story',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Рекомендуемый'),
        ),
        migrations.AlterField(
            model_name='story',
            name='slug',
            field=models.SlugField(max_length=255, unique=True, verbose_name='URL-адрес'),
        ),
        migrations.AlterField(
            model_name='story',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='stories', to='core.tag', verbose_name='Теги'),
        ),
        migrations.AlterField(
            model_name='story',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Заголовок'),
        ),
        migrations.AlterField(
            model_name='story',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлен'),
        ),
        migrations.AlterField(
            model_name='story',
            name='views_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Просмотры'),
        ),
        migrations.AlterField(
            model_name='story',
            name='youtube_embed_id',
            field=models.CharField(blank=True, max_length=50, verbose_name='YouTube ID'),
        ),
        migrations.AlterField(
            model_name='story',
            name='youtube_url',
            field=models.URLField(blank=True, verbose_name='YouTube URL'),
        ),
        migrations.AlterField(
            model_name='storyrecommendation',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создана'),
        ),
        migrations.AlterField(
            model_name='storyrecommendation',
            name='recommendation_type',
            field=models.CharField(choices=[('tag_based', 'По тегам'), ('category_based', 'По категории'), ('user_based', 'Пользовательские'), ('popular', 'Популярные')], max_length=20, verbose_name='Тип рекомендации'),
        ),
        migrations.AlterField(
            model_name='storyrecommendation',
            name='recommended_story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_in', to='stories.story', verbose_name='Рекомендуемый рассказ'),
        ),
        migrations.AlterUniqueTogether(
            name='playlist',
            unique_together={('creator', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='storyrecommendation',
            unique_together={('story', 'recommended_story')},
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['creator', '-updated_at'], name='stories_pla_creator_0f3ab6_idx'),
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['playlist_type', '-created_at'], name='stories_pla_playlis_4a6e78_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['-created_at'], name='stories_sto_created_afacec_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['is_published', '-created_at'], name='stories_sto_is_publ_d6a0a0_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['category', '-created_at'], name='stories_sto_categor_ede9c3_idx'),
        ),
        migrations.AddIndex(
            model_name='storyrecommendation',
            index=models.Index(fields=['story', '-score'], name='stories_sto_story_i_44e4ea_idx'),
        ),
        migrations.DeleteModel(
            name='StoryLike',
        ),
        migrations.DeleteModel(
            name='UserRecommendation',
        ),
        migrations.DeleteModel(
            name='UserWatchHistory',
        ),
        migrations.RemoveField(
            model_name='playlist',
            name='cover_image',
        ),
        migrations.RemoveField(
            model_name='playlist',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='playlist',
            name='stories',
        ),
        migrations.RemoveField(
            model_name='storyrecommendation',
            name='similarity_score',
        ),
        migrations.RemoveField(
            model_name='storyrecommendation',
            name='source_story',
        ),
    ]
