// –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô JAVASCRIPT –î–õ–Ø –ü–õ–ï–ô–õ–ò–°–¢–û–í
// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ story_detail.html –≤ —Å–µ–∫—Ü–∏—é <script>

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
let currentStoryId = {{ story.id }};
let userPlaylists = [];

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserPlaylists() {
    try {
        console.log('üéµ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        // –ü–æ–∫–∞ —Å–¥–µ–ª–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ API –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–¥–∏–º –∏–∑ Django
        // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        userPlaylists = [
            { id: 1, title: '–ë–æ—Ä–æ–¥a', stories_count: 3 },
            { id: 2, title: '–®–∫–æ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏', stories_count: 2 }
        ];
        
        console.log('‚úÖ –ü–ª–µ–π–ª–∏—Å—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', userPlaylists);
        updatePlaylistUI();
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤:', error);
        showToast('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤', 'error');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
function updatePlaylistUI() {
    const playlistContainer = document.getElementById('playlistContainer');
    if (!playlistContainer) {
        console.log('‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    let playlistHTML = '';
    
    if (userPlaylists.length > 0) {
        userPlaylists.forEach(playlist => {
            playlistHTML += `
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" 
                           id="playlist_${playlist.id}" 
                           data-playlist-id="${playlist.id}"
                           onchange="togglePlaylistItem(${playlist.id})">
                    <label class="form-check-label" for="playlist_${playlist.id}">
                        ${playlist.title} (${playlist.stories_count} —Ä–∞—Å—Å–∫–∞–∑–æ–≤)
                    </label>
                </div>
            `;
        });
    } else {
        playlistHTML = '<p class="text-muted">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤</p>';
    }
    
    playlistContainer.innerHTML = playlistHTML;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞
async function togglePlaylistItem(playlistId) {
    const checkbox = document.getElementById(`playlist_${playlistId}`);
    const isChecked = checkbox.checked;
    
    console.log(`üìù ${isChecked ? '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤' : '–£–¥–∞–ª–µ–Ω–∏–µ –∏–∑'} –ø–ª–µ–π–ª–∏—Å—Ç ${playlistId}`);
    
    try {
        const csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value;
        const url = isChecked ? '/stories/playlist/add-story/' : '/stories/playlist/remove-story/';
        
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'X-CSRFToken': csrfToken,
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                story_id: currentStoryId,
                playlist_id: playlistId
            })
        });
        
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText);
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Content-Type
        const contentType = response.headers.get('content-type');
        console.log('üìÑ Content-Type:', contentType);
        
        let data;
        if (contentType && contentType.includes('application/json')) {
            data = await response.json();
        } else {
            const text = await response.text();
            console.log('üìù –û—Ç–≤–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç:', text.substring(0, 200));
            throw new Error('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª HTML –≤–º–µ—Å—Ç–æ JSON');
        }
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
        
        if (data.success) {
            showToast(data.message || '–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ', 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ UI
            const label = document.querySelector(`label[for="playlist_${playlistId}"]`);
            if (label) {
                const playlist = userPlaylists.find(p => p.id === playlistId);
                if (playlist) {
                    playlist.stories_count += isChecked ? 1 : -1;
                    label.textContent = `${playlist.title} (${playlist.stories_count} —Ä–∞—Å—Å–∫–∞–∑–æ–≤)`;
                }
            }
        } else {
            throw new Error(data.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞:', error);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º checkbox –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        checkbox.checked = !isChecked;
        
        showToast(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞', 'error');
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞
async function createNewPlaylist() {
    const playlistName = document.getElementById('newPlaylistName').value.trim();
    const isPublic = document.getElementById('newPlaylistPublic').checked;
    
    if (!playlistName) {
        showToast('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞', 'error');
        return;
    }
    
    console.log('üÜï –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞:', playlistName);
    
    try {
        const csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value;
        
        const response = await fetch('/stories/playlist/create/', {
            method: 'POST',
            headers: {
                'X-CSRFToken': csrfToken,
                'X-Requested-With': 'XMLHttpRequest',
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({
                'name': playlistName,
                'is_public': isPublic ? 'on' : ''
            })
        });
        
        console.log('üì° –û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞:', response.status);
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}`);
        }
        
        const contentType = response.headers.get('content-type');
        let data;
        
        if (contentType && contentType.includes('application/json')) {
            data = await response.json();
        } else {
            // –ï—Å–ª–∏ –≤–µ—Ä–Ω—É–ª—Å—è HTML, –∑–Ω–∞—á–∏—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç - —ç—Ç–æ —É—Å–ø–µ—Ö
            data = { success: true, message: `–ü–ª–µ–π–ª–∏—Å—Ç "${playlistName}" —Å–æ–∑–¥–∞–Ω` };
        }
        
        if (data.success) {
            showToast(data.message, 'success');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–ª–µ–π–ª–∏—Å—Ç –≤ —Å–ø–∏—Å–æ–∫
            const newPlaylist = {
                id: data.playlist_id || Date.now(), // –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID
                title: playlistName,
                stories_count: 0
            };
            userPlaylists.push(newPlaylist);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            updatePlaylistUI();
            
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            document.getElementById('newPlaylistName').value = '';
            document.getElementById('newPlaylistPublic').checked = false;
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
            const modal = bootstrap.Modal.getInstance(document.getElementById('playlistModal'));
            if (modal) {
                modal.hide();
            }
        } else {
            throw new Error(data.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞:', error);
        showToast(error.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞', 'error');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üéµ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    {% if user.is_authenticated %}
        loadUserPlaylists();
    {% endif %}
});

// –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
function togglePlaylistModal() {
    const modal = new bootstrap.Modal(document.getElementById('playlistModal'));
    modal.show();
}

console.log('‚úÖ JavaScript –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω');
