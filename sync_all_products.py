#!/usr/bin/env python
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –í–°–ï–• –ø–ª–∞—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–∞–≥–∞–∑–∏–Ω–æ–º

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
1. –ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤–æ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
2. –°–æ–∑–¥–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
BASE_DIR = Path(__file__).parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
    
    from books.models import Book
    from audio.models import AudioTrack
    from subscriptions.models import Subscription
    from fairy_tales.models import FairyTale
    from shop.models import Product
    
    print("üè™ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –í–°–ï–• –ü–õ–ê–¢–ù–´–• –¢–û–í–ê–†–û–í –° –ú–ê–ì–ê–ó–ò–ù–û–ú")
    print("=" * 60)
    
    created_total = 0
    updated_total = 0
    
    # ========== 1. –ü–õ–ê–¢–ù–´–ï –ö–ù–ò–ì–ò ==========
    print("\nüìö –û–ë–†–ê–ë–û–¢–ö–ê –ü–õ–ê–¢–ù–´–• –ö–ù–ò–ì:")
    print("-" * 40)
    
    paid_books = Book.objects.filter(price__gt=0)
    print(f"–ù–∞–π–¥–µ–Ω–æ –ø–ª–∞—Ç–Ω—ã—Ö –∫–Ω–∏–≥: {paid_books.count()}")
    
    for book in paid_books:
        product, created = Product.objects.get_or_create(
            product_type='book',
            book_id=book.id,
            defaults={
                'title': book.title,
                'description': book.description or f"–î—É—Ö–æ–≤–Ω–∞—è –∫–Ω–∏–≥–∞ '{book.title}' - –ø–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä –≤–µ—Ä—ã –∏ –º—É–¥—Ä–æ—Å—Ç–∏.",
                'price': book.price,
                'is_active': True,
                'is_digital': True,
                'image': getattr(book, 'cover_image', None),
            }
        )
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–Ω–∏–≥–∞: {product.title} - {product.price}‚ÇΩ")
            created_total += 1
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–≤–∞—Ä
            updated = False
            if product.title != book.title:
                product.title = book.title
                updated = True
            if product.price != book.price:
                product.price = book.price
                updated = True
            if not product.is_active:
                product.is_active = True
                updated = True
                
            if updated:
                product.save()
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: {product.title} - {product.price}‚ÇΩ")
                updated_total += 1
            else:
                print(f"‚úì –ö–Ω–∏–≥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞: {product.title}")
    
    # ========== 2. –ü–õ–ê–¢–ù–´–ï –ê–£–î–ò–û ==========
    print("\nüéµ –û–ë–†–ê–ë–û–¢–ö–ê –ü–õ–ê–¢–ù–´–• –ê–£–î–ò–û:")
    print("-" * 40)
    
    try:
        paid_audio = AudioTrack.objects.filter(price__gt=0)
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–ª–∞—Ç–Ω—ã—Ö –∞—É–¥–∏–æ: {paid_audio.count()}")
        
        for audio in paid_audio:
            product, created = Product.objects.get_or_create(
                product_type='audio',
                audio_id=audio.id,
                defaults={
                    'title': audio.title,
                    'description': audio.description or f"–î—É—Ö–æ–≤–Ω–æ–µ –∞—É–¥–∏–æ '{audio.title}' - —Å–ª—É—à–∞–π—Ç–µ –∏ —Ä–∞–∑–º—ã—à–ª—è–π—Ç–µ.",
                    'price': audio.price,
                    'is_active': True,
                    'is_digital': True,
                    'image': getattr(audio, 'cover_image', None),
                }
            )
            
            if created:
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∞—É–¥–∏–æ: {product.title} - {product.price}‚ÇΩ")
                created_total += 1
            else:
                print(f"‚úì –ê—É–¥–∏–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ: {product.title}")
                
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ: {e}")
    
    # ========== 3. –ü–õ–ê–¢–ù–´–ï –ü–û–î–ü–ò–°–ö–ò ==========
    print("\nüí≥ –û–ë–†–ê–ë–û–¢–ö–ê –ü–û–î–ü–ò–°–û–ö:")
    print("-" * 40)
    
    try:
        subscriptions = Subscription.objects.filter(price__gt=0)
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫: {subscriptions.count()}")
        
        for subscription in subscriptions:
            product, created = Product.objects.get_or_create(
                product_type='subscription',
                subscription_id=subscription.id,
                defaults={
                    'title': subscription.name,
                    'description': subscription.description or f"–ü–æ–¥–ø–∏—Å–∫–∞ '{subscription.name}' - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É.",
                    'price': subscription.price,
                    'is_active': True,
                    'is_digital': True,
                }
            )
            
            if created:
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞: {product.title} - {product.price}‚ÇΩ")
                created_total += 1
            else:
                print(f"‚úì –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞: {product.title}")
                
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥–ø–∏—Å–æ–∫: {e}")
    
    # ========== 4. –¢–ï–†–ê–ü–ï–í–¢–ò–ß–ï–°–ö–ò–ï –°–ö–ê–ó–ö–ò ==========
    print("\nüßö –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–†–ê–ü–ï–í–¢–ò–ß–ï–°–ö–ò–• –°–ö–ê–ó–û–ö:")
    print("-" * 40)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∫–∞–∑–æ–∫
        fairy_tale_products = [
            {
                'title': '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∞–∑–∫–∞ "–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤"',
                'description': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∞—è —Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–º–æ—â–∏ —Ä–µ–±–µ–Ω–∫—É –≤ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞—Ö–æ–≤. –£—á–∏—Ç—ã–≤–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç, –∏–º—è –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞.',
                'price': 500,
                'fairy_tale_template_id': 1,
            },
            {
                'title': '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∞–∑–∫–∞ "–ü–æ–≤—ã—à–µ–Ω–∏–µ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏"',
                'description': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å–∫–∞–∑–∫–∞ –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ. –°–æ–∑–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ —Å –∏–º–µ–Ω–µ–º –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏ –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞.',
                'price': 500,
                'fairy_tale_template_id': 2,
            },
            {
                'title': '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∞–∑–∫–∞ "–î—Ä—É–∂–±–∞ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"',
                'description': '–¢–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∞—è —Å–∫–∞–∑–∫–∞ –æ –¥—Ä—É–∂–±–µ –∏ –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥ –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞.',
                'price': 450,
                'fairy_tale_template_id': 3,
            },
        ]
        
        for fairy_data in fairy_tale_products:
            product, created = Product.objects.get_or_create(
                product_type='fairy_tale',
                fairy_tale_template_id=fairy_data['fairy_tale_template_id'],
                defaults={
                    'title': fairy_data['title'],
                    'description': fairy_data['description'],
                    'price': fairy_data['price'],
                    'is_active': True,
                    'is_digital': True,
                    'requires_personalization': True,
                    'has_audio_option': True,
                    'audio_option_price': 200,
                    'has_illustration_option': True,
                    'illustration_option_price': 300,
                }
            )
            
            if created:
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–∫–∞–∑–∫–∞: {product.title} - {product.price}‚ÇΩ")
                created_total += 1
            else:
                print(f"‚úì –°–∫–∞–∑–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞: {product.title}")
                
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–∫–∞–∑–æ–∫: {e}")
    
    # ========== 5. –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ==========
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("=" * 60)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {created_total}")
    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {updated_total}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ
    print(f"\nüõí –í–°–ï –¢–û–í–ê–†–´ –í –ú–ê–ì–ê–ó–ò–ù–ï:")
    print("-" * 40)
    
    all_products = Product.objects.filter(is_active=True).order_by('product_type', 'title')
    
    by_type = {}
    for product in all_products:
        product_type = product.get_product_type_display()
        if product_type not in by_type:
            by_type[product_type] = []
        by_type[product_type].append(product)
    
    total_products = 0
    for product_type, products in by_type.items():
        print(f"\nüì¶ {product_type.upper()} ({len(products)} —Ç–æ–≤–∞—Ä–æ–≤):")
        for product in products:
            print(f"   ‚Ä¢ {product.title} - {product.price}‚ÇΩ")
            total_products += 1
    
    print(f"\nüéâ –í–°–ï–ì–û –í –ú–ê–ì–ê–ó–ò–ù–ï: {total_products} —Ç–æ–≤–∞—Ä–æ–≤")
    print(f"üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {all_products.aggregate(avg_price=django.db.models.Avg('price'))['avg_price']:.2f}‚ÇΩ")
    
    # ========== 6. –°–û–ó–î–ê–ù–ò–ï –°–ò–ì–ù–ê–õ–û–í –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò ==========
    print(f"\nüîß –°–û–ó–î–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò...")
    
    signals_code = '''# shop/signals.py - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤

from django.db.models.signals import post_save, post_delete
from django.dispatch import receiver
from books.models import Book
from .models import Product

@receiver(post_save, sender=Book)
def sync_book_with_shop(sender, instance, created, **kwargs):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç/–æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏"""
    if instance.price > 0:  # –¢–æ–ª—å–∫–æ –¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö –∫–Ω–∏–≥
        product, product_created = Product.objects.get_or_create(
            product_type='book',
            book_id=instance.id,
            defaults={
                'title': instance.title,
                'description': instance.description or f"–î—É—Ö–æ–≤–Ω–∞—è –∫–Ω–∏–≥–∞ '{instance.title}'",
                'price': instance.price,
                'is_active': True,
                'is_digital': True,
                'image': getattr(instance, 'cover_image', None),
            }
        )
        
        if not product_created:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–≤–∞—Ä
            product.title = instance.title
            product.description = instance.description or f"–î—É—Ö–æ–≤–Ω–∞—è –∫–Ω–∏–≥–∞ '{instance.title}'"
            product.price = instance.price
            product.is_active = True
            product.save()
    else:
        # –ï—Å–ª–∏ –∫–Ω–∏–≥–∞ —Å—Ç–∞–ª–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π, –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä
        Product.objects.filter(
            product_type='book',
            book_id=instance.id
        ).update(is_active=False)

@receiver(post_delete, sender=Book)
def remove_book_from_shop(sender, instance, **kwargs):
    """–£–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏"""
    Product.objects.filter(
        product_type='book',
        book_id=instance.id
    ).delete()

# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–ª—è –∞—É–¥–∏–æ, –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –¥—Ä—É–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
'''
    
    signals_file = Path('shop/signals.py')
    with open(signals_file, 'w', encoding='utf-8') as f:
        f.write(signals_code)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {signals_file}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º apps.py –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤
    apps_code = '''from django.apps import AppConfig

class ShopConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'shop'
    
    def ready(self):
        import shop.signals  # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
'''
    
    apps_file = Path('shop/apps.py')
    with open(apps_file, 'w', encoding='utf-8') as f:
        f.write(apps_code)
    
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª: {apps_file}")
    
    print(f"\nüéâ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 60)
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    print("üõí –¢–µ–ø–µ—Ä—å –≤—Å–µ –ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –º–∞–≥–∞–∑–∏–Ω!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
