#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ–±–ª–æ–∂–µ–∫ –∫–Ω–∏–≥ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
BASE_DIR = Path(__file__).parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
    
    from books.models import Book
    from shop.models import Product
    
    print("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ–±–ª–æ–∂–µ–∫ –∫–Ω–∏–≥ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Ç–∏–ø–∞ 'book'
    book_products = Product.objects.filter(product_type='book')
    
    updated_count = 0
    error_count = 0
    
    for product in book_products:
        try:
            # –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–∏–≥—É
            book = Book.objects.get(id=product.book_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±–ª–æ–∂–∫–∞ —É –∫–Ω–∏–≥–∏
            if book.cover:
                # –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
                if not product.image or product.image != book.cover:
                    product.image = book.cover
                    product.save()
                    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –æ–±–ª–æ–∂–∫–∞ –¥–ª—è: {product.title}")
                    updated_count += 1
                else:
                    print(f"‚úì –û–±–ª–æ–∂–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞: {product.title}")
            else:
                if product.image:
                    print(f"‚ö†Ô∏è –£ –∫–Ω–∏–≥–∏ –Ω–µ—Ç –æ–±–ª–æ–∂–∫–∏, –Ω–æ —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {product.title}")
                else:
                    print(f"‚ö†Ô∏è –£ –∫–Ω–∏–≥–∏ –∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {product.title}")
                    
        except Book.DoesNotExist:
            print(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {product.book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: {product.title}")
            error_count += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–æ–≤–∞—Ä–∞ {product.title}: {e}")
            error_count += 1
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–±–ª–æ–∂–µ–∫: {updated_count}")
    print(f"   –û—à–∏–±–æ–∫: {error_count}")
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –∫–Ω–∏–≥: {book_products.count()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–ª–æ–∂–µ–∫
    print(f"\nüñºÔ∏è –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ë–õ–û–ñ–ï–ö:")
    with_covers = book_products.filter(image__isnull=False).count()
    without_covers = book_products.filter(image__isnull=True).count()
    
    print(f"   –° –æ–±–ª–æ–∂–∫–∞–º–∏: {with_covers}")
    print(f"   –ë–µ–∑ –æ–±–ª–æ–∂–µ–∫: {without_covers}")
    
    if without_covers > 0:
        print(f"\nüìù –¢–û–í–ê–†–´ –ë–ï–ó –û–ë–õ–û–ñ–ï–ö:")
        for product in book_products.filter(image__isnull=True):
            try:
                book = Book.objects.get(id=product.book_id)
                print(f"   üìñ {product.title} (–∫–Ω–∏–≥–∞ –æ–±–ª–æ–∂–∫–∞: {'–µ—Å—Ç—å' if book.cover else '–Ω–µ—Ç'})")
            except Book.DoesNotExist:
                print(f"   üìñ {product.title} (–∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)")
    
    print(f"\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
