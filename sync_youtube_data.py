#!/usr/bin/env python3
"""
–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è YouTube –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–∞—Å—Å–∫–∞–∑–∞—Ö
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from stories.models import Story
import re

def extract_youtube_id(url):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç YouTube ID –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ URL"""
    if not url:
        return ''
        
    patterns = [
        r'(?:https?://)?(?:www\.)?youtube\.com/watch\?v=([^&\n?#]+)',
        r'(?:https?://)?(?:www\.)?youtube\.com/embed/([^&\n?#]+)',
        r'(?:https?://)?(?:www\.)?youtu\.be/([^&\n?#]+)',
        r'(?:https?://)?(?:www\.)?youtube\.com/v/([^&\n?#]+)',
    ]
    
    for pattern in patterns:
        match = re.search(pattern, url)
        if match:
            return match.group(1)
    return ''

def sync_youtube_data():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º YouTube –¥–∞–Ω–Ω—ã–µ"""
    
    print("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è YouTube –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    stories = Story.objects.all()
    updated_count = 0
    
    for story in stories:
        original_id = story.youtube_embed_id
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ URL, –µ—Å–ª–∏ ID –ø—É—Å—Ç–æ–π –∏–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
        if story.youtube_url and not story.youtube_embed_id:
            extracted_id = extract_youtube_id(story.youtube_url)
            if extracted_id:
                story.youtube_embed_id = extracted_id
                story.save(update_fields=['youtube_embed_id'])
                updated_count += 1
                print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {story.title}: ID = {extracted_id}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∏–∑ {story.youtube_url}")
        elif story.youtube_embed_id:
            print(f"‚ÑπÔ∏è  {story.title}: ID —É–∂–µ –µ—Å—Ç—å = {story.youtube_embed_id}")
        else:
            print(f"‚ö†Ô∏è  {story.title}: –ù–µ—Ç YouTube URL")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞:")
    try:
        story = Story.objects.get(slug='kak-svyatoj-luka-doch-spas')
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {story.title}")
        print(f"   YouTube URL: {story.youtube_url}")
        print(f"   YouTube ID: {story.youtube_embed_id}")
        
        if story.youtube_url and not story.youtube_embed_id:
            extracted_id = extract_youtube_id(story.youtube_url)
            if extracted_id:
                story.youtube_embed_id = extracted_id
                story.save(update_fields=['youtube_embed_id'])
                print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ! –ù–æ–≤—ã–π ID: {extracted_id}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∏–∑ URL")
        elif story.youtube_embed_id:
            print(f"   ‚úÖ ID —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: {story.youtube_embed_id}")
        else:
            print(f"   ‚ùå –ù–µ—Ç YouTube –¥–∞–Ω–Ω—ã—Ö")
            
    except Story.DoesNotExist:
        print(f"   ‚ùå –†–∞—Å—Å–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω!")

if __name__ == "__main__":
    try:
        sync_youtube_data()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
