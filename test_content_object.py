#!/usr/bin/env python
"""
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ: –æ–±–Ω–æ–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–ª–æ–∂–∫–∏ —á–µ—Ä–µ–∑ content_object
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
BASE_DIR = Path(__file__).parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
    
    from books.models import Book
    from shop.models import Product
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–í–Ø–ó–ï–ô –ú–ï–ñ–î–£ –ö–ù–ò–ì–ê–ú–ò –ò –¢–û–í–ê–†–ê–ú–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–Ω–∏–≥—É "–ö–Ω–∏–≥–∞ –≤–µ—Å–Ω–∞"
    book_vesna = Book.objects.filter(title__icontains='–≤–µ—Å–Ω–∞').first()
    if book_vesna:
        print(f"\nüìñ –ö–ù–ò–ì–ê: {book_vesna.title}")
        print(f"   ID: {book_vesna.id}")
        print(f"   –û–±–ª–æ–∂–∫–∞: {book_vesna.cover}")
        print(f"   –ü—É—Ç—å –æ–±–ª–æ–∂–∫–∏: {book_vesna.cover.url if book_vesna.cover else '–ù–ï–¢'}")
        
        # –ò—â–µ–º —Ç–æ–≤–∞—Ä
        product = Product.objects.filter(product_type='book', book_id=book_vesna.id).first()
        if product:
            print(f"\nüõçÔ∏è –¢–û–í–ê–† –í –ú–ê–ì–ê–ó–ò–ù–ï:")
            print(f"   ID: {product.id}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {product.title}")
            print(f"   Product.image: {product.image}")
            print(f"   Product.image.url: {product.image.url if product.image else '–ù–ï–¢'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º content_object
            content_obj = product.content_object
            print(f"\nüîó CONTENT_OBJECT:")
            print(f"   Content object: {content_obj}")
            if content_obj:
                print(f"   Content object type: {type(content_obj)}")
                print(f"   Content object cover: {content_obj.cover if hasattr(content_obj, 'cover') else '–ù–ï–¢ –ê–¢–†–ò–ë–£–¢–ê'}")
                if hasattr(content_obj, 'cover') and content_obj.cover:
                    print(f"   Content object cover URL: {content_obj.cover.url}")
            
        else:
            print(f"\n‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–µ–º...")
            product = Product.objects.create(
                title=book_vesna.title,
                description=book_vesna.description,
                price=book_vesna.price,
                product_type='book',
                book_id=book_vesna.id,
                image=book_vesna.cover,  # –ö–æ–ø–∏—Ä—É–µ–º –æ–±–ª–æ–∂–∫—É
                is_active=True,
                is_digital=True,
            )
            print(f"   ‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω: {product.title}")
    
    else:
        print("‚ùå –ö–Ω–∏–≥–∞ '–≤–µ—Å–Ω–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        # –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥
        print(f"\nüìö –ü–ï–†–í–´–ï 5 –ö–ù–ò–ì:")
        for book in Book.objects.all()[:5]:
            print(f"   üìñ {book.title} - –æ–±–ª–æ–∂–∫–∞: {'–µ—Å—Ç—å' if book.cover else '–ù–ï–¢'}")
    
    print(f"\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –í—Å–µ–≥–æ –∫–Ω–∏–≥: {Book.objects.count()}")
    print(f"   –ö–Ω–∏–≥ —Å –æ–±–ª–æ–∂–∫–∞–º–∏: {Book.objects.filter(cover__isnull=False).count()}")
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤-–∫–Ω–∏–≥: {Product.objects.filter(product_type='book').count()}")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {Product.objects.filter(product_type='book', image__isnull=False).count()}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
