#!/usr/bin/env python
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Google OAuth
"""
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.sites.models import Site
from allauth.socialaccount.models import SocialApp
from allauth.socialaccount.providers.google.provider import GoogleProvider

def test_google_oauth_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ Google OAuth –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Google OAuth")
    print("=" * 50)
    
    success = True
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞
    print("üìç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞...")
    try:
        site = Site.objects.get(pk=1)
        print(f"   ‚úÖ –°–∞–π—Ç –Ω–∞–π–¥–µ–Ω: {site.domain}")
    except Site.DoesNotExist:
        print("   ‚ùå –°–∞–π—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        success = False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("\nüîê –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Google OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    try:
        google_apps = SocialApp.objects.filter(provider=GoogleProvider.id)
        if google_apps.exists():
            google_app = google_apps.first()
            print(f"   ‚úÖ Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: {google_app.name}")
            print(f"      Client ID: {google_app.client_id[:20]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤—è–∑–∫—É –∫ —Å–∞–π—Ç—É
            if google_app.sites.filter(pk=1).exists():
                print("   ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Å–∞–π—Ç—É")
            else:
                print("   ‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ —Å–∞–π—Ç—É!")
                success = False
                
        else:
            print("   ‚ùå Google –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            success = False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        success = False
    
    # –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ OAuth
    print("\nüåê –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ OAuth –∑–∞–ø—Ä–æ—Å–∞...")
    try:
        from allauth.socialaccount.adapter import get_adapter
        from django.http import HttpRequest
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        request = HttpRequest()
        request.META['HTTP_HOST'] = '127.0.0.1:8000'
        request.META['SERVER_NAME'] = '127.0.0.1'
        request.META['SERVER_PORT'] = '8000'
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å Google provider
        adapter = get_adapter(request)
        provider = adapter.get_provider(request, provider=GoogleProvider.id)
        
        print(f"   ‚úÖ Google provider –ø–æ–ª—É—á–µ–Ω: {provider}")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ provider: {e}")
        success = False
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ Google OAuth –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("\nüöÄ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
        print("   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: http://127.0.0.1:8000/accounts/google/login/")
        print("   3. –û—à–∏–±–∫–∞ DoesNotExist –¥–æ–ª–∂–Ω–∞ –∏—Å—á–µ–∑–Ω—É—Ç—å")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!")
        print("üõ†Ô∏è  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å fix_google_oauth_complete.py –µ—â–µ —Ä–∞–∑")
    
    print("=" * 50)
    
    return success

if __name__ == "__main__":
    try:
        test_google_oauth_fix()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
