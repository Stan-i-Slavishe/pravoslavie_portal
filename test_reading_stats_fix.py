# test_reading_stats_fix.py
# –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ reading_stats

import os
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.test import RequestFactory
from django.contrib.auth.models import User
from books.views import reading_stats
from books.models import ReadingSession, Book

def test_reading_stats():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é reading_stats"""
    
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø READING_STATS")
    print("=" * 45)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user, created = User.objects.get_or_create(
            username='test_reading_user',
            defaults={'email': 'test@example.com'}
        )
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        else:
            print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username}")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–±—Ä–∏–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤
        factory = RequestFactory()
        request = factory.get('/books/reading-stats/')
        request.user = user
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é reading_stats
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é reading_stats...")
        
        response = reading_stats(request)
        
        print(f"‚úÖ –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"   –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: {type(response).__name__}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ —ç—Ç–æ TemplateResponse)
        if hasattr(response, 'context_data'):
            context = response.context_data
            print(f"   –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç: {list(context.keys())}")
        
        print("\nüéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        print("\n–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
        import traceback
        traceback.print_exc()
        return False

def test_extract_function():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É Extract —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–¥–µ–ª—å–Ω–æ"""
    
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï EXTRACT –§–£–ù–ö–¶–ò–ò")
    print("=" * 35)
    
    try:
        from django.db.models.functions import Extract
        from books.models import ReadingSession
        from django.db.models import Count
        
        # –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å Extract
        queryset = ReadingSession.objects.annotate(
            month=Extract('last_read', 'month')
        ).values('month').annotate(
            count=Count('id')
        )
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å
        result = list(queryset)
        
        print(f"‚úÖ Extract —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ Extract: {e}")
        return False

if __name__ == '__main__':
    success1 = test_extract_function()
    success2 = test_reading_stats()
    
    if success1 and success2:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("–û—à–∏–±–∫–∞ –≤ /books/reading-stats/ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤—ã—à–µ.")
