#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö URLs –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
import sys
import django
from django.core.management import execute_from_command_line

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.test import Client
from django.contrib.auth import get_user_model
from django.urls import reverse
import json

def test_urls():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ URL"""
    client = Client()
    User = get_user_model()
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö URLs...")
    
    # –¢–µ—Å—Ç 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
    try:
        response = client.get('/')
        print(f"‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
    
    # –¢–µ—Å—Ç 2: –ö–æ—Ä–∑–∏–Ω–∞ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    try:
        response = client.get('/shop/cart/count/')
        print(f"‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π): {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –î–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã: {data}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    try:
        user, created = User.objects.get_or_create(
            username='test_user',
            defaults={'email': 'test@example.com'}
        )
        if created:
            user.set_password('testpass123')
            user.save()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} ({'—Å–æ–∑–¥–∞–Ω' if created else '—Å—É—â–µ—Å—Ç–≤—É–µ—Ç'})")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return
    
    # –¢–µ—Å—Ç 4: –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
    print("\n4Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è...")
    try:
        client.force_login(user)
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –¢–µ—Å—Ç 5: –ö–æ—Ä–∑–∏–Ω–∞ (—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...")
    try:
        response = client.get('/shop/cart/count/')
        print(f"‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ (–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π): {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –î–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã: {data}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
    
    # –¢–µ—Å—Ç 6: –ü–ª–µ–π–ª–∏—Å—Ç—ã
    print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–µ–π–ª–∏—Å—Ç—ã...")
    try:
        response = client.post(
            '/stories/playlists/for-save/',
            data=json.dumps({'story_id': 1}),
            content_type='application/json',
            HTTP_X_REQUESTED_WITH='XMLHttpRequest'
        )
        print(f"‚úÖ –ü–ª–µ–π–ª–∏—Å—Ç—ã: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –î–∞–Ω–Ω—ã–µ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤: {data}")
        elif response.status_code == 404:
            print("üìù –†–∞—Å—Å–∫–∞–∑ —Å ID=1 –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
        elif response.status_code >= 500:
            print(f"üîß –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.content.decode()[:200]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤: {e}")
    
    # –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
    print("\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏...")
    try:
        from stories.models import Story, Playlist
        stories_count = Story.objects.count()
        print(f"üìö –†–∞—Å—Å–∫–∞–∑–æ–≤ –≤ –ë–î: {stories_count}")
        
        if Playlist:
            playlists_count = Playlist.objects.count()
            print(f"üéµ –ü–ª–µ–π–ª–∏—Å—Ç–æ–≤ –≤ –ë–î: {playlists_count}")
        else:
            print("‚ö†Ô∏è –ú–æ–¥–µ–ª—å Playlist –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == '__main__':
    test_urls()
