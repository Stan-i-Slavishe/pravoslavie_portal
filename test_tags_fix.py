#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Ç–µ–≥–æ–≤.
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –ø—É—Å—Ç–æ–π –≤—ã–±–æ—Ä–∫–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ —Ç–µ–≥–∞–º.
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
sys.path.insert(0, os.path.dirname(__file__))

try:
    django.setup()
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django: {e}")
    sys.exit(1)

from django.db import connection
from core.models import Tag
from stories.models import Story
from books.models import Book

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False

def check_tags():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–≥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    print("\nüè∑Ô∏è  –ü–†–û–í–ï–†–ö–ê –¢–ï–ì–û–í:")
    
    try:
        tags_count = Tag.objects.count()
        print(f"üìä –í—Å–µ–≥–æ —Ç–µ–≥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {tags_count}")
        
        if tags_count > 0:
            print("\nüìã –ü–µ—Ä–≤—ã–µ 10 —Ç–µ–≥–æ–≤:")
            for tag in Tag.objects.all()[:10]:
                print(f"   ‚Ä¢ {tag.name} (slug: {tag.slug})")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ–≥ "–¥–æ—á—å"
        try:
            doch_tag = Tag.objects.get(slug='doch')
            print(f"\nüéØ –ù–∞–π–¥–µ–Ω —Ç–µ–≥ '–¥–æ—á—å': {doch_tag.name}")
            return doch_tag
        except Tag.DoesNotExist:
            print("‚ùå –¢–µ–≥ '–¥–æ—á—å' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–µ–≥–æ–≤: {e}")
        return None

def check_stories_with_tags(tag=None):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—Å–∫–∞–∑–æ–≤ —Å —Ç–µ–≥–∞–º–∏"""
    print("\nüé¨ –ü–†–û–í–ï–†–ö–ê –†–ê–°–°–ö–ê–ó–û–í:")
    
    try:
        stories_count = Story.objects.count()
        print(f"üìä –í—Å–µ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–æ–≤: {stories_count}")
        
        if tag:
            # –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–∞—Å—Å–∫–∞–∑—ã —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Ç–µ–≥–æ–º
            stories_with_tag = Story.objects.filter(tags=tag, is_published=True)
            count = stories_with_tag.count()
            print(f"üéØ –†–∞—Å—Å–∫–∞–∑–æ–≤ —Å —Ç–µ–≥–æ–º '{tag.name}': {count}")
            
            if count > 0:
                print("üìã –†–∞—Å—Å–∫–∞–∑—ã —Å —ç—Ç–∏–º —Ç–µ–≥–æ–º:")
                for story in stories_with_tag[:5]:
                    print(f"   ‚Ä¢ {story.title}")
                return stories_with_tag
            else:
                print("‚ö†Ô∏è  –†–∞—Å—Å–∫–∞–∑–æ–≤ —Å —ç—Ç–∏–º —Ç–µ–≥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return None
        else:
            # –ü–æ–∫–∞–∂–µ–º –≤—Å–µ —Ä–∞—Å—Å–∫–∞–∑—ã —Å —Ç–µ–≥–∞–º–∏
            stories_with_any_tags = Story.objects.filter(
                tags__isnull=False,
                is_published=True
            ).distinct()
            count = stories_with_any_tags.count()
            print(f"üìà –†–∞—Å—Å–∫–∞–∑–æ–≤ —Å –ª—é–±—ã–º–∏ —Ç–µ–≥–∞–º–∏: {count}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞—Å—Å–∫–∞–∑–æ–≤: {e}")
        return None

def check_books_with_tags(tag=None):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–∏–≥ —Å —Ç–µ–≥–∞–º–∏"""
    print("\nüìö –ü–†–û–í–ï–†–ö–ê –ö–ù–ò–ì:")
    
    try:
        books_count = Book.objects.count()
        print(f"üìä –í—Å–µ–≥–æ –∫–Ω–∏–≥: {books_count}")
        
        if tag:
            # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–Ω–∏–≥–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Ç–µ–≥–æ–º
            books_with_tag = Book.objects.filter(tags=tag, is_published=True)
            count = books_with_tag.count()
            print(f"üéØ –ö–Ω–∏–≥ —Å —Ç–µ–≥–æ–º '{tag.name}': {count}")
            
            if count > 0:
                print("üìã –ö–Ω–∏–≥–∏ —Å —ç—Ç–∏–º —Ç–µ–≥–æ–º:")
                for book in books_with_tag[:5]:
                    print(f"   ‚Ä¢ {book.title}")
                return books_with_tag
            else:
                print("‚ö†Ô∏è  –ö–Ω–∏–≥ —Å —ç—Ç–∏–º —Ç–µ–≥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return None
        else:
            # –ü–æ–∫–∞–∂–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ —Å —Ç–µ–≥–∞–º–∏
            books_with_any_tags = Book.objects.filter(
                tags__isnull=False,
                is_published=True
            ).distinct()
            count = books_with_any_tags.count()
            print(f"üìà –ö–Ω–∏–≥ —Å –ª—é–±—ã–º–∏ —Ç–µ–≥–∞–º–∏: {count}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–Ω–∏–≥: {e}")
        return None

def test_tag_detail_view_logic(tag):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É TagDetailView"""
    print(f"\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ì–ò–ö–ò TagDetailView –¥–ª—è —Ç–µ–≥–∞ '{tag.name}':")
    
    content_items = []
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ views.py
        print("üé¨ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—Å–∫–∞–∑–æ–≤...")
        stories = Story.objects.filter(
            tags=tag,
            is_published=True
        ).select_related('category')
        
        for story in stories:
            content_items.append({
                'title': story.title,
                'description': story.description,
                'content_type': '–í–∏–¥–µ–æ-—Ä–∞—Å—Å–∫–∞–∑',
                'created_at': story.created_at,
                'category': story.category.name if story.category else '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
                'type': 'story'
            })
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å—Å–∫–∞–∑–æ–≤: {len([i for i in content_items if i['type'] == 'story'])}")
        
        print("üìö –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–∏–≥...")
        books = Book.objects.filter(
            tags=tag,
            is_published=True
        ).select_related('category')
        
        for book in books:
            content_items.append({
                'title': book.title,
                'description': book.description,
                'content_type': '–ö–Ω–∏–≥–∞',
                'created_at': book.created_at,
                'category': book.category.name if book.category else '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
                'type': 'book'
            })
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: {len([i for i in content_items if i['type'] == 'book'])}")
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
        content_items.sort(key=lambda x: x['created_at'], reverse=True)
        
        print(f"\nüìä –ò–¢–û–ì–û –Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(content_items)}")
        
        if content_items:
            print("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:")
            for item in content_items[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   ‚Ä¢ [{item['type'].upper()}] {item['title']} ({item['category']})")
        else:
            print("‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω - —ç—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É!")
            
        return content_items
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return []

def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    print("\nüõ†Ô∏è  –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•:")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–≥ "–¥–æ—á—å" –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        tag, created = Tag.objects.get_or_create(
            slug='doch',
            defaults={
                'name': '–¥–æ—á—å',
                'description': '–†–∞—Å—Å–∫–∞–∑—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ –¥–æ—á–µ—Ä—è—Ö',
                'color': '#e84393'
            }
        )
        
        if created:
            print("‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ–≥ '–¥–æ—á—å'")
        else:
            print("‚ÑπÔ∏è  –¢–µ–≥ '–¥–æ—á—å' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞—Å—Å–∫–∞–∑ –∏ –¥–æ–±–∞–≤–∏—Ç—å –∫ –Ω–µ–º—É —Ç–µ–≥
        stories = Story.objects.filter(is_published=True)[:3]
        if stories:
            for story in stories:
                story.tags.add(tag)
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ–≥ '–¥–æ—á—å' –∫ —Ä–∞—Å—Å–∫–∞–∑—É: {story.title}")
        
        # –¢–æ –∂–µ —Å –∫–Ω–∏–≥–∞–º–∏
        books = Book.objects.filter(is_published=True)[:2]
        if books:
            for book in books:
                book.tags.add(tag)
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ–≥ '–¥–æ—á—å' –∫ –∫–Ω–∏–≥–µ: {book.title}")
                
        return tag
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –¢–ï–ì–û–í")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    if not check_database_connection():
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–≥–æ–≤
    doch_tag = check_tags()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—Å–∫–∞–∑–æ–≤
    check_stories_with_tags(doch_tag)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–∏–≥  
    check_books_with_tags(doch_tag)
    
    if doch_tag:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É view
        content_items = test_tag_detail_view_logic(doch_tag)
        
        if not content_items:
            print("\nüõ†Ô∏è  –ù–ï–¢ –ö–û–ù–¢–ï–ù–¢–ê - –°–û–ó–î–ê–ï–ú –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï")
            new_tag = create_test_data()
            if new_tag:
                print("\nüîÑ –ü–û–í–¢–û–†–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:")
                test_tag_detail_view_logic(new_tag)
    else:
        print("\nüõ†Ô∏è  –°–û–ó–î–ê–ï–ú –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï")
        new_tag = create_test_data()
        if new_tag:
            test_tag_detail_view_logic(new_tag)
    
    print("\n" + "="*50)
    print("‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("\nüí° –†–ï–®–ï–ù–ò–ï: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π TagDetailView —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å")
    print("    –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–µ–≥–æ–º")

if __name__ == '__main__':
    main()
