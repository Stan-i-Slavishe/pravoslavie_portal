#!/usr/bin/env python
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('E:/pravoslavie_portal')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from stories.models import Story
from django.template import Template, Context
from django.template.loader import render_to_string

try:
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—Å–∫–∞–∑
    story = Story.objects.get(slug='kak-svyatoj-luka-doch-spas')
    
    print("=" * 70)
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –®–ê–ë–õ–û–ù–ù–´–• –£–°–õ–û–í–ò–ô")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
    test_conditions = [
        "story.youtube_embed_id",
        "story.youtube_embed_id is not None",
        "story.youtube_embed_id != ''",
        "story.youtube_embed_id|length > 0",
        "story.youtube_url",
        "story.youtube_url is not None"
    ]
    
    for condition in test_conditions:
        template_code = f"""
        {{% load static %}}
        {{% if {condition} %}}
            –£–°–õ–û–í–ò–ï –ò–°–¢–ò–ù–ù–û: {condition}
            YouTube ID: {{{{ story.youtube_embed_id }}}}
            Embed URL: https://www.youtube.com/embed/{{{{ story.youtube_embed_id }}}}
        {{% else %}}
            –£–°–õ–û–í–ò–ï –õ–û–ñ–ù–û: {condition}
            YouTube ID: '{{{{ story.youtube_embed_id }}}}'
            –¢–∏–ø: {{{{ story.youtube_embed_id|default:"None" }}}}
        {{% endif %}}
        """
        
        try:
            template = Template(template_code)
            context = Context({'story': story})
            result = template.render(context)
            
            print(f"\nüß™ –¢–ï–°–¢: {condition}")
            print("-" * 50)
            print(result.strip())
            
        except Exception as e:
            print(f"\n‚ùå –û–®–ò–ë–ö–ê –≤ —É—Å–ª–æ–≤–∏–∏ {condition}: {e}")
    
    print("\n" + "=" * 70)
    print("üé≠ –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ï–ê–õ–¨–ù–û–ì–û –®–ê–ë–õ–û–ù–ê")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ—á–Ω—É—é –∫–æ–ø–∏—é —É—Å–ª–æ–≤–∏—è –∏–∑ —à–∞–±–ª–æ–Ω–∞
    video_template = """
    {% if story.youtube_embed_id %}
        <div class="embed-responsive embed-responsive-16by9">
            <iframe width="100%" 
                    src="https://www.youtube.com/embed/{{ story.youtube_embed_id }}" 
                    frameborder="0" 
                    allowfullscreen>
            </iframe>
        </div>
    {% else %}
        <div class="video-placeholder">
            <i class="bi bi-play-circle"></i>
            <p>–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
            <p>Debug: '{{ story.youtube_embed_id }}'</p>
            <p>Type: {{ story.youtube_embed_id|default:"None"|add:""|length }}</p>
        </div>
    {% endif %}
    """
    
    try:
        template = Template(video_template)
        context = Context({'story': story})
        result = template.render(context)
        
        print("HTML –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print("-" * 50)
        print(result)
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: {e}")
    
    print("\n" + "=" * 70)
    print("üîß –ü–†–û–í–ï–†–ö–ê –°–ê–ú–û–ì–û –®–ê–ë–õ–û–ù–ê STORY_DETAIL.HTML")
    print("=" * 70)
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π —à–∞–±–ª–æ–Ω
    try:
        from django.http import HttpRequest
        from django.contrib.auth.models import AnonymousUser
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π request
        request = HttpRequest()
        request.user = AnonymousUser()
        request.method = 'GET'
        request.session = {}
        
        # –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–∞–∫ –≤ enhanced_story_detail
        context = {
            'story': story,
            'related_stories': [],
            'recommendations': [],
            'user_playlists': [],
            'story_in_playlists': [],
            'story_in_watch_later': [],
            'story_in_favorites': [],
            'user_liked': False,
            'likes_count': 0,
            'comments': [],
            'comments_count': 0,
            'user_reactions': {},
            'previous_story': None,
            'next_story': None,
        }
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å —à–∞–±–ª–æ–Ω
        html = render_to_string('stories/story_detail.html', context, request)
        
        # –ò—â–µ–º —Å–µ–∫—Ü–∏—é —Å –≤–∏–¥–µ–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        if 'video-container' in html:
            lines = html.split('\n')
            for i, line in enumerate(lines):
                if 'video-container' in line:
                    print(f"üé¨ –ù–∞–π–¥–µ–Ω–∞ —Å–µ–∫—Ü–∏—è video-container –Ω–∞ —Å—Ç—Ä–æ–∫–µ {i+1}")
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 10 —Å—Ç—Ä–æ–∫ –≤–æ–∫—Ä—É–≥
                    start = max(0, i-5)
                    end = min(len(lines), i+15)
                    for j in range(start, end):
                        marker = ">>> " if j == i else "    "
                        print(f"{marker}{j+1:3}: {lines[j].strip()}")
                    break
        else:
            print("‚ùå –°–µ–∫—Ü–∏—è video-container –ù–ï –ù–ê–ô–î–ï–ù–ê –≤ HTML")
            
        # –ò—â–µ–º iframe –∏–ª–∏ video-placeholder
        if 'iframe' in html:
            print("‚úÖ iframe –ù–ê–ô–î–ï–ù –≤ HTML")
        elif 'video-placeholder' in html:
            print("‚ùå –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è video-placeholder")
        else:
            print("‚ùì –ù–∏ iframe, –Ω–∏ placeholder –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞: {e}")
        import traceback
        traceback.print_exc()

except Exception as e:
    print(f"‚ùå –û–ë–©–ê–Ø –û–®–ò–ë–ö–ê: {e}")
    import traceback
    traceback.print_exc()

input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
